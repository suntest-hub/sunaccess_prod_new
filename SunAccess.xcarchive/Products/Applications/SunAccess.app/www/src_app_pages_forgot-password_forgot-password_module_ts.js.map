{"version":3,"file":"src_app_pages_forgot-password_forgot-password_module_ts.js","mappings":"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","sources":["./src/app/pages/forgot-password/forgot-password-routing.module.ts","./src/app/pages/forgot-password/forgot-password.module.ts","./src/app/pages/forgot-password/forgot-password.page.ts","./src/app/pages/forgot-password/forgot-password.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ForgotPasswordPage } from './forgot-password.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotPasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ForgotPasswordPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ForgotPasswordPageRoutingModule } from './forgot-password-routing.module';\r\n\r\nimport { ForgotPasswordPage } from './forgot-password.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    ForgotPasswordPageRoutingModule\r\n  ],\r\n  declarations: [ForgotPasswordPage]\r\n})\r\nexport class ForgotPasswordPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { UtilService } from 'src/providers/utils/utils.service';\r\nimport { MenuOptions } from 'src/app/app.component';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateConfigService } from '../../services/translate-config.service';\r\nimport { CheckUserExistenceService } from './checkUserExistenceService';\r\nimport * as HttpStatus from 'http-status-codes';\r\nimport { LoginFirstPage } from '../login-first/login-first.page';\r\nimport { ConfigProvider } from 'src/providers/utils/config';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuController,NavController} from '@ionic/angular';\r\n\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.page.html',\r\n  styleUrls: ['./forgot-password.page.scss'],\r\n})\r\nexport class ForgotPasswordPage implements OnInit {\r\n  forgotpaswordForm: FormGroup;\r\n  selectedLanguage:string;\r\n  isValidUser : boolean;\r\n  isSecret : boolean;\r\n  userIdFromfirstLogin:any;\r\n  constructor(public translate:TranslateService, public utils:UtilService,\r\n    public checkuserExistenceService: CheckUserExistenceService,\r\n    private router: Router, private config: ConfigProvider,private translateConfigService: TranslateConfigService,\r\n    private menuControl: MenuController,public navCtrl: NavController) {\r\n      this.isValidUser = true;\r\n      this.selectedLanguage = this.translateConfigService.getDefaultLanguage();\r\n      this.translateConfigService.setLanguage('en');\r\n      this.userIdFromfirstLogin = history.state.usernameId;\r\n\r\n      //this.config.currentPage.pageName = \"ForgotPasswordPage\";\r\n     }\r\n\r\n  ngOnInit() {\r\n    let EMAIL_PATTERN = ConfigProvider.EMAIL_PATTERN;\r\n    this.forgotpaswordForm = new FormGroup({\r\n    email: new FormControl('', [Validators.required,Validators.pattern(EMAIL_PATTERN)])\r\n      });\r\n  }\r\n  ionViewWillEnter() {\r\n    this.menuControl.enable(true);\r\n    this.utils.component.emit(MenuOptions.FORGOT_PASSWORD);\r\n\r\n  }\r\n  emailCheck(){\r\n    if(this.forgotpaswordForm.valid){\r\n      if (this.utils.isDeviceOnLine()) {\r\n        var username = this.forgotpaswordForm.controls.email.value;\r\n        this.utils.showProgressLoader();\r\n        this.checkuserExistenceService.CheckUserExistence(username).then((res) => {\r\n          try{\r\n            this.utils.dissmisProgressLoader();\r\n            this.isValidUser = true;\r\n          }catch(e){\r\n            let errorMsg = this.translate.instant('generic_msgs.server_err');\r\n            this.isValidUser = false;\r\n            this.utils.showAlert(\"\", errorMsg);\r\n          }\r\n\t\t\t\t}, (err) => {\r\n          this.utils.dissmisProgressLoader();\r\n          if(err['responseJSON'] && err['responseJSON']['statusCode'] == HttpStatus.NOT_FOUND){\r\n            this.utils.showAlert(\"\", this.translate.instant('forgot_pwd_page.invalid_username'));\r\n          }else if(err['responseJSON'] && err['responseJSON']['statusCode'] == HttpStatus.BAD_REQUEST){\r\n            this.utils.showAlert(\"\", this.translate.instant('forgot_pwd_page.err_missing_fields'));\r\n          }else if(err['responseJSON'] &&  err['responseJSON']['statusCode'] == HttpStatus.UNAUTHORIZED){\r\n             //this.navCtrl.setRoot(LoginFirstPage, { animate: true, direction: 'forward' });\r\n          }else if(err.errorCode = \"REQUEST_TIMEOUT\"){\r\n            this.utils.showAlert(\"\", err.errorMsg);\r\n          }else{\r\n          this.utils.showAlert(\"\", this.translate.instant('generic_msgs.server_err'));\r\n          }\r\n\t\t\t\t});\r\n      }else{\r\n        let errorMsg = this.translate.instant('generic_msgs.network_err');\r\n        this.utils.showAlert(\"\", errorMsg);\r\n      }\r\n    }\r\n  }\r\n  navigateToPersonDetails = function(){\r\n     this.router.navigate(['./reset-pwd-with-personal-details'],{state : { email :this.userIdFromfirstLogin, isSecret : false }});\r\n     //this.navCtrl.push(ResetPwdWithPersonalDetailsPage,{\"email\":this.userIdFromfirstLogin,\"isSecret\":false});\r\n  }\r\n  navigateToSecretQuestion = function(){\r\n     //this.navCtrl.push(ResetPwdWithPersonalDetailsPage,{\"email\":this.userIdFromfirstLogin,\"isSecret\":true});\r\n     this.router.navigate(['./reset-pwd-with-personal-details'],{state : { email :this.userIdFromfirstLogin, isSecret : true } });\r\n  }\r\n\r\n}\r\n","<ion-header mode=\"ios\">\r\n  <ion-toolbar color=\"primary\" class=\"toolbar\" >\r\n    <ion-menu-button slot=\"start\" auto-hide=\"false\" color=\"secondary\"></ion-menu-button>\r\n    <ion-title >{{\"forgot_pwd.title\" | translate }}</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"ion-padding ion-no-bounce text_color_base\">\r\n\r\n  <form [formGroup]=\"forgotpaswordForm\"  *ngIf=\"!isValidUser\" class=\"white_container_border_radius ion-padding\">\r\n\r\n    <ion-item  lines=\"none\" class=\"border\">\r\n        <ion-input type=\"email\" placeholder='{{\"forgot_pwd.enterloginid\" | translate }}'  restrict-input restrictInput=\"username\" formControlName=\"email\"></ion-input>\r\n    </ion-item>\r\n        <div class=\"error\" *ngIf=\"forgotpaswordForm.get('email').hasError('required') && forgotpaswordForm.get('email').touched\">\r\n             <p>{{\"emailisrequired\" | translate }}</p>\r\n        </div>\r\n        <div class=\"error\" *ngIf=\"forgotpaswordForm.get('email').hasError('pattern') && !forgotpaswordForm.get('email').hasError('required')\">\r\n             <p>{{\"entervaidemail\" | translate }}</p>\r\n        </div>\r\n        <!-- <ion-row> -->\r\n            <ion-button color=\"secondary\" expand=\"block\"  [disabled]=\"!forgotpaswordForm.valid\" (click)=\"emailCheck()\">\r\n\r\n            {{\"submit\" | translate }}\r\n            </ion-button>\r\n        <!-- </ion-row> -->\r\n</form>\r\n\r\n  <section *ngIf=\"isValidUser\" class=\"white_container_border_radius ion-padding\" >\r\n    <!-- <ion-row > -->\r\n         <ion-button color=\"secondary\" expand=\"block\"  style=\"margin-bottom: 5px;\"  (click)=\"navigateToPersonDetails()\">{{\"enteryourpersonaldetails\" | translate }}</ion-button>\r\n   <!-- </ion-row> -->\r\n\r\n   <!-- <ion-row> -->\r\n           <ion-button color=\"secondary\" expand=\"block\"   style=\"margin-top: 5px;\"  (click)=\"navigateToSecretQuestion()\">{{\"answertosecretquestion\" | translate }}</ion-button>\r\n   <!-- </ion-row>/ -->\r\n </section>\r\n\r\n</ion-content>\r\n"],"names":["RouterModule","ForgotPasswordPage","routes","path","component","ForgotPasswordPageRoutingModule","forChild","imports","exports","CommonModule","FormsModule","ReactiveFormsModule","TranslateModule","IonicModule","ForgotPasswordPageModule","declarations","FormControl","FormGroup","Validators","MenuOptions","HttpStatus","ConfigProvider","i0","constructor","translate","utils","checkuserExistenceService","router","config","translateConfigService","menuControl","navCtrl","navigate","state","email","userIdFromfirstLogin","isSecret","isValidUser","selectedLanguage","getDefaultLanguage","setLanguage","history","usernameId","ngOnInit","EMAIL_PATTERN","forgotpaswordForm","required","pattern","ionViewWillEnter","enable","emit","FORGOT_PASSWORD","emailCheck","valid","isDeviceOnLine","username","controls","value","showProgressLoader","CheckUserExistence","then","res","dissmisProgressLoader","e","errorMsg","instant","showAlert","err","NOT_FOUND","BAD_REQUEST","UNAUTHORIZED","errorCode","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}