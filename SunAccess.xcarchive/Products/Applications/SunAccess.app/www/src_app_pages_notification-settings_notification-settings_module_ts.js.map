{"version":3,"file":"src_app_pages_notification-settings_notification-settings_module_ts.js","mappings":"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","sources":["./src/app/pages/notification-settings/notification-settings-routing.module.ts","./src/app/pages/notification-settings/notification-settings.module.ts","./src/app/pages/notification-settings/notification-settings.page.ts","./src/app/pages/notification-settings/notification-settings.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotificationSettingsPage } from './notification-settings.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificationSettingsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NotificationSettingsPageRoutingModule {}\r\n","import { TranslateModule } from '@ngx-translate/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NotificationSettingsPageRoutingModule } from './notification-settings-routing.module';\r\n\r\nimport { NotificationSettingsPage } from './notification-settings.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    NotificationSettingsPageRoutingModule\r\n  ],\r\n  declarations: [NotificationSettingsPage]\r\n})\r\nexport class NotificationSettingsPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController, MenuController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateConfigService } from 'src/app/services/translate-config.service';\r\nimport { LoggerServiceProvider } from 'src/providers/logger-service/logger-service';\r\nimport { ConfigProvider } from 'src/providers/utils/config';\r\nimport { UtilService } from 'src/providers/utils/utils.service';\r\nimport { LoginService } from '../login/loginService';\r\nimport { notificationSettingservice } from './notificationSettingsService';\r\nimport * as HttpStatus from 'http-status-codes'\r\nimport { PushService } from 'src/providers/push-service/push-service';\r\n\r\n@Component({\r\n  selector: 'app-notification-settings',\r\n  templateUrl: './notification-settings.page.html',\r\n  styleUrls: ['./notification-settings.page.scss'],\r\n})\r\nexport class NotificationSettingsPage implements OnInit {\r\n  selectedLanguage:string;\r\n  announcementVal:boolean;\r\n  policy_relatedVal:boolean;\r\n  marketingVal:boolean;\r\n  pushNotificationFlagVal:boolean;\r\n  isShowingLoader : boolean = false;\r\n    errorMsg : any;\r\n    canTryAgain: boolean = false;\r\n    isSuccess:boolean= false;\r\n    isGetNotificationSettingserviceSuccess: boolean;\r\n\r\n  constructor(\r\n    private translateConfigService: TranslateConfigService,\r\n    public translate:TranslateService,private router: Router,\r\n    private utils: UtilService,  private config: ConfigProvider,\r\n    public loginService: LoginService, private logger: LoggerServiceProvider,\r\n    public menuCtrl: MenuController,  public menu: MenuController,\r\n    private NotificationSettingservice : notificationSettingservice,\r\n    private alertCtrl : AlertController,public pushNotiService:PushService\r\n  ) {\r\n    this.selectedLanguage = this.translateConfigService.getDefaultLanguage();\r\n    this.translateConfigService.setLanguage('en');\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.pushNotificationFlagVal=this.config.userInfo.isNotificationRegistered;\r\n  }\r\n  updatePushNotificationSettings(pushNotiFlagVal){\r\n    setTimeout(()=>{\r\n    this.utils.showProgressLoader();\r\n      if (pushNotiFlagVal){\r\n        this.pushNotiService.registerDevice().then(\r\n          (result)=>{\r\n          this.sendUpdateNotiSettingstoServer(pushNotiFlagVal);\r\n          },(err)=>{\r\n            this.utils.dissmisProgressLoader();\r\n            this.showDialog(\"\", err['message']);\r\n             this.pushNotificationFlagVal=!pushNotiFlagVal;\r\n            this.config.userInfo.isNotificationRegistered=false;\r\n\r\n          });\r\n    }\r\n    else{\r\n         this.pushNotiService.unregisterDevice().then(\r\n          (result)=>{\r\n            this.sendUpdateNotiSettingstoServer(pushNotiFlagVal);\r\n          },(err)=>{\r\n            this.showDialog(\"\", err['message']);\r\n            this.utils.dissmisProgressLoader();\r\n            this.pushNotificationFlagVal=!pushNotiFlagVal;\r\n\r\n          });\r\n    }\r\n    },100);\r\n\r\n  }\r\n  sendUpdateNotiSettingstoServer(pushNotiFlagValue){\r\n        if(this.utils.isDeviceOnLine()){\r\n        this.NotificationSettingservice.updatePushNotificationsetting(pushNotiFlagValue).then((res) => {\r\n          try {\r\n            this.utils.dissmisProgressLoader();\r\n           if (res['responseJSON'] && res['responseJSON']['statusCode'] ==  HttpStatus.OK) {\r\n              this.errorMsg = res['responseJSON']['userMessage'] ;\r\n              this.isSuccess = true;\r\n              this.showDialog(\"\", this.errorMsg);\r\n              this.config.userInfo.isNotificationRegistered=pushNotiFlagValue;\r\n\r\n            }else if(res['responseJSON'] && res['responseJSON']['statusCode'] == HttpStatus.ACCEPTED){\r\n              this.errorMsg = res['responseJSON']['userMessage'] ;\r\n              this.showDialog(\"\", this.errorMsg);\r\n              this.config.userInfo.isNotificationRegistered=pushNotiFlagValue;\r\n            }else{\r\n              this.logger.error(\"PUT USER Notification Settings Update : \" + JSON.stringify(res));\r\n              this.errorMsg = this.translate.instant('generic_msgs.server_err');\r\n              this.isSuccess = false;\r\n             this.pushNotificationFlagVal=!pushNotiFlagValue;\r\n              this.config.userInfo.isNotificationRegistered=!pushNotiFlagValue;\r\n            }\r\n          }catch (e) {\r\n            this.utils.dissmisProgressLoader();\r\n            this.isSuccess = false;\r\n            this.logger.error(\"PUT USER Notification Settings Update : \" + JSON.stringify(e));\r\n            this.errorMsg = this.translate.instant('generic_msgs.server_err');\r\n             this.pushNotificationFlagVal=!pushNotiFlagValue;\r\n            this.config.userInfo.isNotificationRegistered=!pushNotiFlagValue;\r\n          }\r\n        }, (err) => {\r\n          this.utils.dissmisProgressLoader();\r\n          this.isSuccess = false;\r\n          this.logger.error(\"PUT USER Notification Settings Update : \" + JSON.stringify(err));\r\n          this.errorMsg = this.utils.handleServiceException(err);\r\n             this.pushNotificationFlagVal=!pushNotiFlagValue;\r\n          this.config.userInfo.isNotificationRegistered=!pushNotiFlagValue;\r\n        });\r\n      }else{\r\n        this.isShowingLoader = false;\r\n        this.isSuccess = false;\r\n        this.errorMsg = this.translate.instant('generic_msgs.network_err');\r\n             this.pushNotificationFlagVal=!pushNotiFlagValue;\r\n        this.config.userInfo.isNotificationRegistered=!pushNotiFlagValue;\r\n      }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n      /**\r\n   *\r\n   * @param title - this is the title of the alert\r\n   * @param message  - message that need to display on the alert.\r\n   */\r\n  showDialog(title: string, message: string) {\r\n    let buttons = [{\r\n         text: 'Ok',\r\n         // handler: () => {\r\n         //    this.navCtrl.pop();\r\n         // }\r\n     }];\r\n     const alert: any = this.alertCtrl.create({\r\n      header: title,\r\n      message: message,\r\n      buttons: buttons\r\n    }).then((alert) => alert.present());\r\n  }\r\n}\r\n","<ion-header mode=\"ios\">\r\n  <ion-toolbar color=\"primary\" class=\"toolbar\">\r\n    <ion-menu-button slot=\"start\" auto-hide=\"false\" color=\"secondary\"></ion-menu-button>\r\n    <ion-title class=\"bold-font\">{{\"notification_settings_page.title\" | translate }}</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"app_bg1 ion-padding\" no-bounce >\r\n  <ion-list class=\"white_container_border_radius text_color_base \">\r\n        <ion-row >\r\n          <ion-col size=\"10\" class=\"margin_top_bottom_auto\">\r\n              <ion-label class=\"label-margin\">Push Notification</ion-label>\r\n                </ion-col>\r\n         <ion-col size=\"2\" text-center class=\"toggleItem\">\r\n            <label class=\"switch\">\r\n            <input type=\"checkbox\" [(ngModel)]=\"pushNotificationFlagVal\" (change)=\"updatePushNotificationSettings(pushNotificationFlagVal)\">\r\n              <span class=\"slider round\"></span>\r\n            </label>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-list>\r\n</ion-content>\r\n"],"names":["RouterModule","NotificationSettingsPage","routes","path","component","NotificationSettingsPageRoutingModule","forChild","imports","exports","TranslateModule","CommonModule","FormsModule","IonicModule","NotificationSettingsPageModule","declarations","HttpStatus","constructor","translateConfigService","translate","router","utils","config","loginService","logger","menuCtrl","menu","NotificationSettingservice","alertCtrl","pushNotiService","selectedLanguage","getDefaultLanguage","setLanguage","ngOnInit","pushNotificationFlagVal","userInfo","isNotificationRegistered","updatePushNotificationSettings","pushNotiFlagVal","setTimeout","showProgressLoader","registerDevice","then","result","sendUpdateNotiSettingstoServer","err","dissmisProgressLoader","showDialog","unregisterDevice","pushNotiFlagValue","isDeviceOnLine","updatePushNotificationsetting","res","OK","errorMsg","isSuccess","ACCEPTED","error","JSON","stringify","instant","e","handleServiceException","isShowingLoader","title","message","buttons","text","alert","create","header","present","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}