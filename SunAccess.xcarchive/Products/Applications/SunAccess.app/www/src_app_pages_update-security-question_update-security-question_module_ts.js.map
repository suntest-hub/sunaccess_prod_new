{"version":3,"file":"src_app_pages_update-security-question_update-security-question_module_ts.js","mappings":"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","sources":["./src/app/pages/update-security-question/update-security-question-routing.module.ts","./src/app/pages/update-security-question/update-security-question.module.ts","./src/app/pages/update-security-question/update-security-question.page.ts","./src/app/pages/update-security-question/update-security-question.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UpdateSecurityQuestionPage } from './update-security-question.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UpdateSecurityQuestionPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UpdateSecurityQuestionPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UpdateSecurityQuestionPageRoutingModule } from './update-security-question-routing.module';\r\n\r\nimport { UpdateSecurityQuestionPage } from './update-security-question.page';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    UpdateSecurityQuestionPageRoutingModule\r\n  ],\r\n  declarations: [UpdateSecurityQuestionPage]\r\n})\r\nexport class UpdateSecurityQuestionPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController, PopoverController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateConfigService } from 'src/app/services/translate-config.service';\r\nimport { AuthHandlerProvider } from 'src/providers/auth-handler/auth-handler';\r\nimport { JsonStoreProvider } from 'src/providers/json-store/json-store';\r\nimport { LoggerServiceProvider } from 'src/providers/logger-service/logger-service';\r\nimport { ConfigProvider } from 'src/providers/utils/config';\r\nimport { UtilService } from 'src/providers/utils/utils.service';\r\nimport { LoginService } from '../login/loginService';\r\nimport * as HttpStatus from 'http-status-codes';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { SecurityQuestionsService } from '../sign-up/securityQuestionsService';\r\nimport { UpdateSecurityQuestionService } from './updateSecurityQuestionService';\r\n\r\n@Component({\r\n  selector: 'app-update-security-question',\r\n  templateUrl: './update-security-question.page.html',\r\n  styleUrls: ['./update-security-question.page.scss'],\r\n})\r\nexport class UpdateSecurityQuestionPage implements OnInit {\r\n  selectedLanguage:string;\r\n  updateSecurityQuestionForm: FormGroup;\r\n  isShowingLoader : boolean = false;\r\n  errorMsg : any;\r\n  isGetSecurityQuestionsListServiceSuccess : boolean;\r\n  isGetUsrOptdSecurityQuestionServiceSuccess : boolean;\r\n  questions :any = [];\r\n  canTryAgain: boolean = false;\r\n  isSuccess:boolean= false;\r\n  constructor(\r\n    public utils: UtilService,private config: ConfigProvider,\r\n    private alertCtrl: AlertController, public authHandler: AuthHandlerProvider,\r\n    public jsonStore: JsonStoreProvider,private logger: LoggerServiceProvider,\r\n    public loginService:LoginService, public popOverCtrl:PopoverController,\r\n    public translate: TranslateService,private router: Router,\r\n    private translateConfigService: TranslateConfigService,\r\n    private getSecurityQuestionsListService : SecurityQuestionsService,\r\n    private updateSecurityQuestionService : UpdateSecurityQuestionService,\r\n  ) {\r\n    this.selectedLanguage = this.translateConfigService.getDefaultLanguage();\r\n    this.translateConfigService.setLanguage('en');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getSecurityQuestions();\r\n\r\n    this.updateSecurityQuestionForm = new FormGroup({\r\n      oldSecurityQuestion: new FormControl({ value: '', disabled: true }),\r\n      oldSecurityAnswer: new FormControl({ value: '', disabled: true }),\r\n      newSecurityQuestion: new FormControl('', [Validators.required]),\r\n      newSecurityAnswer: new FormControl('', [Validators.required,Validators.minLength(1)])\r\n    });\r\n  }\r\n  updateSecurityQuestion(){\r\n    if(this.updateSecurityQuestionForm.valid){\r\n      this.logger.trace(\"POST USER Security Question Update--start\");\r\n      this.utils.showProgressLoader();\r\n      let newSecurityQuestion = this.updateSecurityQuestionForm.controls.newSecurityQuestion.value;\r\n      let newSecurityAnswer = this.updateSecurityQuestionForm.controls.newSecurityAnswer.value;\r\n      if(this.utils.isDeviceOnLine()){\r\n        this.updateSecurityQuestionService.updateUserSecurityQuestion(newSecurityQuestion,newSecurityAnswer).then((res) => {\r\n          try {\r\n            this.utils.dissmisProgressLoader();\r\n           if (res['responseJSON'] && res['responseJSON']['statusCode'] ==  HttpStatus.OK) {\r\n              this.errorMsg = res['responseJSON']['userMessage'] ;\r\n              this.isSuccess = true;\r\n              this.showDialog(\"\", this.errorMsg);\r\n            }else if(res['responseJSON'] && res['responseJSON']['statusCode'] == HttpStatus.ACCEPTED){\r\n              this.errorMsg = res['responseJSON']['userMessage'] ;\r\n              this.showDialog(\"\", this.errorMsg);\r\n            }else{\r\n              this.logger.error(\"POST USER Security Question Update : \" + JSON.stringify(res));\r\n              this.errorMsg = this.translate.instant('generic_msgs.server_err');\r\n              this.isSuccess = false;\r\n            }\r\n          }catch (e) {\r\n            this.utils.dissmisProgressLoader();\r\n            this.isSuccess = false;\r\n            this.logger.error(\"POST USER Security Question Update : \" + JSON.stringify(e));\r\n            this.errorMsg = this.translate.instant('generic_msgs.server_err');\r\n          }\r\n        }, (err) => {\r\n          this.utils.dissmisProgressLoader();\r\n          this.isSuccess = false;\r\n          this.logger.error(\"POST USER Security Question Update : \" + JSON.stringify(err));\r\n          this.errorMsg = this.utils.handleServiceException(err);\r\n        });\r\n      }else{\r\n        this.isShowingLoader = false;\r\n        this.isSuccess = false;\r\n        this.errorMsg = this.translate.instant('generic_msgs.network_err');\r\n      }\r\n    }\r\n  }\r\n\r\n  /* service call to get security questions drop down */\r\n  getSecurityQuestions(){\r\n    if(!(this.questions.length>0)){\r\n      if(this.utils.isDeviceOnLine()){\r\n        this.isShowingLoader = true;\r\n        this.logger.trace(\"Security Questions--get security questions list--start\");\r\n        this.getSecurityQuestionsListService.getSecurityQuestions().then(\r\n          (result)=>{\r\n            try {\r\n              this.isShowingLoader = false;\r\n              if (result['responseJSON'] && result['responseJSON']['statusCode'] == HttpStatus.OK) {\r\n                this.isGetSecurityQuestionsListServiceSuccess = true;\r\n                this.questions = result['responseJSON']['array'];\r\n                this.updateSecurityQuestionForm.controls['newSecurityQuestion'].setValue(this.questions[0]['Type'], {onlySelf: true});\r\n                this.getUserOptedSecurityQuestion();\r\n                if(!(this.questions.length>0)){\r\n                  this.canTryAgain = true;\r\n                  this.isGetSecurityQuestionsListServiceSuccess = false;\r\n                  this.errorMsg = this.translate.instant('update_security_ques.err_security_question');\r\n                  this.logger.error(\"No Security Questions Found: Security Questions--Get Security Questions List \"+JSON.stringify(result));\r\n                }\r\n              }else{\r\n                this.canTryAgain = true;\r\n                this.isGetSecurityQuestionsListServiceSuccess = false;\r\n                this.errorMsg= this.translate.instant('generic_msgs.server_err');\r\n                this.logger.error(\"error occured: Security Questions--Get Security Questions List \"+JSON.stringify(result));\r\n              }\r\n            }catch (e) {\r\n              this.isShowingLoader = false;\r\n              this.canTryAgain = true;\r\n              this.isGetSecurityQuestionsListServiceSuccess = false;\r\n              this.logger.error(\"error occured: Security Questions--Get Security Questions List: \" + JSON.stringify(e));\r\n              this.errorMsg = this.translate.instant('generic_msgs.server_err');\r\n            }\r\n          },(err)=>{\r\n            this.canTryAgain = true;\r\n            this.isShowingLoader = false;\r\n            this.isGetSecurityQuestionsListServiceSuccess = false;\r\n            this.logger.error(\"error occured: Security Questions--Get Security Questions List : \" + JSON.stringify(err));\r\n           this.errorMsg = this.utils.handleServiceException(err);\r\n          });\r\n      }else{\r\n        this.isShowingLoader = false;\r\n        this.canTryAgain = true;\r\n        this.isGetSecurityQuestionsListServiceSuccess = true;\r\n        this.errorMsg= this.translate.instant('generic_msgs.network_err');\r\n      }\r\n    }\r\n  }\r\n  getUserOptedSecurityQuestion(){\r\n    if(this.utils.isDeviceOnLine()){\r\n      this.isShowingLoader = true;\r\n      this.logger.trace(\"Security Questions--getUserOptedSecurityQuestion--start\");\r\n      this.updateSecurityQuestionService.getUserSecurityQuestion().then(\r\n        (result)=>{\r\n          try {\r\n            this.isShowingLoader = false;\r\n            if (result['responseJSON'] && result['responseJSON']['statusCode'] == HttpStatus.OK) {\r\n            this.isGetUsrOptdSecurityQuestionServiceSuccess = true;\r\n            this.updateSecurityQuestionForm.controls['oldSecurityQuestion'].setValue(result['responseJSON']['question']);\r\n            this.updateSecurityQuestionForm.controls.oldSecurityAnswer.setValue(result['responseJSON']['answer']);\r\n            }else{\r\n              this.canTryAgain = true;\r\n              this.isGetUsrOptdSecurityQuestionServiceSuccess = false;\r\n              this.errorMsg=  this.translate.instant('generic_msgs.server_err');\r\n              this.logger.error(\"error occured: Security Questions--getUserOptedSecurityQuestion \"+JSON.stringify(result));\r\n            }\r\n          }catch (e) {\r\n            this.isShowingLoader = false;\r\n            this.canTryAgain = true;\r\n            this.isGetUsrOptdSecurityQuestionServiceSuccess = false;\r\n            this.logger.error(\"Security Questions--getUserOptedSecurityQuestion  catch eror : \" + JSON.stringify(e));\r\n            this.errorMsg = this.translate.instant('generic_msgs.server_err');\r\n          }\r\n        },(err)=>{\r\n          this.isShowingLoader = false;\r\n          this.canTryAgain = true;\r\n          this.isGetUsrOptdSecurityQuestionServiceSuccess = false;\r\n          this.logger.error(\"Security Questions--getUserOptedSecurityQuestion  catch eror : \" + JSON.stringify(err));\r\n          this.errorMsg = this.utils.handleServiceException(err);\r\n\r\n        });\r\n    }else{\r\n      this.isShowingLoader = false;\r\n      this.canTryAgain = true;\r\n      this.isGetUsrOptdSecurityQuestionServiceSuccess = false;\r\n      this.errorMsg= this.translate.instant('generic_msgs.network_err');\r\n    }\r\n}\r\n/** this metho will call when user clicks on tryAgain button\r\n * scenario : when getScurityQuestionsList or getUserOptdSecurityQuestion services failed\r\n */\r\ntryAgain(){\r\n  if(this.isGetSecurityQuestionsListServiceSuccess && !this.isGetUsrOptdSecurityQuestionServiceSuccess){\r\n    this.getSecurityQuestions();\r\n  }else if(!this.isGetSecurityQuestionsListServiceSuccess && this.isGetUsrOptdSecurityQuestionServiceSuccess){\r\n    this.getUserOptedSecurityQuestion();\r\n  }else{\r\n    this.getSecurityQuestions();\r\n    this.getUserOptedSecurityQuestion();\r\n  }\r\n}\r\nshowDialog(title: string, message: string) {\r\n  let buttons = [{\r\n       text: 'Ok',\r\n       handler: () => {\r\n          //this.navCtrl.pop();\r\n       }\r\n   }];\r\n\r\n   const alert: any = this.alertCtrl.create({\r\n    header: title,\r\n    message: message,\r\n    buttons: buttons\r\n  }).then((alert) => alert.present());\r\n}\r\n}\r\n","<ion-header mode=\"ios\">\r\n  <ion-toolbar color=\"primary\" class=\"toolbar\" >\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button style=\"padding-left:15px; font-size:0.7rem;\" text=\"\" icon=\"chevron-back-outline\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title class=\"bold-font\">{{\"update_security_ques.title\" | translate }} </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content no-bounce  class=\"app_bg1 text_color_base ion-padding\">\r\n  <section class=\"spinnersection ion-text-center\" *ngIf=\"isShowingLoader\">\r\n    <ion-spinner style=\"height:98%;\" name=\"lines-sharp-small\"></ion-spinner>\r\n  </section>\r\n  <section  *ngIf=\"errorMsg && !canTryAgain && !isShowingLoader\" [ngClass]=\"{'sucess': isSuccess, 'fail': !isSuccess}\">\r\n      <span>{{errorMsg}}</span>\r\n  </section>\r\n  <section class=\"errorMsgSection\"  *ngIf=\"canTryAgain && !isShowingLoader\">\r\n    <span>{{errorMsg}}</span>\r\n    <button *ngIf=\"canTryAgain\" (click)=\"tryAgain()\">{{\"generic_msgs.try_again\" | translate }}</button>\r\n</section>\r\n  <div class=\"white_container_border_radius\" *ngIf=\"!canTryAgain && !isShowingLoader\">\r\n    <form  [formGroup]=\"updateSecurityQuestionForm\" margin>\r\n      <p style=\"padding-top:10px\" position=\"stacked\" > {{\"update_security_ques.old_security_ques\" | translate }}</p>\r\n      <ion-item  lines=\"none\" class=\"border\">\r\n              <ion-input  placeholder='{{\"update_security_ques.old_security_ques\" | translate }}' disabled=\"true\" formControlName=\"oldSecurityQuestion\"></ion-input>\r\n      </ion-item>\r\n      <p position=\"stacked\" >{{\"update_security_ques.old_security_ans\" | translate }}</p>\r\n      <ion-item  lines=\"none\" class=\"border\">\r\n            <ion-input  placeholder='{{\"update_security_ques.old_security_ans\" | translate }}'  disabled=\"true\" formControlName=\"oldSecurityAnswer\" [value]=\"Cricket\"></ion-input>\r\n      </ion-item>\r\n      <p position=\"stacked\" >{{\"update_security_ques.new_security_ques\" | translate }} <span class=\"mandatory_star\">*</span></p>\r\n      <ion-item  lines=\"none\" class=\"border\">\r\n            <ion-select interface=\"popover\" mode='md' formControlName=\"newSecurityQuestion\">\r\n              <ion-select-option *ngFor=\"let question of questions ;let i= index \" [value]=\"question.type\" [selected]=\"i === 0\">{{question.question}}</ion-select-option>\r\n            </ion-select>\r\n      </ion-item>\r\n      <!-- <ion-list >\r\n        <ion-item  lines=\"none\" class=\"border\">\r\n            <ion-select placeholder=\"Select The Security Question\" style=\"width:100%\" interface=\"popover\" mode='md' formControlName=\"securityQuestion\" [(ngModel)]=\"selectOptions\">\r\n                    <ion-select-option  *ngFor=\"let question of questions let i= index \"[value]=\"question.type\">{{question.question}}</ion-select-option>\r\n            </ion-select>\r\n        </ion-item >\r\n      </ion-list> -->\r\n      <p position=\"stacked\" > {{\"update_security_ques.new_security_ans\" | translate }} <span class=\"mandatory_star\">*</span></p>\r\n      <ion-item  lines=\"none\" class=\"border\">\r\n        <ion-input  placeholder='{{\"update_security_ques.new_security_ans_plc\" | translate }}' restrict-input restrictInput=\"alphanumericwithspace\" amaxlength=\"50\"  formControlName=\"newSecurityAnswer\"></ion-input>\r\n      </ion-item>\r\n      <div class=\"errPosition\" *ngIf=\"updateSecurityQuestionForm.get('newSecurityAnswer').hasError('required') && updateSecurityQuestionForm.get('newSecurityAnswer').touched\">\r\n          <span class=\"mandatory_star\">{{\"update_security_ques.err_new_security_ques\" | translate }}</span>\r\n      </div>\r\n      <div class=\"errPosition\" *ngIf=\"updateSecurityQuestionForm.get('newSecurityAnswer').hasError('minlength') && updateSecurityQuestionForm.get('newSecurityAnswer').touched\">\r\n          <span class=\"mandatory_star\">{{\"update_security_ques.err_securityLength_req\" | translate }}</span>\r\n      </div>\r\n       <ion-row  text-center align-items-center>\r\n              <ion-col >\r\n                  <ion-button  class=\"btn_center\" (click)=\"updateSecurityQuestion()\" [disabled]=\"!updateSecurityQuestionForm.valid\">{{\"update_security_ques.reset\" | translate }}</ion-button>\r\n              </ion-col>\r\n      </ion-row>\r\n</form>\r\n</div>\r\n</ion-content>\r\n"],"names":["RouterModule","UpdateSecurityQuestionPage","routes","path","component","UpdateSecurityQuestionPageRoutingModule","forChild","imports","exports","CommonModule","FormsModule","ReactiveFormsModule","IonicModule","TranslateModule","UpdateSecurityQuestionPageModule","declarations","HttpStatus","FormControl","FormGroup","Validators","i0","constructor","utils","config","alertCtrl","authHandler","jsonStore","logger","loginService","popOverCtrl","translate","router","translateConfigService","getSecurityQuestionsListService","updateSecurityQuestionService","selectedLanguage","getDefaultLanguage","setLanguage","ngOnInit","getSecurityQuestions","updateSecurityQuestionForm","oldSecurityQuestion","value","disabled","oldSecurityAnswer","newSecurityQuestion","required","newSecurityAnswer","minLength","updateSecurityQuestion","valid","trace","showProgressLoader","controls","isDeviceOnLine","updateUserSecurityQuestion","then","res","dissmisProgressLoader","OK","errorMsg","isSuccess","showDialog","ACCEPTED","error","JSON","stringify","instant","e","err","handleServiceException","isShowingLoader","questions","length","result","isGetSecurityQuestionsListServiceSuccess","setValue","onlySelf","getUserOptedSecurityQuestion","canTryAgain","getUserSecurityQuestion","isGetUsrOptdSecurityQuestionServiceSuccess","tryAgain","title","message","buttons","text","handler","alert","create","header","present","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}