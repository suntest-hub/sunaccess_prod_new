{"version":3,"file":"src_app_pages_healthinfo-detail_healthinfo-detail_module_ts.js","mappings":"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","sources":["./src/app/pages/healthinfo-detail/healthinfo-detail-routing.module.ts","./src/app/pages/healthinfo-detail/healthinfo-detail.module.ts","./src/app/pages/healthinfo-detail/healthinfo-detail.page.ts","./src/app/pages/healthinfo-detail/healthinfo-detail.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HealthinfoDetailPage } from './healthinfo-detail.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HealthinfoDetailPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class HealthinfoDetailPageRoutingModule {}\r\n","import { TranslateModule } from '@ngx-translate/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { HealthinfoDetailPageRoutingModule } from './healthinfo-detail-routing.module';\r\n\r\nimport { HealthinfoDetailPage } from './healthinfo-detail.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    HealthinfoDetailPageRoutingModule\r\n  ],\r\n  declarations: [HealthinfoDetailPage]\r\n})\r\nexport class HealthinfoDetailPageModule {}\r\n","import { Component, ElementRef, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateConfigService } from 'src/app/services/translate-config.service';\r\nimport { LoggerServiceProvider } from 'src/providers/logger-service/logger-service';\r\nimport { ConfigProvider } from 'src/providers/utils/config';\r\nimport { UtilService } from 'src/providers/utils/utils.service';\r\nimport { HealthinfoDetailService } from './healthinfoDetailService';\r\nimport * as HttpStatus from 'http-status-codes';\r\nimport { Renderer2 } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-healthinfo-detail',\r\n  templateUrl: './healthinfo-detail.page.html',\r\n  styleUrls: ['./healthinfo-detail.page.scss'],\r\n})\r\nexport class HealthinfoDetailPage implements OnInit {\r\n  selectedLanguage:string;\r\n  helathInfoId:any;\r\n  isShowingLoader:any;\r\n  canTryAgain = false;\r\n  healthInfodetails :any;\r\n  errorMsg :any;\r\n  isSuccess:boolean= false;\r\n  getHealthInfoDetailsData=false;\r\n  NotiImg:any;\r\n  headerData:any;\r\n  bodyData:any;\r\n  constructor(\r\n    private translateConfigService: TranslateConfigService,\r\n    public translate:TranslateService,\r\n    public utils:UtilService,public detailsService:HealthinfoDetailService,\r\n    public logger:LoggerServiceProvider,\r\n    public config: ConfigProvider,public elementRef: ElementRef,public renderer: Renderer2\r\n  ) {\r\n    this.selectedLanguage = this.translateConfigService.getDefaultLanguage();\r\n    this.translateConfigService.setLanguage('en');\r\n    this.utils.analytics(\"HealthinfoDetail\");\r\n    this.helathInfoId = history.state.data;\r\n    this.config.currentPage.pageName = \"HealthinfoDetailPage\";\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.getHealthInfoDetails();\r\n     /**\r\n   * This method is used to get details selected Notification\r\n   */\r\n  }\r\n\r\n  getHealthInfoDetails(){\r\n    if(this.utils.isDeviceOnLine()){\r\n      this.canTryAgain = false;\r\n      let getHelathInfoId=this.helathInfoId;\r\n      this.detailsService.getHealthInfoDetails(getHelathInfoId).then(\r\n        (response)=>{\r\n          try{\r\n          if (response['responseJSON'] && response['responseJSON']['statusCode'] == HttpStatus.OK) {\r\n            this.healthInfodetails=(response['responseJSON']);\r\n              this.isShowingLoader = false;\r\n              this.getHealthInfoDetailsData=true;\r\n              document.getElementById(\"HeaderDiv\").innerHTML = this.healthInfodetails.head;\r\n              document.getElementById(\"bodyDiv\").innerHTML = this.healthInfodetails.body;\r\n              // setTimeout(() => {\r\n                   this.listenFunc();\r\n              //  }, 500);\r\n\r\n            }else{\r\n              this.errorMsg= response['responseJSON']['error_description'];\r\n              this.getHealthInfoDetailsData=false;\r\n            }\r\n          }catch(e){\r\n            this.utils.dissmisProgressLoader();\r\n            this.isShowingLoader = false;\r\n            this.canTryAgain = true;\r\n            this.errorMsg= this.translate.instant('generic_msgs.server_err');\r\n            this.getHealthInfoDetailsData=false;\r\n          }\r\n        },\r\n        (error)=>{\r\n          this.utils.dissmisProgressLoader();\r\n          this.isShowingLoader = false;\r\n          this.canTryAgain = true;\r\n          this.errorMsg = this.utils.handleServiceException(error);\r\n          this.getHealthInfoDetailsData=false;\r\n        }\r\n      );\r\n    }else{\r\n      this.utils.dissmisProgressLoader();\r\n      this.isShowingLoader = false;\r\n      this.canTryAgain = true;\r\n      this.errorMsg= this.translate.instant('generic_msgs.network_err');\r\n      this.getHealthInfoDetailsData=false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method is used to set the notification as read\r\n   */\r\n\r\n     /** this method will call when user click on delete button on notification detail page\r\n   * This method is used to delete the Notifications .\r\n   */\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Method used to repalce 'bpp1.' with ''\r\n   * @param link - Image Url that need to be changed\r\n   */\r\n  replaceURL(link: any) {\r\n    //if (link != null && link != undefined) {\r\n     // link = link.replace('bpp1.', '');\r\n      return link;\r\n   //}\r\n  }\r\n listenFunc (){\r\n      this.renderer.listen(this.elementRef.nativeElement, 'click', (event) => {\r\n\r\n            event.preventDefault();\r\n            if(event.target.href){\r\n              this.utils.showProgressLoader();\r\n              this.utils.openLink(event.target.href);\r\n             this.utils.dissmisProgressLoader();\r\n            }\r\n\r\n            else if (event.target.parentElement.href){\r\n              this.utils.showProgressLoader();\r\n              this.utils.openLink(event.target.parentElement.href);\r\n              this.utils.dissmisProgressLoader();\r\n\r\n            }\r\n\r\n })\r\n\r\n  }\r\n\r\n}\r\n","<ion-header mode=\"ios\" >\r\n  <ion-toolbar color=\"primary\" >\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button style=\"padding-left:15px; font-size:0.7rem;\" text=\"\" icon=\"chevron-back-outline\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title class=\"bold-font\"> {{\"healthinfo.health_info\" | translate }}</ion-title>\r\n   </ion-toolbar >\r\n </ion-header>\r\n\r\n\r\n <ion-content  no-bounce class=\"app_bg2 text_color_base ion-padding\">\r\n  <section class=\"errorMsgSection white_container_border_radius\"   *ngIf=\"!getHealthInfoDetailsData && !isShowingLoader\">\r\n      <span>{{errorMsg}}</span>\r\n      <button *ngIf=\"canTryAgain\" (click)=\"getHealthInfoDetails()\">{{\"generic_msgs.try_again\" | translate }}</button>\r\n  </section>\r\n  <section  class=\"font_size_16\" >\r\n  <div class=\"white_container_border_radius text_color_base padding_015\">\r\n  <ion-row id=\"HeaderDiv\"></ion-row>\r\n  <ion-row id=\"bodyDiv\"></ion-row>\r\n  </div>\r\n</section>\r\n</ion-content>\r\n"],"names":["RouterModule","HealthinfoDetailPage","routes","path","component","HealthinfoDetailPageRoutingModule","forChild","imports","exports","TranslateModule","CommonModule","FormsModule","IonicModule","HealthinfoDetailPageModule","declarations","HttpStatus","i0","constructor","translateConfigService","translate","utils","detailsService","logger","config","elementRef","renderer","selectedLanguage","getDefaultLanguage","setLanguage","analytics","helathInfoId","history","state","data","currentPage","pageName","ngOnInit","getHealthInfoDetails","isDeviceOnLine","canTryAgain","getHelathInfoId","then","response","OK","healthInfodetails","isShowingLoader","getHealthInfoDetailsData","document","getElementById","innerHTML","head","body","listenFunc","errorMsg","e","dissmisProgressLoader","instant","error","handleServiceException","replaceURL","link","listen","nativeElement","event","preventDefault","target","href","showProgressLoader","openLink","parentElement","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}