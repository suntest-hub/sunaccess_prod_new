{"version":3,"file":"src_app_pages_dashboard-after-login_dashboard-after-login_module_ts.js","mappings":"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","sources":["./src/app/pages/dashboard-after-login/dashboard-after-login-routing.module.ts","./src/app/pages/dashboard-after-login/dashboard-after-login.module.ts","./src/app/pages/dashboard-after-login/dashboard-after-login.page.ts","./src/app/pages/dashboard-after-login/dashboard-after-login.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DashboardAfterLoginPage } from './dashboard-after-login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardAfterLoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DashboardAfterLoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {  TranslateModule } from '@ngx-translate/core';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { DashboardAfterLoginPageRoutingModule } from './dashboard-after-login-routing.module';\r\n\r\nimport { DashboardAfterLoginPage } from './dashboard-after-login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    DashboardAfterLoginPageRoutingModule\r\n  ],\r\n  declarations: [DashboardAfterLoginPage]\r\n})\r\nexport class DashboardAfterLoginPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ConfigProvider } from 'src/providers/utils/config';\r\nimport { UtilService } from 'src/providers/utils/utils.service';\r\nimport { MenuController, Platform, ModalController, ToastController,IonApp } from '@ionic/angular';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LoggerServiceProvider } from 'src/providers/logger-service/logger-service';\r\nimport { AuthHandlerProvider } from 'src/providers/auth-handler/auth-handler';\r\nimport { MenuOptions } from 'src/app/app.component';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n // import { Events } from 'ionic-angular';\r\nimport { DatePipe } from '@angular/common';\r\nimport { TranslateConfigService } from '../../services/translate-config.service';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n // import { PushService } from '../../providers/push-service/push-service';\r\n// import { AppAvailability } from '@ionic-native/app-availability';\r\nimport { InAppBrowser } from '@awesome-cordova-plugins/in-app-browser/ngx';\r\nimport * as HttpStatus from 'http-status-codes';\r\nimport introJs from 'intro.js';\r\nimport { EMedicalCardService } from '../e-medical-card/eMedicalCardService';\r\nimport { AlertController} from '@ionic/angular';\r\nimport { PushService } from 'src/providers/push-service/push-service';\r\nimport { notificationSettingservice } from '../notification-settings/notificationSettingsService';\r\n\r\n\r\ndeclare var WLResourceRequest:any;\r\n@Component({\r\n  selector: 'app-dashboard-after-login',\r\n  templateUrl: './dashboard-after-login.page.html',\r\n  styleUrls: ['./dashboard-after-login.page.scss'],\r\n})\r\nexport class DashboardAfterLoginPage implements OnInit {\r\n\r\n  // default profile image\r\n  userDetails: any = {\r\n    \"profilePicture\": \"assets/imgs/empty-avatar.jpg\"\r\n  };\r\n\r\n  public lastLoginDate: string = this.utils.getlastLoginDate();\r\n  public passwordReminderMsg: string = this.utils.getPasswordReminderMsg();\r\n  public showPasswordExpirationMsgFlag: string = this.utils.getshowPasswordReminderMsg();\r\n  public dat: any = this.lastLoginDate.split(\"/\", 3);\r\n  public dat1 = this.dat[1] + \"/\" + this.dat[0] + \"/\" + this.dat[2];\r\n  public lastDate: string;\r\n  lastTap: any = Date.now();\r\n  name : any ;\r\n\r\n  notiBadge : any;\r\n  subscribedtags:any;\r\n  userSubscribed:any;\r\n  isAppInstalled: boolean;\r\n  comingFromLoginFlagVal:any;\r\n  introJS = introJs();\r\n  comingfromWelcomeTour: any;\r\n  constructor(\r\n   // public navCtrl: NavController,\r\n     public router: Router,\r\n    public platform: Platform,\r\n      private utils: UtilService,\r\n      public translate: TranslateService,\r\n    private logger: LoggerServiceProvider,\r\n     private config: ConfigProvider,\r\n    //  public events: Events,\r\n       private datePipe: DatePipe,\r\n    public translateConfig: TranslateConfigService,\r\n     public authHandler: AuthHandlerProvider,\r\n     public _DomSanitizer: DomSanitizer,\r\n   // public ionicApp: IonicApp,\r\n   //  private appAvailability: AppAvailability,\r\n     private iab: InAppBrowser,\r\n    public alertCtrl: AlertController,\r\n    private NotificationSettingservice : notificationSettingservice,\r\n     public menuCtrl: MenuController,\r\n     public eMedicalCardSrvc: EMedicalCardService,\r\n     public pushNotiService:PushService,\r\n     public ModalController:ModalController,\r\n     public ToastController:ToastController\r\n    ) {\r\n\r\n    this.utils.analytics(\"dashboardAfterLogin\");\r\n    if (this.config.userDetails.profilePicture != \"data:image/jpeg;base64,\" && this.config.userDetails.profilePicture != undefined &&\r\n      this.config.userDetails.profilePicture != \"unsafe:data:image/jpeg;base64,\") {\r\n      this.userDetails.profilePicture = this._DomSanitizer.bypassSecurityTrustUrl(this.config.userDetails.profilePicture);\r\n    }\r\n    this.notiBadge=this.config.userInfo.unreadNoti;\r\n    this.subscribedtags=this.config.userInfo.subscribedNotitags;\r\n    this.name =this.utils.getName();\r\n    this.lastDate = this.transformDate(this.dat1);\r\n    this.comingFromLoginFlagVal = history.state.comingFromLoginFlag.comingFromLogin; // changes navParam to history\r\n    this.comingfromWelcomeTour=  history.state.comingFromLoginFlag.comingfromWelcomeTour;\r\n    document.body.addEventListener('click', () => {\r\n      this.logger.trace(\"HomePage--document.body--start\");\r\n      this.logger.log(\"tapped\");\r\n      this.lastTap = Date.now();\r\n      this.logger.trace(\"HomePage--document.body--end\");\r\n    });\r\nthis.utils.getObservable().subscribe((data) => {\r\n  if (data.event === \"PicUpdated\") {\r\n      this.userDetails.profilePicture = this._DomSanitizer.bypassSecurityTrustUrl(data.data);\r\n  }\r\n  if (data.event === \"UnreadNotiUpdated\") {\r\n    this.notiBadge = data.data;}\r\n})\r\n\r\n    /**startInterval */\r\n    this.startInterval();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * This method is used to transform date to \"dd MMM y h:m:s\" format\r\n   * @param lastLoginDate\r\n   */\r\n  transformDate(lastLoginDate) {\r\n    return this.datePipe.transform(lastLoginDate, 'dd MMM  y h:m:s');\r\n  }\r\n\r\n  /**\r\n   * This method is called when the view is loaded.\r\n   * Here will check for passcode data in config file.\r\n   */\r\n  ngOnInit() {\r\n    if (this.comingFromLoginFlagVal){\r\n      this.getNotificationSubscriptionStatus();\r\n     //console.log(this.comingFromLoginFlagVal);\r\n\r\n    }\r\n  }\r\n  ngAfterViewInit() {\r\n    if(this.comingfromWelcomeTour){\r\n      setTimeout(() => {\r\n        var intro = introJs();\r\n        var menu=this.menuCtrl\r\n         var utils = this.utils;\r\n        intro.setOptions({\r\n          doneLabel : 'Next',\r\n          hidePrev:true,\r\n          steps: [\r\n            {\r\n              element: document.querySelector('.dataStep1'),\r\n              intro:\"<h4>View and edit your profile</h4> <p>Update your details to receive the latest notifications and benefits.<p/>\"\r\n            },\r\n            {\r\n              element: document.querySelector('.dataStep2'),\r\n              intro: \"<h4>Your policy overview</h4> <p>View & access your policy details, status & payments.<p/>\"\r\n            },\r\n            {\r\n              element: document.querySelector('.dataStep3'),\r\n              intro: \"<h4>Track your claims</h4> <p>Submit a claim and view the status of your submission.<p/>\",\r\n            },{\r\n              element: document.querySelector('.dataStep4'),\r\n              intro: \"<h4>Access important documents</h4> <p>Download statements and policy/contract documents.<p/>\"\r\n            },{\r\n              element: document.querySelector('.dataStep5'),\r\n              intro: \"<h4>Self-services</h4> <p>Access & submit service requests digitally.<p/>\"\r\n            },{\r\n              element: document.querySelector('.dataStep6'),\r\n              intro: \"<h4>Generate your E-Medical Card</h4> <p>Similar to your physical card, click here and have your digitalised medical card on-the-go.<p/>\"\r\n            },{\r\n              element: document.querySelector('.dataStep7'),\r\n              intro: \"<h4>Perform your first time nomination</h4> <p>Nominate a beneficiary to receive the death benefit of your policy.<p/>\"\r\n            }\r\n            ,{\r\n              element: document.querySelector('.dataStep8'),\r\n              intro: \"<h4>Notifications</h4> <p>Check all your latest notifications here.<p/>\" ,\r\n            }\r\n          ]\r\n        });\r\n         intro.oncomplete(function () {\r\n            menu.open();\r\n            utils.publishSomeData({ 'event': 'comingFromDashBoardAppTour', 'data': true});\r\n\r\n            // events.publish('user:comingFromDashBoardAppTour',true);\r\n        });\r\n\r\n      intro.onexit(function () {\r\n        if (this._currentStep == 7) {\r\n        }else{\r\n            menu.open();\r\n            utils.publishSomeData({ 'event': 'comingFromServiceAppTour', 'data': true});\r\n\r\n            // events.publish('user:comingFromServiceAppTour',true);\r\n         }\r\n      });\r\n        intro.start();\r\n\r\n         }, 700);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Method to navigate to Plan List Page\r\n   */\r\n  getPolicyList() {\r\n     this.router.navigate(['/plan-listing']);\r\n  }\r\n\r\n  /**\r\n   * This method gets called as soon as we enter the page\r\n   * Here we are disabling the sidemenu befor login and enabling sideMenu after Login\r\n   */\r\n  ionViewDidEnter() {\r\n    this.menuCtrl.swipeGesture(false);  // earlier it was swipeEnable\r\n    this.menuCtrl.enable(true, 'custom');\r\n    this.config.currentPage.pageName = \"DashboardAfterLoginPage\";\r\n  }\r\n\r\n\r\n  ionViewWillEnter() {\r\n    this.utils.component.emit(MenuOptions.DASHBOARD);\r\n  }\r\n\r\n  /*Navigate to claim status page*/\r\n  navToClaimStatusPage() {\r\n   // this.navCtrl.push(ClaimsPage);\r\n    this.router.navigate(['/claims']);\r\n  }\r\n   getNotificationSubscriptionStatus(){\r\n     this.pushNotiService.load();\r\n    this.logger.log('ionViewDidLoad DashboardAfterLoginPage');\r\n      this.NotificationSettingservice.getNotificationSettings().then(\r\n          (result)=>{\r\n       this.userSubscribed=result['responseJSON']['subscribed'];\r\n       if(this.userSubscribed===true){\r\n         this.checkNotificationSubscription();\r\n       }\r\n       else{\r\n          this.config.userInfo.isNotificationRegistered=false;\r\n       }\r\n\r\n          });\r\n  }\r\n  checkNotificationSubscription(){\r\n    this.pushNotiService.CheckSubscriptionAndRegister().then(\r\n          (result)=>{\r\n            this.config.userInfo.isNotificationRegistered=true;\r\n          },(err)=>{\r\n\r\n            this.config.userInfo.isNotificationRegistered=false;\r\n\r\n          });\r\n}\r\n  /*Navigate to sunactive page*/\r\n  navToSunactive(){\r\n\r\n  }\r\n//   navToSunactive() {\r\n//  if(this.utils.isDeviceOnLine()){\r\n//        this.utils.showProgressLoader();\r\n//        this.getSunactivUser().then(\r\n//           (res) => {\r\n//             try{\r\n//               this.utils.dissmisProgressLoader();\r\n//                 //check response code\r\n//                 if (res['responseJSON'] && res['responseJSON']['statusCode'] == HttpStatus.OK) {\r\n//                 //  console.log(\"Get sunactiv user response received\");\r\n//                 //  console.log(JSON.stringify(res['responseJSON']));\r\n//                 //  console.log(\"Checking user registered\");\r\n//                  var sunActivData = res['responseJSON'];\r\n//                  if (sunActivData.registered){\r\n//                      //console.log(\"User is registered. Checking device serial no\");\r\n//                      //check the device id\r\n//                     //  console.log(\"device serial no is \" + this.utils.getDeviceId());\r\n//                     //  console.log(\"received serial no is \" + sunActivData.deviceId);\r\n//                  if(sunActivData.deviceId == this.utils.getDeviceId()){\r\n//                    //check if its unsync\r\n//                    // console.log(\"Same device id found , checking if user is unsynced\");\r\n//                     if (sunActivData.source != this.config.sunactiv.source_unsync){\r\n//                      // console.log(\"User is synced with \" + sunActivData.source);\r\n//                       if(this.utils.getPlatform() != this.config.sunactiv.platform_ios) {\r\n//                         //platform is android\r\n//                       //  console.log(\"Platform is android\");\r\n//                       //   this.checkSourceAppInstalled(sunActivData.source).then((appInstalledorNot) => {\r\n//                       //     //check the source app is installed\r\n//                       //     if(appInstalledorNot){\r\n//                       //        //source installed\r\n//                       //    //   console.log(\"App is installed going to dashboard page\");\r\n//                       //     //  this.navCtrl.push(SunactivDashboardPage,{registered:true,DeviceId:sunActivData.deviceId,source:sunActivData.source,status:sunActivData.status,previousMonthStatus:sunActivData.PreviousStatus,avgStepMonth:sunActivData.averageStepsThisMonth,RegDate:sunActivData.registrationDate,lastSyncDate:sunActivData.lastSyncDate});\r\n//                       //       this.router.navigate(['/SunactivDashboardPage'],{state:{registered:true,DeviceId:sunActivData.deviceId,source:sunActivData.source,status:sunActivData.status,previousMonthStatus:sunActivData.PreviousStatus,avgStepMonth:sunActivData.averageStepsThisMonth,RegDate:sunActivData.registrationDate,lastSyncDate:sunActivData.lastSyncDate}})\r\n//                       //     }else{\r\n//                       //          //source not installed\r\n//                       //       //   console.log(\"App not installed\");\r\n//                       //         if(sunActivData.source == this.config.sunactiv.source_google){\r\n//                       //           this.promptInstallApp(this.config.sunactiv.source_google, sunActivData);\r\n//                       //         } else if (sunActivData.source == this.config.sunactiv.source_samsung){\r\n//                       //           this.promptInstallApp(this.config.sunactiv.source_samsung, sunActivData);\r\n//                       //         }\r\n//                       //     }\r\n//                       //  });\r\n//                       } else {\r\n//                          //platform is ios\r\n//                       //  console.log(\"Platfor is ios, going to dashboard\");\r\n//                       //  this.navCtrl.push(SunactivDashboardPage,{registered:true,DeviceId:sunActivData.deviceId,source:sunActivData.source,status:sunActivData.status,previousMonthStatus:sunActivData.PreviousStatus,avgStepMonth:sunActivData.averageStepsThisMonth,RegDate:sunActivData.registrationDate,lastSyncDate:sunActivData.lastSyncDate});\r\n//                         this.router.navigate(['/SunactivDashboardPage'],{state:{registered:true,DeviceId:sunActivData.deviceId,source:sunActivData.source,status:sunActivData.status,previousMonthStatus:sunActivData.PreviousStatus,avgStepMonth:sunActivData.averageStepsThisMonth,RegDate:sunActivData.registrationDate,lastSyncDate:sunActivData.lastSyncDate}})\r\n//                       }\r\n\r\n//                       }\r\n//                     else{\r\n//                       //user currently unsynced\r\n//                       //   console.log(\"user currently unsynced\");\r\n//                       //   this.navCtrl.push(SunactivPage,{registered:true,source:sunActivData.source, status:sunActivData.status,previousMonthStatus:sunActivData.PreviousStatus,avgStepMonth:sunActivData.averageStepsThisMonth,RegDate:sunActivData.registrationDate,lastSyncDate:sunActivData.lastSyncDate});\r\n//                          this.router.navigate(['/SunactivPage'],{state:{registered:true,source:sunActivData.source, status:sunActivData.status,previousMonthStatus:sunActivData.PreviousStatus,avgStepMonth:sunActivData.averageStepsThisMonth,RegDate:sunActivData.registrationDate,lastSyncDate:sunActivData.lastSyncDate}})\r\n//                         }\r\n//                   }\r\n//                   else{\r\n//                        if (sunActivData.source != this.config.sunactiv.source_unsync){\r\n//                         //device id is different and source is synced\r\n//                      //   console.log(\"Device id is different, user synced\");\r\n//                         const confirm = this.alertCtrl.create({\r\n//                           header: \"Unsync from other device\",\r\n//                           message: \"Sunactive is currently synced with other device. Do you want to unsync from other device?\",\r\n//                           buttons: [\r\n//                             {\r\n//                               text: 'Disagree',\r\n//                               handler: () => {\r\n//                           //      console.log('Disagree clicked');\r\n//                               }\r\n//                             },\r\n//                             {\r\n//                               text: 'Agree',\r\n//                               handler: () => {\r\n//                                 console.log('Agree clicked');\r\n//                                 // if (this.navCtrl.getActive().name != \"SunactivPage\") {\r\n//                                 // //  this.navCtrl.push(SunactivPage,{registered:true,manualUnsync: true,source:sunActivData.source, status:sunActivData.status,previousMonthStatus:sunActivData.PreviousStatus,avgStepMonth:sunActivData.averageStepsThisMonth,RegDate:sunActivData.registrationDate,lastSyncDate:sunActivData.lastSyncDate});\r\n//                                 //   this.router.navigate(['/SunactivPage'],{state:{registered:true,manualUnsync: true,source:sunActivData.source, status:sunActivData.status,previousMonthStatus:sunActivData.PreviousStatus,avgStepMonth:sunActivData.averageStepsThisMonth,RegDate:sunActivData.registrationDate,lastSyncDate:sunActivData.lastSyncDate}})\r\n//                                 // }\r\n//                               }\r\n//                             }\r\n//                           ]\r\n//                         }).then((alert) => alert.present())\r\n//                         }\r\n//                         else{\r\n//                          //device id is different and source is uncynced\r\n//                           //  console.log(\"Device id is different, user unsynced\");\r\n//                            // this.navCtrl.push(SunactivPage,{registered:true,source:sunActivData.source, status:sunActivData.status,previousMonthStatus:sunActivData.PreviousStatus,avgStepMonth:sunActivData.averageStepsThisMonth,RegDate:sunActivData.registrationDate,lastSyncDate:sunActivData.lastSyncDate});\r\n//                             this.router.navigate(['/SunactivPage'],{state:{registered:true,source:sunActivData.source, status:sunActivData.status,previousMonthStatus:sunActivData.PreviousStatus,avgStepMonth:sunActivData.averageStepsThisMonth,RegDate:sunActivData.registrationDate,lastSyncDate:sunActivData.lastSyncDate}})\r\n\r\n//                          }\r\n//                        }\r\n//                     }\r\n//                  else{\r\n//                     //user not registered\r\n//                 //   console.log(\"not registered, load sunactiv\");\r\n//                  //  this.navCtrl.push(SunactivPage,{registered:false});\r\n//                    this.router.navigate(['/SunactivPage'],{state:{registered:false}});\r\n//                  }\r\n\r\n//               }\r\n//             }catch(e){\r\n//               this.utils.dissmisProgressLoader();\r\n//               let errorMsg = this.translate.instant('generic_msgs.server_err');\r\n//               this.utils.showAlert(\"\", errorMsg);\r\n//             }\r\n//           }, (err) => { //if any service error, or already existed user\r\n//             this.utils.dissmisProgressLoader();\r\n//             let errorMsg = this.utils.handleServiceException(err); // adapter exception handler\r\n//             this.utils.showAlert(\"\", errorMsg);\r\n//           });\r\n// }\r\n//    else {\r\n//           let errorMsg = this.translate.instant('generic_msgs.network_err');\r\n//           this.showError(errorMsg);\r\n//         }\r\n//   }\r\n  /*Navigate to EMedicalCard page*/\r\n  navToEMedicalCard() {\r\n    this.utils.showProgressLoader();\r\n    this.eMedicalCardSrvc.getMedicalCardPolicyList().then((res) => {\r\n      try {\r\n        this.utils.dissmisProgressLoader();\r\n        console.log('policy list', res);\r\n        if (res['responseJSON']['array'].length) {\r\n          const policyList = res['responseJSON'];\r\n        //  this.navCtrl.push(EMedicalCardPage, policyList);\r\n          this.router.navigate(['/e-medical-card'],{state:{policylist:policyList}});\r\n        } else {\r\n          this.showDialog(\"\", \"None of the plans are applicable for Medical Card. <p>For further info, please contact our Client Careline at \" + '<a href=\"tel:1300-88-5055\">1300-88-5055</a>' + \" or email us at \" + '<a href=\"mailto:wecare@sunlifemalaysia.com\" target=\"_blank\">wecare@sunlifemalaysia.com</a>' + \".</p>\")\r\n        }\r\n      } catch (e) {\r\n        this.utils.dissmisProgressLoader();\r\n        this.logger.error(\"loginSuccess catch eror : \" + JSON.stringify(e));\r\n        const errorMsg = this.translate.instant('generic_msgs.server_err');\r\n      }\r\n    }, (err) => {\r\n      this.utils.dissmisProgressLoader();\r\n      const errorMsg = this.utils.handleServiceException(err);\r\n    });\r\n  }\r\n\r\n  showDialog(title: string, message: string) {\r\n    let buttons = [{\r\n      text: \"ok\",\r\n      handler: () => {\r\n      }\r\n    }];\r\n\r\n    let alert = this.alertCtrl.create({\r\n      header: title,\r\n      message: message,\r\n      buttons: buttons,\r\n      backdropDismiss: false,\r\n    }).then((alert) => alert.present());\r\n\r\n   // return alert.present();\r\n  }\r\n/*Navigate to ENomination page*/\r\nnavToENomination() {\r\n  if (this.utils.isDeviceOnLine()) {\r\n    this.utils.showProgressLoader();\r\n    this.getEnominationPath().then(\r\n      (result) => {\r\n        try {\r\n          this.utils.openLink(result['responseJSON'].url);\r\n          this.menuCtrl.close();\r\n          this.utils.dissmisProgressLoader();\r\n        } catch(e) {\r\n          this.utils.dissmisProgressLoader();\r\n          this.menuCtrl.close();\r\n          let errorMsg = this.translate.instant('generic_msgs.server_err');\r\n          this.utils.showAlert(\"\", errorMsg);\r\n        }\r\n      }, (err) => { //if any service error, or already existed user\r\n        this.showServiceError(err);\r\n      });\r\n  }\r\n  else {\r\n    let errorMsg = this.translate.instant('generic_msgs.network_err');\r\n    this.showError(errorMsg);\r\n  }\r\n}\r\ngetEnominationPath() {\r\n  this.logger.trace(\"App.component--eNominationService--start\");\r\n  let promise = new Promise((resolve, reject) => {\r\n    try {\r\n      var resourceRequest = new WLResourceRequest(ConfigProvider.getEnominationlinkAdapterPath, WLResourceRequest.GET);\r\n      resourceRequest.setQueryParameter('params',\"['\"+this.utils.getUserIdentity()+\"','\"+this.utils.getToken()+\"']\");\r\n      resourceRequest.send().then((response) => {\r\n        resolve(response);\r\n      },\r\n      (error) => {\r\n        this.logger.error(\"App.component--eNominationService Adapter calling error:\" + JSON.stringify(error));\r\n        reject(error);\r\n      });\r\n    } catch (e) {\r\n      reject(e);\r\n      this.logger.log(\"App.component--eNominationService adapter calling catch error:\" + JSON.stringify(e));\r\n    }\r\n  });\r\n  this.logger.trace(\"App.component--eNominationService--end\");\r\n  return promise;\r\n}\r\nshowServiceError(err){\r\n  this.utils.dissmisProgressLoader();\r\n  this.menuCtrl.close();\r\n  let errorMsg = this.utils.handleServiceException(err); // adapter exception handler\r\n  this.utils.showAlert(\"\", errorMsg);\r\n}\r\n\r\n  /**\r\n   * Method to Navigate to Profile Page\r\n   */\r\n  navToProfile = function () {\r\n    this.router.navigate(['/profile']);\r\n  }\r\n\r\n  /**\r\n   * This method is used to navigate to Downloads Page\r\n   */\r\n  openDownloads = function () {\r\n  //  this.navCtrl.push(DownloadsPage);\r\n    this.router.navigate(['/downloads'])\r\n    //this.pushNotiService.unregisterDevice();\r\n    //this.pushNotiService.CheckSubscription();\r\n    //this.pushNotiService.UnSubscribePolicyTag();\r\n  }\r\n  openNotification() {\r\n    this.router.navigate(['/notifications']);\r\n   }\r\n   navToServices(){\r\n    this.router.navigate(['/service']);\r\n   }\r\n  /**Intervale */\r\n  startInterval() {\r\n    // alert(1)\r\n       if (this.config.interValID != null) {\r\n        clearInterval(this.config.interValID);\r\n        this.config.interValID = null\r\n      }\r\n    this.config.interValID = setInterval(() => {\r\n      /** checking session  CHECK_INTERVAL minitus */\r\n      // alert(2)\r\n      this.checkSession();\r\n\r\n    }, this.config.CHECK_INTERVAL);\r\n  }\r\n\r\n  /** checking ilde device  */\r\n  checkSession() {\r\n    /** checking session */\r\n    const now = Date.now();\r\n    const timeleft = this.lastTap + this.config.SESSION_TIME * 60 * 1000;\r\n    const diff = timeleft - now;\r\n    const isTimeout = diff < 0;\r\n    clearInterval(this.config.interValID);\r\n\r\n    /**if session expire than navigate to corresponding pages */\r\n    if (isTimeout) {\r\n      // alert(3)\r\n      if (this.menuCtrl.isOpen()) {\r\n        this.menuCtrl.close();\r\n      }\r\n\r\n      /**to hide busy indicator if it is showing */\r\n      if (this.utils.isLoaderInDisplay)\r\n        this.utils.dissmisProgressLoader();\r\n\r\n      /**Logout from adapter session */\r\n      this.authHandler.logout();\r\n\r\n      /**Set saved data to null */\r\n      this.config.userInfo = {};\r\n      this.config.userDetails = {};\r\n\r\n      /**clear session time out*/\r\n      if (this.config.sessionTimeout != null) {\r\n        clearTimeout(this.config.sessionTimeout);\r\n        this.config.sessionTimeout = null\r\n      }\r\n\r\n      /** clear idle time out functionality */\r\n      if (this.config.interValID != null) {\r\n        clearInterval(this.config.interValID);\r\n        this.config.interValID = null\r\n      }\r\n\r\n       /**Close any popup or models are showing on page */\r\n      // let activePortal = this.ionicApp._loadingPortal.getActive() ||\r\n      this.ModalController.dismiss();\r\n      this.ToastController.dismiss();\r\n      this.alertCtrl.dismiss();\r\n      var intro = introJs();\r\n      intro.exit();\r\n      // this.ionicApp.overla.getActive();\r\n\r\n      // if (activePortal) {\r\n      //   activePortal.dismiss();\r\n      //   return;\r\n      // }\r\n\r\n      if (this.utils.getPlatform()=='ios'||this.utils.getPlatform()=='android') {\r\n              this.router.navigate(['/login-first'],{state:{ animate: true, direction: 'forward',tokenExpire:true,loadInitialLogin:true }});\r\n\r\n        // alert(\"yes\")\r\n        /**Check whether to land on Passcode or Login screen */\r\n        // if (!this.config.passCodeInfo.hasPasscodeAuth)\r\n        // //  this.navCtrl.setRoot(LoginFirstPage, { animate: true, direction: 'forward',tokenExpire:true,loadInitialLogin:true });\r\n        //   this.router.navigate(['/LoginFirstPage'],{state:{ animate: true, direction: 'forward',tokenExpire:true,loadInitialLogin:true }});\r\n        // else\r\n        //  // this.navCtrl.setRoot(LoginFirstPage, { animate: true, direction: 'forward',tokenExpire:true, showFingerPrint:'true',loadInitialLogin:true });\r\n        //   this.router.navigate(['/LoginFirstPage'],{state:{ animate: true, direction: 'forward',tokenExpire:true, showFingerPrint:'true',loadInitialLogin:true }});\r\n        //   } else {\r\n        // // this.navCtrl.setRoot(LoginFirstPage, { animate: true, direction: 'forward',loadInitialLogin:true });\r\n        //  this.router.navigate(['/LoginFirstPage'],{state:{ animate: true, direction: 'forward',loadInitialLogin:true  }});\r\n\r\n\r\n      }\r\n    } else {\r\n      // alert(\"no\")\r\n      /**startInterval */\r\n      this.startInterval();\r\n    }\r\n  }\r\n\r\n\r\n  //  getSunactivUser(){\r\n  //   this.logger.trace(\"SunactivService--getSunactivUser--start\");\r\n  //   let promise = new Promise((resolve, reject) => {\r\n  //     try {\r\n  //          let encryptedUserId = this.utils.getEncryptedUserId();\r\n  //           var resourceRequest = new WLResourceRequest(ConfigProvider.GetSunActivUserAdapterPath, WLResourceRequest.GET);\r\n  //           resourceRequest.setQueryParameter('params',\"['\"+this.utils.getToken()+\"','\"+encryptedUserId+\"']\");\r\n  //           resourceRequest.send().then((response) => {\r\n  //             resolve(response);\r\n  //           },\r\n  //             (error) => {\r\n  //               this.logger.error(\"SunactivService--getSunactivUser Adapter calling error:\" + JSON.stringify(error));\r\n  //               reject(error);\r\n  //           });\r\n  //     }catch (e) {\r\n  //       reject(e);\r\n  //       this.logger.log(\"SunactivService--getSunactivUser adapter calling catch error:\" + JSON.stringify(e));\r\n  //     }\r\n  //   });\r\n  //   this.logger.trace(\"FundAllocationsService--getFundAllocations--end\");\r\n  //   return promise;\r\n  //  }\r\n\r\n  // checkSourceAppInstalled(app) {\r\n  //   let promise = new Promise((resolve, reject) => {\r\n  //     let appName;\r\n  //     if (app == this.config.sunactiv.source_samsung) {\r\n  //       appName = this.config.sunactiv.samsung_health_package_name;\r\n  //     } else {\r\n  //       appName = this.config.sunactiv.google_fit_package_name;\r\n  //     }\r\n  //     this.appAvailability.check(appName)\r\n  //       .then(\r\n  //         (yes: boolean) => {\r\n  //           this.isAppInstalled = true;\r\n  //           resolve(this.isAppInstalled);\r\n  //         },\r\n  //         (no: boolean) => {\r\n  //           this.isAppInstalled = false;\r\n  //           resolve(this.isAppInstalled);\r\n  //         }\r\n  //       );\r\n  //   });\r\n  //   return promise;\r\n  // }\r\n\r\n  promptInstallApp(source, sunActivData){\r\n    var url;\r\n    if (source == this.config.sunactiv.source_google) {\r\n      url = this.config.sunactiv.googleApp_url;\r\n    } else if(source == this.config.sunactiv.source_samsung) {\r\n      url = this.config.sunactiv.sumsungApp_url;\r\n    }\r\n      const confirm = this.alertCtrl.create({\r\n          header: \"Install App?\",\r\n          message: \"Do you want to install \" + source+ \" Health. In order to sync data, \" + source +\" Health App must be installed.\",\r\n          buttons: [\r\n            {\r\n              text: 'Choose source',\r\n              handler: () => {\r\n              //  console.log('Disagree clicked');\r\n               // this.navCtrl.push(SunactivPage,{registered:true,manualUnsync:true,source:sunActivData.source, status:sunActivData.status,avgStepMonth:sunActivData.averageStepsThisMonth,RegDate:sunActivData.registrationDate,lastSyncDate:sunActivData.lastSyncDate});\r\n                this.router.navigate(['/SunactivPage'],{state:{ registered:true,manualUnsync:true,source:sunActivData.source, status:sunActivData.status,avgStepMonth:sunActivData.averageStepsThisMonth,RegDate:sunActivData.registrationDate,lastSyncDate:sunActivData.lastSyncDate }});\r\n              }\r\n            },\r\n            {\r\n              text: 'Agree',\r\n              handler: () => {\r\n              //  console.log('Agree clicked');\r\n                const browser = this.iab.create(url,  '_system');\r\n                browser.show();\r\n              }\r\n            }\r\n          ]\r\n        }).then((alert) => alert.present());\r\n  }\r\n\r\n    showError(err){\r\n    this.utils.dissmisProgressLoader();\r\n    this.utils.showAlert(\"\", err);\r\n  }\r\n\r\n}\r\n","<!--\r\n<ion-header mode=\"ios\">\r\n\r\n\r\n  <ion-toolbar color=\"primary\" class=\"toolbar\" >\r\n    <ion-title>{{\"dashboard_after_login.title\" | translate }}</ion-title>\r\n    <button ion-button menuToggle>\r\n      <ion-icon name=\"menu\" class=\"menuicon\"></ion-icon>\r\n    </button>\r\n    <ion-menu-button slot=\"start\" auto-hide=\"false\" color=\"secondary\"></ion-menu-button>\r\n    <ion-buttons end class=\"header-right-btn\">\r\n      <button class=\"dataStep8\" ion-button icon-only (click)=\"openNotification()\">\r\n        <i class=\"fas fa-bell\" aria-hidden=\"true\" item-left col-1 text-center></i>\r\n        <ion-badge id=\"noti-badge\" class=\"notiBadge\" *ngIf=\"notiBadge>0\">{{notiBadge}}</ion-badge>\r\n      </button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header> -->\r\n\r\n<ion-header mode=\"ios\">\r\n  <ion-toolbar color=\"primary\" class=\"toolbar\" >\r\n    <ion-menu-button slot=\"start\" auto-hide=\"false\" color=\"secondary\"></ion-menu-button>\r\n    <ion-title class=\"bold-font\">{{\"dashboard_after_login.title\" | translate }}</ion-title>\r\n    <ion-buttons end class=\"header-right-btn\">\r\n      <!-- <button class=\"dataStep8\" ion-button icon-only (click)=\"openNotification()\">\r\n        <i class=\"fas fa-bell\" aria-hidden=\"true\" item-left col-1 text-center></i>\r\n        <ion-badge id=\"noti-badge\" color=\"danger\"  class=\"notiBadge\" *ngIf=\"notiBadge>0\">{{notiBadge}}</ion-badge>\r\n\r\n      </button> -->\r\n      <ion-button (click)=\"openNotification()\" class=\"custom-class dataStep8\" color=\"primary\" fill=\"solid\">\r\n        <i class=\"fas fa-bell\" aria-hidden=\"true\" item-left col-1 text-center></i>\r\n        <ion-badge color=\"danger\" *ngIf=\"notiBadge>0\"> {{notiBadge}}</ion-badge>\r\n      </ion-button>\r\n    </ion-buttons>\r\n\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n\r\n<ion-content class=\"app_bg2\" no-bounce>\r\n  <!--   <section class=\"spinnersection\" *ngIf=\"isShowingLoader\">\r\n        <ion-spinner  name=\"ios-small\"></ion-spinner>\r\n    </section> -->\r\n  <section>\r\n    <ion-row class=\"ion-text-center\">\r\n      <ion-col>\r\n        <div class=\"dataStep1\">\r\n          <div class=\"profile-pic\">\r\n            <img [src]=\"userDetails.profilePicture\" class=\"profilePic\" alt=\"...\" />\r\n            <i class=\"fas fa-edit\" aria-hidden=\"true\" (click)=\"navToProfile()\"></i>\r\n          </div>\r\n          <div class=\"welcome_txt\">\r\n            <p> {{\"dashboard_after_login.welcome\" | translate }} {{name}}</p>\r\n            <p> {{\"dashboard_after_login.last_login_txt\" | translate }}</p>\r\n            <p>{{lastDate}} SGT</p>\r\n            <p *ngIf=\"showPasswordExpirationMsgFlag==='1'\">{{passwordReminderMsg}}</p>\r\n          </div>\r\n        </div>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row  class=\"ion-text-center\" style=\"padding-left: 17px;padding-right: 17px;\">\r\n      <ion-col class=\"text_color_base my_plan_tile dataStep2\" (click)=\"getPolicyList()\">\r\n        <i class=\"fas fa-file-alt tile_img\"></i>\r\n        <ion-label style=\"display: block\">{{\"dashboard_after_login.my_plan\" | translate }}</ion-label>\r\n      </ion-col>\r\n      <ion-col text-center class=\"text_color_base claims_tile dataStep3\" (click)=\"navToClaimStatusPage()\">\r\n        <i class=\"fas fa-inbox tile_img\"></i>\r\n        <ion-label style=\"display: block\">{{\"dashboard_after_login.claim_enquiry\" | translate }}</ion-label>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row class=\"ion-text-center\" style=\"padding-left: 17px;padding-right: 17px;\">\r\n      <ion-col text-center class=\"text_color_base downloads_tile dataStep4\" (click)=\"openDownloads()\">\r\n        <i class=\"fa fa-download tile_img\"></i>\r\n        <ion-label style=\"display: block\">{{\"dashboard_after_login.downloads\" | translate }}</ion-label>\r\n      </ion-col>\r\n      <ion-col text-center class=\"text_color_base my_profile_tile dataStep5\" (click)=\"navToServices()\">\r\n        <i class=\"fas fa-clipboard-list tile_img\"></i>\r\n        <ion-label style=\"display: block\">{{\"dashboard_after_login.service\" | translate }}</ion-label>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row class=\"ion-text-center\" style=\"padding-left: 17px;padding-right: 17px;\">\r\n      <ion-col text-center class=\"text_color_base sunactiv_tile dataStep6\" (click)=\"navToEMedicalCard()\">\r\n        <i class=\"fas fa-address-card tile_img\"></i>\r\n        <ion-label style=\"display: block\">{{\"dashboard_after_login.emedicalCard\" | translate }}</ion-label>\r\n      </ion-col>\r\n      <ion-col text-center class=\"text_color_base enomination_tile dataStep7\" (click)=\"navToENomination()\">\r\n        <i class=\"fas fa-file-alt tile_img\"></i>\r\n        <ion-label style=\"display: block\">{{\"dashboard_after_login.eNomination\" | translate }}</ion-label>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row style=\"height: 5% !important\">\r\n      <br /><br />\r\n    </ion-row>\r\n  </section>\r\n</ion-content>\r\n"],"names":["RouterModule","DashboardAfterLoginPage","routes","path","component","DashboardAfterLoginPageRoutingModule","forChild","imports","exports","CommonModule","FormsModule","TranslateModule","IonicModule","DashboardAfterLoginPageModule","declarations","ConfigProvider","MenuOptions","introJs","i0","constructor","router","platform","utils","translate","logger","config","datePipe","translateConfig","authHandler","_DomSanitizer","iab","alertCtrl","NotificationSettingservice","menuCtrl","eMedicalCardSrvc","pushNotiService","ModalController","ToastController","getlastLoginDate","getPasswordReminderMsg","getshowPasswordReminderMsg","lastLoginDate","split","dat","Date","now","navigate","analytics","userDetails","profilePicture","undefined","bypassSecurityTrustUrl","notiBadge","userInfo","unreadNoti","subscribedtags","subscribedNotitags","name","getName","lastDate","transformDate","dat1","comingFromLoginFlagVal","history","state","comingFromLoginFlag","comingFromLogin","comingfromWelcomeTour","document","body","addEventListener","trace","log","lastTap","getObservable","subscribe","data","event","startInterval","transform","ngOnInit","getNotificationSubscriptionStatus","ngAfterViewInit","setTimeout","intro","menu","setOptions","doneLabel","hidePrev","steps","element","querySelector","oncomplete","open","publishSomeData","onexit","_currentStep","start","getPolicyList","ionViewDidEnter","swipeGesture","enable","currentPage","pageName","ionViewWillEnter","emit","DASHBOARD","navToClaimStatusPage","load","getNotificationSettings","then","result","userSubscribed","checkNotificationSubscription","isNotificationRegistered","CheckSubscriptionAndRegister","err","navToSunactive","navToEMedicalCard","showProgressLoader","getMedicalCardPolicyList","res","dissmisProgressLoader","console","length","policyList","policylist","showDialog","e","error","JSON","stringify","errorMsg","instant","handleServiceException","title","message","buttons","text","handler","alert","create","header","backdropDismiss","present","navToENomination","isDeviceOnLine","getEnominationPath","openLink","url","close","showAlert","showServiceError","showError","promise","Promise","resolve","reject","resourceRequest","WLResourceRequest","getEnominationlinkAdapterPath","GET","setQueryParameter","getUserIdentity","getToken","send","response","openNotification","navToServices","interValID","clearInterval","setInterval","checkSession","CHECK_INTERVAL","timeleft","SESSION_TIME","diff","isTimeout","isOpen","isLoaderInDisplay","logout","sessionTimeout","clearTimeout","dismiss","exit","getPlatform","animate","direction","tokenExpire","loadInitialLogin","promptInstallApp","source","sunActivData","sunactiv","source_google","googleApp_url","source_samsung","sumsungApp_url","confirm","registered","manualUnsync","status","avgStepMonth","averageStepsThisMonth","RegDate","registrationDate","lastSyncDate","browser","show","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}