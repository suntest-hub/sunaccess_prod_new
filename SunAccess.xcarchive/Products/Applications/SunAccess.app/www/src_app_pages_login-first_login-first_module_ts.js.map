{"version":3,"file":"src_app_pages_login-first_login-first_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AAEH;;;AAEpD,MAAME,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEH,6DAAcA;CAC1B,CACF;AAMK,MAAOI,2BAA2B;;mBAA3BA,2BAA2B;AAAA;;QAA3BA;AAA2B;;YAH5BL,kEAAqB,CAACE,MAAM,CAAC,EAC7BF,yDAAY;AAAA;;sHAEXK,2BAA2B;IAAAE,UAAAA,yDAAAA;IAAAC,UAF5BR,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACbuB;AACmB;AAErB;AAE8B;AAEvB;AACE;;AAahD,MAAOc,oBAAoB;;mBAApBA,oBAAoB;AAAA;;QAApBA;AAAoB;;YAT7BL,yDAAY,EACZC,uDAAW,EACXE,uDAAW,EACXC,gEAAe,EACfF,+DAAmB,EACnBN,oFAA2B;AAAA;;sHAIlBS,oBAAoB;IAAAC,eAFhBd,6DAAc;IAAAM,UAP3BE,yDAAY,EACZC,uDAAW,EACXE,uDAAW,EACXC,gEAAe,EACfF,+DAAmB,EACnBN,oFAA2B;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACd6B;AAGZ;AACoB;AAMhB;;;;;;;;;;;;;;;;;ICI5Ce,4DAAAA,UACyD;IACpCA,oDAAAA,GAAoC;;IAAAA,0DAAAA,EAAO;;;IAA3CA,uDAAAA,GAAoC;IAApCA,+DAAAA,CAAAA,yDAAAA,6BAAoC;;;;;IAEzDA,4DAAAA,UACiD;IAC5BA,oDAAAA,GAAiC;;IAAAA,0DAAAA,EAAO;;;IAAxCA,uDAAAA,GAAiC;IAAjCA,+DAAAA,CAAAA,yDAAAA,0BAAiC;;;;;IAYtDA,4DAAAA,UAA6G;IAC5EA,oDAAAA,GAAiC;;IAAAA,0DAAAA,EAAO;;;IAAxCA,uDAAAA,GAAiC;IAAjCA,+DAAAA,CAAAA,yDAAAA,0BAAiC;;;ADhBpE,MAAOnB,cAAc;EAQzBoB,YAAoBC,MAAc,EACzBC,WAAwB,EACvBC,WAA2B,EAC3BC,MAA6B,EAC9BC,KAAkB,EACjBC,YAA0B,EAC3BC,SAA2B,EAC3BC,MAAsB,EACrBC,IAAoB,EACrBC,SAA4B,EAC5BC,cAAwC,EACxCC,mBAAwC;IAX7B,WAAM,GAANX,MAAM;IACjB,gBAAW,GAAXC,WAAW;IACV,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IACP,UAAK,GAALC,KAAK;IACJ,iBAAY,GAAZC,YAAY;IACb,cAAS,GAATC,SAAS;IACT,WAAM,GAANC,MAAM;IACL,SAAI,GAAJC,IAAI;IACL,cAAS,GAATC,SAAS;IACT,mBAAc,GAAdC,cAAc;IACd,wBAAmB,GAAnBC,mBAAmB;IAd5B,mBAAc,GAAG,CAAC;EAiBhB;EAGAC,eAAe;IACb,IAAI,CAACV,WAAW,CAACW,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC;IACtC,IAAI,CAACT,KAAK,CAACtB,SAAS,CAACgC,IAAI,CAACjB,oEAAiB,CAAC;EAE9C;EACFmB,QAAQ;IAEN,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,oBAAoB,GAAGC,OAAO,CAACC,KAAK,CAACC,eAAe;IACzD,IAAI,IAAI,CAACH,oBAAoB,EAAE;MAC7B,IAAI,CAACI,kBAAkB,EAAE;;EAE7B;EAEAL,cAAc;IACZ,IAAIM,aAAa,GAAG9B,oFAA4B;IAChD,IAAI,CAAC+B,cAAc,GAAG,IAAI,CAACxB,WAAW,CAACyB,KAAK,CAAC;MAC3CC,QAAQ,EAAE,CAAC,2BAA2B,EAAE,CAAC/B,gEAAmB,EAAEA,+DAAkB,CAAC4B,aAAa,CAAC,CAAC,CAAC;MACjGM,UAAU,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEC,QAAQ,EAAE;MAAK,CAAE;KAC9C,CAAC;EACJ;EAEA;;;EAKAT,kBAAkB;IAChBU,UAAU,CAAC,MAAK;MACd,IAAI,CAACzB,IAAI,CAAC0B,IAAI,CAAC;QACbC,KAAK,EAAE,WAAW;QAClBC,QAAQ,EAAE,0BAA0B;QACpCC,WAAW,EAAE,qBAAqB;QAClCC,mBAAmB,EAAE,YAAY;QACjC;QACAC,aAAa,EAAE,IAAI,CAAE;OACtB,CAAC,CAACC,IAAI,CAAEC,MAAW,IAAI;QACtB;QACA,IAAI,CAACC,eAAe,EAAE;MACxB,CAAC,EAAGC,KAAK,IAAI;QAEXC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC9C,CAAC,CAAC,CAACC,KAAK,CAAEH,KAAU,IAAI;QACtBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGF,KAAK,CAAC;MAC9C,CAAC,CAAC;IAEJ,CAAC,EAAE,GAAG,CAAC;EAET;EAEAI,oBAAoB,CAACC,WAAW;IAC9B,IAAI,CAAC5C,KAAK,CAAC6C,kBAAkB,EAAE;IAC/B,IAAItB,QAAQ,GAAGqB,WAAW;IAC1B;IACA;IACA,IAAI,CAAC3C,YAAY,CAAC6C,eAAe,CAACvB,QAAQ,CAAC,CAACa,IAAI,CAAEW,GAAG,IAAI;MACvD,IAAI;QACF,IAAI,CAAC/C,KAAK,CAACgD,qBAAqB,EAAE;QAClC,IAAID,GAAG,CAAC,cAAc,CAAC,IAAIA,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,IAAIxD,kDAAa,EAAE;UAC7E,IAAI,CAACY,MAAM,CAAC+C,eAAe,GAAG,yBAAyB,GAAGH,GAAG,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC;UACtF,IAAII,UAAU,GAAG;YAAEC,sBAAsB,EAAE,IAAI,CAAC/B,cAAc,CAACgC,QAAQ,CAAC,UAAU,CAAC,CAAC1B,KAAK,CAAC2B,IAAI;UAAE,CAAE;UAClG;UACA,IAAI,CAAC1D,MAAM,CAAC2D,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;YAAEtC,KAAK,EAAE;cAAEkC,UAAU,EAAEA;YAAU;UAAE,CAAE,CAAC;UACvE;UACA,IAAI,CAAC9B,cAAc,CAACgC,QAAQ,CAAC,UAAU,CAAC,CAACG,KAAK,EAAE;UAChD,IAAI,CAACnC,cAAc,CAACgC,QAAQ,CAAC,UAAU,CAAC,CAACI,QAAQ,CAAC,IAAI,CAAC;;OAG1D,CAAC,OAAOC,CAAC,EAAE;QACV,IAAI,CAAC1D,KAAK,CAACgD,qBAAqB,EAAE;QAClC,IAAI,CAACjD,MAAM,CAACwC,KAAK,CAAC,4BAA4B,GAAGoB,IAAI,CAACC,SAAS,CAACF,CAAC,CAAC,CAAC;;IAEvE,CAAC,EAAGG,GAAG,IAAI;MACT,IAAI,CAAC7D,KAAK,CAACgD,qBAAqB,EAAE;MAClC,IAAIc,QAAQ,GAAG,IAAI,CAAC9D,KAAK,CAAC+D,sBAAsB,CAACF,GAAG,CAAC;MACrD,IAAI,CAAC7D,KAAK,CAACgE,SAAS,CAAC,EAAE,EAAEF,QAAQ,CAAC;IACpC,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAEF;;EAEAG,yBAAyB;IACvB,IAAIC,MAAM,GAAG,IAAI,CAAC7C,cAAc,CAACgC,QAAQ,CAAC,UAAU,CAAC,CAAC1B,KAAK,CAAC2B,IAAI,EAAE;IAClE,IAAI,CAACX,oBAAoB,CAACuB,MAAM,CAAC;EACnC;EAEA;EACAC,cAAc,CAACC,OAAY;IACzB;IACA,IAAIA,OAAO,CAACC,MAAM,CAACD,OAAO,EAAE;MAC1B,IAAI,CAACvD,WAAW,GAAG,IAAI;KACxB,MAAM;MACL,IAAI,CAACA,WAAW,GAAG,KAAK;;EAE5B;EAEAyB,eAAe;IACb,IAAI,CAACvC,MAAM,CAACuE,KAAK,CAAC,wCAAwC,CAAC;IAC3D,IAAIC,MAAM,GAAG,IAAI,CAACpE,MAAM,CAACqE,YAAY,CAACC,QAAQ;IAC9C,IAAIC,QAAQ,GAAG,IAAI,CAAC1E,KAAK,CAAC2E,WAAW,EAAE;IACvC;IACA,IAAIC,KAAK,GAAG,IAAI,CAACzE,MAAM,CAACqE,YAAY,CAACK,aAAa,CAACC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;IACvE;IACA,IAAI,CAAC/E,MAAM,CAACuE,KAAK,CAAC,2CAA2C,GAAGC,MAAM,GAAG,cAAc,GAAGG,QAAQ,GAAG,UAAU,GAAGE,KAAK,CAAC;IACxH,IAAI,IAAI,CAAC5E,KAAK,CAAC+E,cAAc,EAAE,EAAE;MAC/B,IAAI,CAAC/E,KAAK,CAAC6C,kBAAkB,EAAE;MAC/B,IAAI,CAAC5C,YAAY,CAAC+E,SAAS,CAACT,MAAM,EAAEK,KAAK,EAAEF,QAAQ,CAAC,CAACtC,IAAI,CAAEW,GAAG,IAAI;QAChE,IAAI,CAACkC,YAAY,CAAClC,GAAG,CAAC;MACxB,CAAC,EAAGc,GAAG,IAAI;QACT,IAAI,CAACqB,cAAc,GAAG,IAAI,CAACA,cAAc,GAAG,CAAC;QAC7C,IAAI,IAAI,CAACA,cAAc,IAAI,CAAC,EAAE;UAC5B,IAAI,CAAC5C,eAAe,EAAE;SACvB,MACI;UACH,IAAI,CAACtC,KAAK,CAACgD,qBAAqB,EAAE;UAClC,IAAI,CAAChD,KAAK,CAACmF,YAAY,CAAC,IAAI,CAACjF,SAAS,CAACkF,OAAO,CAAC,+BAA+B,CAAC,CAAC;UAChF,IAAI,CAACrF,MAAM,CAACwC,KAAK,CAAC,+BAA+B,GAAGoB,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,CAAC;;MAG5E,CAAC,CAAC;KAEH,MAAM;MACL,IAAI,CAAC7D,KAAK,CAACmF,YAAY,CAAC,IAAI,CAACjF,SAAS,CAACkF,OAAO,CAAC,0BAA0B,CAAC,CAAC;;IAG7E,IAAI,CAACrF,MAAM,CAACuE,KAAK,CAAC,sCAAsC,CAAC;EAC3D;EAEA;EACAW,YAAY,CAAClC,GAAG;IACd,IAAI,CAAChD,MAAM,CAACuE,KAAK,CAAC,gCAAgC,CAAC;IAEnD,IAAI,CAACvE,MAAM,CAACsF,KAAK,CAAC,eAAe,GAAGtC,GAAG,CAAC;IAExC,IAAI;MACF,IAAIA,GAAG,CAAC,cAAc,CAAC,IAAIA,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,IAAIxD,kDAAa,EAAE;QAC7E,IAAI,CAACY,MAAM,CAACmF,QAAQ,CAACC,eAAe,GAAGxC,GAAG,CAAC,cAAc,CAAC,CAAC,mBAAmB,CAAC;QAC/E,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACV,KAAK,GAAG7B,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,GAAG,GAAG,GAAGA,GAAG,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC;QAE1G,IAAIA,GAAG,CAAC,cAAc,CAAC,CAAC,uBAAuB,CAAC,CAACyC,WAAW,EAAE,IAAI,KAAK,EAAE;UACvE,IAAI,CAACrF,MAAM,CAACmF,QAAQ,CAACG,mBAAmB,GAAG1C,GAAG,CAAC,cAAc,CAAC,CAAC,uBAAuB,CAAC;UAEvF;SACD,MACI;UACH,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACI,SAAS,GAAG3C,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC;UAClE,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACK,MAAM,GAAG5C,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC;UAC3D,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACM,IAAI,GAAG7C,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC;UACvD,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACO,KAAK,GAAG9C,GAAG,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC;UACzD,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACQ,cAAc,GAAG/C,GAAG,CAAC,cAAc,CAAC,CAAC,iBAAiB,CAAC;UAC5E,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACS,aAAa,GAAGhD,GAAG,CAAC,cAAc,CAAC,CAAC,gBAAgB,CAAC;UAC1E,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACU,IAAI,GAAGjD,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC;UACvD,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACW,qBAAqB,GAAGlD,GAAG,CAAC,cAAc,CAAC,CAAC,qBAAqB,CAAC;UACvF,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACY,aAAa,GAAGnD,GAAG,CAAC,cAAc,CAAC,CAAC,iBAAiB,CAAC;UAC3E,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACa,MAAM,GAAGpD,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC;UAC3D,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACc,OAAO,GAAGrD,GAAG,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC;UAC7D,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACe,UAAU,GAAGtD,GAAG,CAAC,cAAc,CAAC,CAAC,sBAAsB,CAAC;UAC7E,IAAI,CAAC/C,KAAK,CAACsG,eAAe,CAAC;YAAE,MAAM,EAAE,mBAAmB;YAAE,MAAM,EAAE,IAAI,CAACnG,MAAM,CAACmF,QAAQ,CAACe;UAAU,CAAE,CAAC;UACpG,IAAI,CAAClG,MAAM,CAACmF,QAAQ,CAACiB,wBAAwB,GAAGxD,GAAG,CAAC,cAAc,CAAC,CAAC,kCAAkC,CAAC;UACvG,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACkB,kBAAkB,GAAGzD,GAAG,CAAC,cAAc,CAAC,CAAC,4BAA4B,CAAC;UAC3F,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACmB,6BAA6B,GAAG1D,GAAG,CAAC,cAAc,CAAC,CAAC,0BAA0B,CAAC;UACpG,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACoB,mBAAmB,GAAG3D,GAAG,CAAC,cAAc,CAAC,CAAC,2BAA2B,CAAC;UAC3F,IAAI,CAAC4D,YAAY,GAAG5D,GAAG,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAACO,IAAI,EAAE;UAC/D,IAAI,CAACnD,MAAM,CAACmF,QAAQ,CAACsB,mBAAmB,GAAG7D,GAAG,CAAC,cAAc,CAAC,CAAC,gBAAgB,CAAC,CAAC+B,OAAO,CAAC,cAAc,EAAE,GAAG,CAAC;UAE7G,IAAI,IAAI,CAAC3E,MAAM,CAAC0G,cAAc,IAAI,IAAI,EAAE;YACtCC,YAAY,CAAC,IAAI,CAAC3G,MAAM,CAAC0G,cAAc,CAAC;YACxC,IAAI,CAAC1G,MAAM,CAAC0G,cAAc,GAAG,IAAI;;UAGnC,IAAI,CAACxG,SAAS,CAAC0G,kBAAkB,CAAC,IAAI,CAAC1G,SAAS,CAAC2G,eAAe,CAACL,YAAY,EAAE;YAC7EA,YAAY,EAAE,IAAI,CAACA;WACpB,CAAC;UAGF,IAAI,CAACM,iBAAiB,EAAE;;OAG3B,MAAM,IAAIlE,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,IAAIxD,2DAAsB,EAAE;QACtE,IAAI,CAACS,KAAK,CAACgD,qBAAqB,EAAE;QAClC,IAAI,CAAChD,KAAK,CAACgE,SAAS,CAAC,EAAE,EAAEjB,GAAG,CAAC,cAAc,CAAC,CAAC,mBAAmB,CAAC,CAAC;OACnE,MAAM;QACL,IAAI,CAAC/C,KAAK,CAACgD,qBAAqB,EAAE;QAClC,IAAI,CAAChD,KAAK,CAACgE,SAAS,CAAC,EAAE,EAAEjB,GAAG,CAAC,cAAc,CAAC,CAAC,mBAAmB,CAAC,CAAC;;KAErE,CAAC,OAAOW,CAAC,EAAE;MACV,IAAI,CAAC1D,KAAK,CAACgD,qBAAqB,EAAE;MAClC,IAAI,CAACjD,MAAM,CAACwC,KAAK,CAAC,4BAA4B,GAAGoB,IAAI,CAACC,SAAS,CAACF,CAAC,CAAC,CAAC;;IAErE,IAAI,CAAC3D,MAAM,CAACuE,KAAK,CAAC,8BAA8B,CAAC;EACnD;EAEA2C,iBAAiB;IACf,IAAI,CAAC3G,cAAc,CAAC2G,iBAAiB,EAAE,CAAC7E,IAAI,CACzCW,GAAG,IAAI;MACN,IAAIA,GAAG,CAAC,cAAc,CAAC,IAAIA,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,IAAIxD,kDAAa,EAAE;QAC7E,IAAI,CAACY,MAAM,CAACgH,WAAW,CAACvB,IAAI,GAAG7C,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC;QAC1D,IAAI,CAAC5C,MAAM,CAACgH,WAAW,CAACC,SAAS,GAAGrE,GAAG,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,CAACO,IAAI,EAAE;QAC3E,IAAI,CAACnD,MAAM,CAACgH,WAAW,CAACE,WAAW,GAAGtE,GAAG,CAAC,cAAc,CAAC,CAAC,aAAa,CAAC,CAACO,IAAI,EAAE;QAC/E,IAAI,CAACnD,MAAM,CAACgH,WAAW,CAACG,IAAI,GAAGvE,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,CAACO,IAAI,EAAE;QACjE,IAAI,CAACnD,MAAM,CAACgH,WAAW,CAACI,aAAa,GAAGxE,GAAG,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAACO,IAAI,EAAE;QACnF,IAAI,CAACnD,MAAM,CAACgH,WAAW,CAACK,aAAa,GAAGzE,GAAG,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAACO,IAAI,EAAE;QACnF,IAAI,CAACnD,MAAM,CAACgH,WAAW,CAACM,aAAa,GAAG1E,GAAG,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAACO,IAAI,EAAE;QACnF,IAAI,CAACnD,MAAM,CAACgH,WAAW,CAACO,aAAa,GAAG3E,GAAG,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAACO,IAAI,EAAE;QACnF,IAAI,CAACnD,MAAM,CAACgH,WAAW,CAACQ,aAAa,GAAG5E,GAAG,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAACO,IAAI,EAAE;QACnF,IAAI,CAACnD,MAAM,CAACgH,WAAW,CAACS,aAAa,GAAG7E,GAAG,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAACO,IAAI,EAAE;QACnF,IAAI,CAACnD,MAAM,CAACgH,WAAW,CAACtB,KAAK,GAAG9C,GAAG,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAACO,IAAI,EAAE;QACnE,IAAI,CAACnD,MAAM,CAACgH,WAAW,CAACU,SAAS,GAAG9E,GAAG,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,CAACO,IAAI,EAAE;QAC3E,IAAI,CAACnD,MAAM,CAACgH,WAAW,CAACW,WAAW,GAAG/E,GAAG,CAAC,cAAc,CAAC,CAAC,aAAa,CAAC,CAACO,IAAI,EAAE;QAC/E,IAAI,CAACnD,MAAM,CAACgH,WAAW,CAACY,WAAW,GAAGhF,GAAG,CAAC,cAAc,CAAC,CAAC,aAAa,CAAC,CAACO,IAAI,EAAE;QAC/E,IAAI,CAACnD,MAAM,CAACgH,WAAW,CAACrB,cAAc,GAAG/C,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,CAACO,IAAI,EAAE;QACjF,IAAI,CAACnD,MAAM,CAACgH,WAAW,CAACa,cAAc,GAAG,yBAAyB,GAAGjF,GAAG,CAAC,cAAc,CAAC,CAAC,gBAAgB,CAAC;QAE1G,IAAI,IAAI,CAAC5C,MAAM,CAACmF,QAAQ,CAACW,qBAAqB,IAAI,CAAC,EAAE;UACnD,IAAI,CAACjG,KAAK,CAACgD,qBAAqB,EAAE;UAClC;UACA,IAAI,CAACpD,MAAM,CAAC2D,QAAQ,CAAC,CAAC,qBAAqB,CAAC,EAAE;YAAEtC,KAAK,EAAE;cAAEgH,OAAO,EAAE,IAAI;cAAEC,SAAS,EAAE,SAAS;cAAEC,aAAa,EAAE;YAAM;UAAE,CAAE,CAAC;SACzH,MAAM;UACL,IAAI,CAACnI,KAAK,CAACgD,qBAAqB,EAAE;UAClC,IAAIoF,mBAAmB,GAAG;YAAEC,eAAe,EAAE;UAAI,CAAE;UACnD;UACA,IAAI,CAACzI,MAAM,CAAC2D,QAAQ,CAAC,CAAC,wBAAwB,CAAC,EAAE;YAAEtC,KAAK,EAAE;cAAEgH,OAAO,EAAE,IAAI;cAAEC,SAAS,EAAE,SAAS;cAAEE,mBAAmB,EAAEA;YAAmB;UAAE,CAAE,CAAC;;;IAGpJ,CAAC,EAAG7F,KAAK,IAAI;MACX,IAAI,CAACvC,KAAK,CAACgD,qBAAqB,EAAE;MAClC,IAAIc,QAAQ,GAAG,IAAI,CAAC9D,KAAK,CAAC+D,sBAAsB,CAACxB,KAAK,CAAC;MACvD,IAAI,CAACvC,KAAK,CAACmF,YAAY,CAACrB,QAAQ,CAAC;MACjC;MACA,IAAI,CAAClE,MAAM,CAAC2D,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE;QAAEtC,KAAK,EAAE;UAAEgH,OAAO,EAAE,IAAI;UAAEC,SAAS,EAAE;QAAS;MAAE,CAAE,CAAC;IAC5F,CAAC,CACF;EACH;EAEAI,OAAO;IACL;IACA,IAAI,CAAC1I,MAAM,CAAC2D,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC;EAC7C;EAEAgF,QAAQ;IACN,IAAI,CAAC3I,MAAM,CAAC2D,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;EACpC;;;mBAnRWhF,cAAc;AAAA;;QAAdA,cAAc;EAAAiK;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCrB3BlJ,4DAAAA,oBAAuB;MAEnBA,uDAAAA,yBAAqF;MACrFA,4DAAAA,mBAA6B;MAAAA,oDAAAA,YAAK;MAAAA,0DAAAA,EAAY;MAIlDA,4DAAAA,qBAAsE;MAE3CA,oDAAAA,GAA0B;;MAAAA,uDAAAA,UAAI;MAAAA,oDAAAA,IAA2B;;MAAAA,0DAAAA,EAAI;MAExFA,4DAAAA,cAA8B;MAKpBA,uDAAAA,qBAAyG;;MAC3GA,0DAAAA,EAAW;MACXA,wDAAAA,qDAGM;MACNA,wDAAAA,qDAGM;MACNA,4DAAAA,mBAAuC;MAE6CA,wDAAAA;QAAA,OAAamJ,0BAAsB;MAAA,EAAC;MAAgCnJ,0DAAAA,EAAe;MAErKA,4DAAAA,mBAAmB;MACXA,oDAAAA,IACJ;;MAAAA,4DAAAA,gBAAwC;MAApBA,wDAAAA;QAAA,OAASmJ,aAAS;MAAA,EAAC;MAACnJ,oDAAAA,IAAuC;;MAAAA,0DAAAA,EAAO;MAI5FA,wDAAAA,qDAEM;MAEJA,4DAAAA,sBAAyJ;MAA7IA,wDAAAA;QAAA,OAASmJ,+BAA2B;MAAA,EAAC;MAAwGnJ,oDAAAA,IAAwB;;MAAAA,0DAAAA,EAAa;MAKtMA,4DAAAA,eAAwB;MAAMA,wDAAAA;QAAA,OAASmJ,cAAU;MAAA,EAAC;MAACnJ,oDAAAA,IAA0B;;MAAAA,0DAAAA,EAAO;;;MApC3DA,uDAAAA,GAA0B;MAA1BA,+DAAAA,CAAAA,yDAAAA,mBAA0B;MAAIA,uDAAAA,GAA2B;MAA3BA,+DAAAA,CAAAA,yDAAAA,qBAA2B;MAG5EA,uDAAAA,GAA4B;MAA5BA,wDAAAA,iCAA4B;MAIYA,uDAAAA,GAAwC;MAAxCA,mEAAAA,gBAAAA,yDAAAA,oBAAwC;MAE1EA,uDAAAA,GACgD;MADhDA,wDAAAA,6GACgD;MAGhDA,uDAAAA,GACwC;MADxCA,wDAAAA,wKACwC;MAKcA,uDAAAA,GAAuB;MAAvBA,wDAAAA,4BAAuB;MAGzEA,uDAAAA,GACJ;MADIA,gEAAAA,KAAAA,yDAAAA,yCACJ;MAAwCA,uDAAAA,GAAuC;MAAvCA,+DAAAA,CAAAA,yDAAAA,iCAAuC;MAI/EA,uDAAAA,GAAqG;MAArGA,wDAAAA,gHAAqG;MAIrBA,uDAAAA,GAAoE;MAApEA,wDAAAA,6EAAoE;MAACA,uDAAAA,GAAwB;MAAxBA,+DAAAA,CAAAA,yDAAAA,kBAAwB;MAKtIA,uDAAAA,GAA0B;MAA1BA,+DAAAA,CAAAA,yDAAAA,oBAA0B","sources":["./src/app/pages/login-first/login-first-routing.module.ts","./src/app/pages/login-first/login-first.module.ts","./src/app/pages/login-first/login-first.page.ts","./src/app/pages/login-first/login-first.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginFirstPage } from './login-first.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginFirstPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginFirstPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginFirstPageRoutingModule } from './login-first-routing.module';\r\n\r\nimport { LoginFirstPage } from './login-first.page';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    LoginFirstPageRoutingModule\r\n  ],\r\n  declarations: [LoginFirstPage]\r\n})\r\nexport class LoginFirstPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MenuController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LoggerServiceProvider } from 'src/providers/logger-service/logger-service';\r\nimport { ConfigProvider } from 'src/providers/utils/config';\r\nimport { UtilService } from 'src/providers/utils/utils.service';\r\nimport { LoginService } from '../login/loginService';\r\nimport * as HttpStatus from 'http-status-codes';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { FingerprintAIO } from '@ionic-native/fingerprint-aio/ngx';\r\nimport { JsonStoreProvider } from 'src/providers/json-store/json-store';\r\nimport { MediaReleaseService } from '../media-release/mediaService';\r\nimport { GetProfileDetailsService } from '../profile/getProfileDetailsService';\r\nimport { MenuOptions } from 'src/app/app.component';\r\n\r\n@Component({\r\n  selector: 'app-login-first',\r\n  templateUrl: './login-first.page.html',\r\n  styleUrls: ['./login-first.page.scss'],\r\n})\r\nexport class LoginFirstPage implements OnInit {\r\n\r\n  loginFormFirst: FormGroup;\r\n  login_terms: boolean;\r\n  showFingerPrintPopup: any;\r\n  errorLogattemt = 0;\r\n  refreshToken: any;\r\n\r\n  constructor(private router: Router,\r\n    public formBuilder: FormBuilder,\r\n    private menuControl: MenuController,\r\n    private logger: LoggerServiceProvider,\r\n    public utils: UtilService,\r\n    private loginService: LoginService,\r\n    public translate: TranslateService,\r\n    public config: ConfigProvider,\r\n    private faio: FingerprintAIO,\r\n    public jsonStore: JsonStoreProvider,\r\n    public profileService: GetProfileDetailsService,\r\n    public mediaReleaseService: MediaReleaseService) {\r\n\r\n\r\n    }\r\n\r\n\r\n    ionViewDidEnter(){\r\n      this.menuControl.enable(true, 'first');\r\n      this.utils.component.emit(MenuOptions.LOGIN);\r\n\r\n    }\r\n  ngOnInit() {\r\n\r\n    this.login_terms = true;\r\n    this.initializeForm();\r\n    this.showFingerPrintPopup = history.state.showFingerPrint;\r\n    if (this.showFingerPrintPopup) {\r\n      this.showBioMetricPopup();\r\n    }\r\n  }\r\n\r\n  initializeForm() {\r\n    let EMAIL_PATTERN = ConfigProvider.EMAIL_PATTERN;\r\n    this.loginFormFirst = this.formBuilder.group({\r\n      username: ['deepansh.jain@sunlife.com', [Validators.required, Validators.pattern(EMAIL_PATTERN)]],\r\n      loginTerms: [{ value: true, disabled: false }]\r\n    });\r\n  }\r\n\r\n  /**\r\n  * In this method we are updating the side Menu title\r\n  */\r\n\r\n\r\n  showBioMetricPopup() {\r\n    setTimeout(() => {\r\n      this.faio.show({\r\n        title: \"SunAccess\", // (Android Only) | optional | Default: \"<APP_NAME> Biometric Sign On\"\r\n        subtitle: \"Biometric Authentication\", // (Android Only) | optional | Default: null\r\n        description: \"Please authenticate\", // optional | Default: null\r\n        fallbackButtonTitle: \"Use Backup\", // optional | When disableBackup is false defaults to \"Use Pin\".\r\n        // When disableBackup is true defaults to \"Cancel\"\r\n        disableBackup: true, // optional | default: false\r\n      }).then((result: any) => {\r\n        // touch id success\r\n        this.touchIDValidate();\r\n      }, (error) => {\r\n\r\n        console.log(\"touch id not valida try again\");\r\n      }).catch((error: any) => {\r\n        console.log(\"catch error touch id \" + error);\r\n      });\r\n\r\n    }, 500);\r\n\r\n  }\r\n\r\n  getSecureWordforUser(userIdLogin) {\r\n    this.utils.showProgressLoader();\r\n    var username = userIdLogin;\r\n    // if (this.utils.isDeviceOnLine()) {\r\n    // if (this.utils.isDevice()) {\r\n    this.loginService.getSecurePhrase(username).then((res) => {\r\n      try {\r\n        this.utils.dissmisProgressLoader();\r\n        if (res['responseJSON'] && res['responseJSON']['statusCode'] == HttpStatus.OK) {\r\n          this.config.secureWordImage = \"data:image/jpeg;base64,\" + res['responseJSON']['image'];\r\n          let usernameId = { usernameFromFirstLogin: this.loginFormFirst.controls['username'].value.trim() };\r\n          // this.navCtrl.push(LoginPage, usernameId);\r\n          this.router.navigate(['/login'], { state: { usernameId: usernameId } });\r\n          // this.loginFormFirst.reset();\r\n          this.loginFormFirst.controls['username'].reset();\r\n          this.loginFormFirst.controls['username'].setValue(null);\r\n\r\n        }\r\n      } catch (e) {\r\n        this.utils.dissmisProgressLoader();\r\n        this.logger.error(\"loginSuccess catch eror : \" + JSON.stringify(e));\r\n      }\r\n    }, (err) => {\r\n      this.utils.dissmisProgressLoader();\r\n      let errorMsg = this.utils.handleServiceException(err);\r\n      this.utils.showAlert(\"\", errorMsg);\r\n    });\r\n    // }\r\n    // else {\r\n    //   this.utils.dissmisProgressLoader();\r\n    //   this.utils.showAlert(\"\", this.translate.instant('Login.useMobile'));\r\n    // }\r\n    // } else {\r\n    //   let errorMsg = this.translate.instant('generic_msgs.network_err');\r\n    //   this.utils.showAlert(\"\", errorMsg);\r\n    // }\r\n\r\n  }\r\n\r\n  navigateToSecondLoginPage() {\r\n    let Userid = this.loginFormFirst.controls['username'].value.trim();\r\n    this.getSecureWordforUser(Userid);\r\n  }\r\n\r\n  /** on click of checkbox this method will call*/\r\n  checkboxChange(checked: any) {\r\n    // this.login_terms=!this.login_terms;\r\n    if (checked.detail.checked) {\r\n      this.login_terms = true;\r\n    } else {\r\n      this.login_terms = false;\r\n    }\r\n  }\r\n\r\n  touchIDValidate() {\r\n    this.logger.trace(\"FirstLoginPage--touchIDValidate--start\");\r\n    let userID = this.config.passCodeInfo.userName;\r\n    let deviceID = this.utils.getDeviceId();\r\n    // console.log(\"this.config.passCodeInfo.passCodeToken\",this.config.passCodeInfo.passCodeToken);\r\n    let token = this.config.passCodeInfo.passCodeToken.replace(/[$@]/g, '');\r\n    //console.log(\"token\",token);\r\n    this.logger.trace(\"touch id before calling adapter userID : \" + userID + \" deviceID : \" + deviceID + \" token :\" + token);\r\n    if (this.utils.isDeviceOnLine()) {\r\n      this.utils.showProgressLoader();\r\n      this.loginService.userLogin(userID, token, deviceID).then((res) => {\r\n        this.loginSuccess(res);\r\n      }, (err) => {\r\n        this.errorLogattemt = this.errorLogattemt + 1;\r\n        if (this.errorLogattemt == 1) {\r\n          this.touchIDValidate();\r\n        }\r\n        else {\r\n          this.utils.dissmisProgressLoader();\r\n          this.utils.presentToast(this.translate.instant('passscode_page.passcode_error'));\r\n          this.logger.error(\"touch id login failure error \" + JSON.stringify(err));\r\n\r\n        }\r\n      });\r\n\r\n    } else {\r\n      this.utils.presentToast(this.translate.instant('generic_msgs.network_err'));\r\n\r\n    }\r\n    this.logger.trace(\"FirstLoginPage--touchIDValidate--end\");\r\n  }\r\n\r\n  /**this method will call when login adapter call success */\r\n  loginSuccess(res) {\r\n    this.logger.trace(\"loginPage--loginSuccess--start\");\r\n\r\n    this.logger.debug(\"loginSuccess-\" + res);\r\n\r\n    try {\r\n      if (res['responseJSON'] && res['responseJSON']['statusCode'] == HttpStatus.OK) {\r\n        this.config.userInfo.encryptedUserId = res['responseJSON']['encrypted_user_id'];\r\n        this.config.userInfo.token = res['responseJSON']['token_type'] + \" \" + res['responseJSON']['access_token'];\r\n\r\n        if (res['responseJSON']['force_change_password'].toUpperCase() == 'YES') {\r\n          this.config.userInfo.forceChangePassword = res['responseJSON']['force_change_password'];\r\n\r\n          // this.navCtrl.setRoot(ChangePasswordPage, { animate: true, direction: 'forward' });\r\n        }\r\n        else {\r\n          this.config.userInfo.expiresIn = res['responseJSON']['expires_in'];\r\n          this.config.userInfo.userId = res['responseJSON']['userId'];\r\n          this.config.userInfo.name = res['responseJSON']['name'];\r\n          this.config.userInfo.email = res['responseJSON']['email'];\r\n          this.config.userInfo.identityNumber = res['responseJSON']['identity_number'];\r\n          this.config.userInfo.contactNumber = res['responseJSON']['contact_number'];\r\n          this.config.userInfo.role = res['responseJSON']['role'];\r\n          this.config.userInfo.forceChangeSecureWord = res['responseJSON']['force_secure_phrase'];\r\n          this.config.userInfo.lastLoginDate = res['responseJSON']['last_login_date'];\r\n          this.config.userInfo.issued = res['responseJSON']['issued'];\r\n          this.config.userInfo.expires = res['responseJSON']['expires'];\r\n          this.config.userInfo.unreadNoti = res['responseJSON']['unread_notifications'];\r\n          this.utils.publishSomeData({ 'user': 'UnreadNotiUpdated', 'data': this.config.userInfo.unreadNoti });\r\n          this.config.userInfo.notification_subs_prompt = res['responseJSON']['notification_subscription_prompt'];\r\n          this.config.userInfo.subscribedNotitags = res['responseJSON']['notification_subscriptions'];\r\n          this.config.userInfo.showPasswordExpirationMsgFlag = res['responseJSON']['password_change_reminder'];\r\n          this.config.userInfo.passwordReminderMsg = res['responseJSON']['password_reminder_message'];\r\n          this.refreshToken = res['responseJSON']['refresh_token'].trim();\r\n          this.config.userInfo.maskedContactNumber = res['responseJSON']['contact_number'].replace(/\\d(?=\\d{4})/g, \"*\");\r\n\r\n          if (this.config.sessionTimeout != null) {\r\n            clearTimeout(this.config.sessionTimeout);\r\n            this.config.sessionTimeout = null\r\n          }\r\n\r\n          this.jsonStore.addDataToJsonStore(this.jsonStore.collectionNames.refreshToken, {\r\n            refreshToken: this.refreshToken\r\n          });\r\n\r\n\r\n          this.getProfileDetails();\r\n        }\r\n\r\n      } else if (res['responseJSON']['statusCode'] == HttpStatus.BAD_REQUEST) {\r\n        this.utils.dissmisProgressLoader();\r\n        this.utils.showAlert(\"\", res['responseJSON']['error_description']);\r\n      } else {\r\n        this.utils.dissmisProgressLoader();\r\n        this.utils.showAlert(\"\", res['responseJSON']['error_description']);\r\n      }\r\n    } catch (e) {\r\n      this.utils.dissmisProgressLoader();\r\n      this.logger.error(\"loginSuccess catch eror : \" + JSON.stringify(e));\r\n    }\r\n    this.logger.trace(\"loginPage--loginSuccess--end\");\r\n  }\r\n\r\n  getProfileDetails() {\r\n    this.profileService.getProfileDetails().then(\r\n      (res) => {\r\n        if (res['responseJSON'] && res['responseJSON']['statusCode'] == HttpStatus.OK) {\r\n          this.config.userDetails.name = res['responseJSON']['name'];\r\n          this.config.userDetails.birthDate = res['responseJSON']['birthDate'].trim();\r\n          this.config.userDetails.nationality = res['responseJSON']['nationality'].trim();\r\n          this.config.userDetails.race = res['responseJSON']['race'].trim();\r\n          this.config.userDetails.maritalStatus = res['responseJSON']['maritalStatus'].trim();\r\n          this.config.userDetails.addressField1 = res['responseJSON']['addressField1'].trim();\r\n          this.config.userDetails.addressField2 = res['responseJSON']['addressField2'].trim();\r\n          this.config.userDetails.addressField3 = res['responseJSON']['addressField3'].trim();\r\n          this.config.userDetails.addressField4 = res['responseJSON']['addressField4'].trim();\r\n          this.config.userDetails.addressField5 = res['responseJSON']['addressField5'].trim();\r\n          this.config.userDetails.email = res['responseJSON']['email'].trim();\r\n          this.config.userDetails.homePhone = res['responseJSON']['homePhone'].trim();\r\n          this.config.userDetails.mobilePhone = res['responseJSON']['mobilePhone'].trim();\r\n          this.config.userDetails.officePhone = res['responseJSON']['officePhone'].trim();\r\n          this.config.userDetails.identityNumber = res['responseJSON']['identityNo'].trim();\r\n          this.config.userDetails.profilePicture = 'data:image/jpeg;base64,' + res['responseJSON']['profilePicture'];\r\n\r\n          if (this.config.userInfo.forceChangeSecureWord == 1) {\r\n            this.utils.dissmisProgressLoader();\r\n            // this.navCtrl.setRoot(UpdateSecureWordPage, { animate: true, direction: 'forward', gotoDashboard: 'true' });\r\n            this.router.navigate(['/update-secure-word'], { state: { animate: true, direction: 'forward', gotoDashboard: 'true' } });\r\n          } else {\r\n            this.utils.dissmisProgressLoader();\r\n            let comingFromLoginFlag = { comingFromLogin: true };\r\n            //this.router.navigate(['/welcome-tour'], { state: { animate: true, direction: 'forward', comingFromLoginFlag: comingFromLoginFlag } });\r\n            this.router.navigate(['/dashboard-after-login'], { state: { animate: true, direction: 'forward', comingFromLoginFlag: comingFromLoginFlag } });\r\n          }\r\n        }\r\n      }, (error) => {\r\n        this.utils.dissmisProgressLoader();\r\n        let errorMsg = this.utils.handleServiceException(error);\r\n        this.utils.presentToast(errorMsg);\r\n        // this.navCtrl.setRoot(LoginFirstPage, { animate: true, direction: 'forward' });\r\n        this.router.navigate(['/login-first'], { state: { animate: true, direction: 'forward' } });\r\n      }\r\n    );\r\n  }\r\n\r\n  openTNC() {\r\n    // this.navCtrl.push(TermsnconditionsPage);\r\n    this.router.navigate(['/termsnconditions']);\r\n  }\r\n\r\n  register() {\r\n    this.router.navigate(['/sign-up']);\r\n  }\r\n\r\n\r\n}\r\n","<ion-header mode=\"ios\">\r\n  <ion-toolbar color=\"primary\" class=\"toolbar\">\r\n    <ion-menu-button slot=\"start\" auto-hide=\"false\"  color=\"secondary\"></ion-menu-button>\r\n    <ion-title class=\"bold-font\">Login</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"app_bg1 text_color_base\" forceOverscroll=\"false\" > \r\n  <div class=\"UserimgDiv\">\r\n    <p class=\"welcome_txt\">{{\"welcome\" | translate }}<br>{{\"sunacces\" | translate }}</p>\r\n  </div>\r\n<div style=\"margin-top: -5%;\">\r\n  <form [formGroup]=\"loginFormFirst\" class=\"margin_bottom\">\r\n    <div class=\"white_container_border_radius formPadding\">\r\n      <div class=\"marg-area\">\r\n        <ion-item  lines=\"none\"  class=\"border\">\r\n          <ion-input formControlName=\"username\" placeholder='{{\"emailid\" | translate }}' type=\"email\" ></ion-input>\r\n        </ion-item>\r\n        <div *ngIf=\"loginFormFirst.get('username').hasError('required')\r\n                        && loginFormFirst.get('username').dirty\">\r\n          <span class=\"fail\">{{\"Login.userName_req\" | translate}}</span>\r\n        </div>\r\n        <div *ngIf=\"!loginFormFirst.get('username').hasError('required') && loginFormFirst.get('username').hasError('pattern')\r\n                && loginFormFirst.get('username').dirty\">\r\n          <span class=\"fail\">{{\"Login.email_req\" | translate}}</span>\r\n        </div>\r\n        <ion-row class=\"terms_conditions flex\">\r\n          <ion-col size=\"1\">\r\n            <ion-checkbox  mode=\"md\"   formControlName=\"loginTerms\" [checked]=\"login_terms\" (ionChange)=\"checkboxChange($event)\" class=\"margin_top_bottom_auto\"></ion-checkbox>\r\n          </ion-col>\r\n          <ion-col size=\"11\">\r\n            <span>{{\"terms_conditions_accept\" | translate }}\r\n              <span class=\"terms\" (click)=\"openTNC()\">{{\"terms_and_conditions\" | translate }}</span>\r\n            </span>\r\n          </ion-col>\r\n        </ion-row>\r\n        <div *ngIf=\"loginFormFirst.controls.loginTerms.value === false  && loginFormFirst.get('loginTerms').touched\">\r\n          <span class=\"fail padding_015\">{{\"Login.TandM_req\" | translate}}</span>\r\n        </div>\r\n        <!-- <ion-row text-center> -->\r\n          <ion-button (click)=\"navigateToSecondLoginPage()\" color=\"secondary\" expand=\"block\"  [disabled]=\"!loginFormFirst.controls.username.valid || !login_terms\">{{\"login\" | translate }}</ion-button>\r\n        <!-- </ion-row> -->\r\n      </div>\r\n    </div>\r\n  </form>\r\n  <div class=\"login_link\"><span (click)=\"register()\">{{\"newuser\" | translate }}</span></div>\r\n\r\n</div>\r\n\r\n\r\n \r\n</ion-content>\r\n"],"names":["RouterModule","LoginFirstPage","routes","path","component","LoginFirstPageRoutingModule","forChild","imports","exports","CommonModule","FormsModule","ReactiveFormsModule","IonicModule","TranslateModule","LoginFirstPageModule","declarations","ConfigProvider","HttpStatus","Validators","MenuOptions","i0","constructor","router","formBuilder","menuControl","logger","utils","loginService","translate","config","faio","jsonStore","profileService","mediaReleaseService","ionViewDidEnter","enable","emit","LOGIN","ngOnInit","login_terms","initializeForm","showFingerPrintPopup","history","state","showFingerPrint","showBioMetricPopup","EMAIL_PATTERN","loginFormFirst","group","username","required","pattern","loginTerms","value","disabled","setTimeout","show","title","subtitle","description","fallbackButtonTitle","disableBackup","then","result","touchIDValidate","error","console","log","catch","getSecureWordforUser","userIdLogin","showProgressLoader","getSecurePhrase","res","dissmisProgressLoader","OK","secureWordImage","usernameId","usernameFromFirstLogin","controls","trim","navigate","reset","setValue","e","JSON","stringify","err","errorMsg","handleServiceException","showAlert","navigateToSecondLoginPage","Userid","checkboxChange","checked","detail","trace","userID","passCodeInfo","userName","deviceID","getDeviceId","token","passCodeToken","replace","isDeviceOnLine","userLogin","loginSuccess","errorLogattemt","presentToast","instant","debug","userInfo","encryptedUserId","toUpperCase","forceChangePassword","expiresIn","userId","name","email","identityNumber","contactNumber","role","forceChangeSecureWord","lastLoginDate","issued","expires","unreadNoti","publishSomeData","notification_subs_prompt","subscribedNotitags","showPasswordExpirationMsgFlag","passwordReminderMsg","refreshToken","maskedContactNumber","sessionTimeout","clearTimeout","addDataToJsonStore","collectionNames","getProfileDetails","BAD_REQUEST","userDetails","birthDate","nationality","race","maritalStatus","addressField1","addressField2","addressField3","addressField4","addressField5","homePhone","mobilePhone","officePhone","profilePicture","animate","direction","gotoDashboard","comingFromLoginFlag","comingFromLogin","openTNC","register","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}