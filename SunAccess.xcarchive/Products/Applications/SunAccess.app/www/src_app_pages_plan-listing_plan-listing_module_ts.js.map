{"version":3,"file":"src_app_pages_plan-listing_plan-listing_module_ts.js","mappings":"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","sources":["./src/app/pages/plan-listing/plan-listing-routing.module.ts","./src/app/pages/plan-listing/plan-listing.module.ts","./src/app/pages/plan-listing/plan-listing.page.ts","./src/app/pages/plan-listing/plan-listing.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PlanListingPage } from './plan-listing.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PlanListingPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PlanListingPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PlanListingPageRoutingModule } from './plan-listing-routing.module';\r\n\r\nimport { PlanListingPage } from './plan-listing.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    PlanListingPageRoutingModule\r\n  ],\r\n  declarations: [PlanListingPage]\r\n})\r\nexport class PlanListingPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateConfigService } from '../../services/translate-config.service';\r\nimport { UtilService } from 'src/providers/utils/utils.service';\r\nimport { LoggerServiceProvider } from 'src/providers/logger-service/logger-service';\r\nimport { MenuOptions } from 'src/app/app.component';\r\nimport { ConfigProvider } from 'src/providers/utils/config';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { GetPolicyListService } from './getPolicyListService';\r\nimport { Router } from '@angular/router';\r\nimport * as HttpStatus from 'http-status-codes';\r\nimport { MenuController } from '@ionic/angular';\r\n\r\n\r\n@Component({\r\n  selector: 'app-plan-listing',\r\n  templateUrl: './plan-listing.page.html',\r\n  styleUrls: ['./plan-listing.page.scss'],\r\n})\r\nexport class PlanListingPage implements OnInit{\r\n  selectedLanguage:string;\r\n  policyList:any=[];\r\n  isShowingLoader = true;\r\n\r\n  isConventional : boolean = true;\r\n  isTakaful:boolean = false;\r\n  tabSelected:any = 'Conventional';\r\n  errorMsg : any;\r\n  canTryAgain : any=false;\r\n  conventionalData :any =[];\r\n  takafulData : any = [];\r\n  policyDetails: any;\r\n  constructor(\r\n    private translateConfigService: TranslateConfigService,\r\n    public logger: LoggerServiceProvider,\r\n    public translate:TranslateService,\r\n    public utils : UtilService,\r\n    private router: Router,\r\n    public policyListSrvc : GetPolicyListService,\r\n    public menuControler: MenuController,\r\n    private config: ConfigProvider )\r\n    {\r\n      this.selectedLanguage = this.translateConfigService.getDefaultLanguage();\r\n      this.translateConfigService.setLanguage('en');\r\n     }\r\n     ngOnInit(){\r\n      this.getPolicyList();\r\n    }\r\n     ionViewDidLoad() {\r\n      this.logger.log('ionViewDidLoad PlanListingPage');\r\n      this.getPolicyList();\r\n    }\r\n\r\n   /**\r\n     * In this method we are updated the side menu title\r\n     */\r\n    ionViewDidEnter() {\r\n      // this.menuControler.toggle();\r\n\r\n      this.menuControler.enable(true,'custom')\r\n      this.utils.component.emit(MenuOptions.MY_POLICY);\r\n    }\r\n\r\n\r\n    /**\r\n     * to get the policy list\r\n     */\r\n    getPolicyList(){\r\n          if(this.utils.isDeviceOnLine()){\r\n            this.canTryAgain = false;\r\n            this.policyListSrvc.getPolicyList(this.utils.getUserIdentity()).then((res) => {\r\n              try {\r\n                this.isShowingLoader = false;\r\n                if (res['responseJSON'] && res['responseJSON']['statusCode'] == HttpStatus.OK) {\r\n                  this._separateByPlanType(res['responseJSON']['array']);\r\n                }else{\r\n                  this.errorMsg= res['responseJSON']['error_description'];\r\n                }\r\n              }catch (e) {\r\n                this.isShowingLoader = false;\r\n                this.canTryAgain = true;\r\n                this.logger.error(\"loginSuccess catch eror : \" + JSON.stringify(e));\r\n                this.errorMsg = this.translate.instant('generic_msgs.server_err');\r\n              }\r\n            }, (err) => {\r\n              this.isShowingLoader = false;\r\n              this.canTryAgain = true;\r\n              this.errorMsg = this.utils.handleServiceException(err);\r\n            });\r\n          }else{\r\n            this.isShowingLoader = false;\r\n            this.canTryAgain = true;\r\n            this.errorMsg= this.translate.instant('generic_msgs.network_err');\r\n          }\r\n    }\r\n    navToPlanDetails(policyDetails){\r\n      //this.navCtrl.push(PlanDetailsPage , {policyData : policyDetails});\r\n      this.router.navigate(['plan-details'], { state: { policyData: policyDetails } });\r\n    }\r\n    toggletab(tab){\r\n      this.tabSelected = tab;\r\n      if(tab == 'Conventional'){\r\n       this.isConventional  = true;\r\n       this.isTakaful = false;\r\n       this.policyList = this.conventionalData\r\n      }else if(tab == 'Takaful'){\r\n       this.isConventional  = false;\r\n       this.isTakaful = true;\r\n       this.policyList = this.takafulData\r\n      }\r\n    }\r\n    _separateByPlanType(PlanListingData) {\r\n      for (var index = 0; index < PlanListingData.length; ++index) {\r\n        var data = PlanListingData[index];\r\n        if(data.planType == 'Conventional'){\r\n          this.conventionalData.push(data);\r\n        }else if(data.planType == 'Takaful'){\r\n          this.takafulData.push(data);\r\n        }\r\n        this.policyList =  this.conventionalData;\r\n        this.errorMsg = this.translate.instant('generic_msgs.no_data');\r\n       }\r\n    }\r\n }\r\n\r\n","<ion-header mode=\"ios\">\r\n \r\n  <ion-toolbar color=\"primary\" style=\"border-bottom:3px solid white;\" >\r\n    <!-- <ion-menu-button slot=\"start\" auto-hide=\"false\" color=\"secondary\"></ion-menu-button> -->\r\n\r\n    <ion-menu-button slot=\"start\" color=\"secondary\"></ion-menu-button>\r\n\r\n    <ion-title class=\"bold-font\"> {{\"plan_listing.title\"| translate}} </ion-title>\r\n  </ion-toolbar>\r\n\r\n  <ion-toolbar color=\"primary\" class=\"tabs\">\r\n    <ion-row class=\"tabsRow\">\r\n      <ion-col size=\"6\" class=\"ion-text-center\" (click)=\"toggletab('Conventional')\" [ngClass] = \"{'tab-selected' : isConventional,'tab': !isConventional}\">\r\n        <ion-label>{{\"plan_listing.type_conventional\" | translate}}</ion-label>\r\n      </ion-col>\r\n      <ion-col size=\"6\" class=\"ion-text-center\" (click)=\"toggletab('Takaful')\" [ngClass] = \"{'tab-selected' : isTakaful,'tab': !isTakaful}\">\r\n        <ion-label>{{\"plan_listing.type_takaful\" | translate}}</ion-label>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-toolbar>\r\n</ion-header>\r\n \r\n<ion-content class=\"app_bg2 text_color_base ion-padding\">\r\n  <section class=\"spinnersection ion-text-center\" *ngIf=\"isShowingLoader\">\r\n    <ion-spinner style=\"height:98%;\" name=\"lines-sharp-small\"></ion-spinner>\r\n</section>\r\n<section class=\"errorMsgSection white_container_border_radius\"  *ngIf=\"!(policyList.length>0) && !isShowingLoader\">\r\n    <span>{{errorMsg}}</span>\r\n    <ion-button  style=\"--background:var(--ion-color-white);\"  *ngIf=\"canTryAgain\" (click)=\"getPolicyList()\"> {{\"generic_msgs.try_again\" | translate }}</ion-button>\r\n</section>\r\n<ion-list *ngIf=\"policyList.length>0\" class=\"white_container_border_radius ion-padding\">\r\n<section  *ngFor=\"let data of policyList\" (click)=\"navToPlanDetails(data)\">\r\n       <section *ngIf=\"data.planType === tabSelected\">\r\n        <ion-row class=\"cardheader header\"  [ngClass] = \"{'header-conventional' : isConventional,'header-takaful': isTakaful}\">\r\n            <p style=\"padding-left: 5px; padding-top: 5px; font-size: 1rem;\">{{data.planName}}</p>\r\n            <p style=\"padding-left: 5px; padding-bottom: 5px; font-size: 1rem;\"  >{{data.policyNumber}}</p>\r\n        </ion-row>\r\n      </section>\r\n</section>\r\n</ion-list>\r\n</ion-content>\r\n"],"names":["RouterModule","PlanListingPage","routes","path","component","PlanListingPageRoutingModule","forChild","imports","exports","CommonModule","FormsModule","TranslateModule","IonicModule","PlanListingPageModule","declarations","MenuOptions","HttpStatus","i0","constructor","translateConfigService","logger","translate","utils","router","policyListSrvc","menuControler","config","selectedLanguage","getDefaultLanguage","setLanguage","ngOnInit","getPolicyList","ionViewDidLoad","log","ionViewDidEnter","enable","emit","MY_POLICY","isDeviceOnLine","canTryAgain","getUserIdentity","then","res","isShowingLoader","OK","_separateByPlanType","errorMsg","e","error","JSON","stringify","instant","err","handleServiceException","navToPlanDetails","policyDetails","navigate","state","policyData","toggletab","tab","tabSelected","isConventional","isTakaful","policyList","conventionalData","takafulData","PlanListingData","index","length","data","planType","push","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}