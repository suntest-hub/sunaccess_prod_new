{"version":3,"file":"src_app_pages_payment-confirmation_payment-confirmation_module_ts.js","mappings":"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","sources":["./src/app/pages/payment-confirmation/payment-confirmation-routing.module.ts","./src/app/pages/payment-confirmation/payment-confirmation.module.ts","./src/app/pages/payment-confirmation/payment-confirmation.page.ts","./src/app/pages/payment-confirmation/payment-confirmation.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PaymentConfirmationPage } from './payment-confirmation.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PaymentConfirmationPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PaymentConfirmationPageRoutingModule {}\r\n","import { TranslateModule } from '@ngx-translate/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PaymentConfirmationPageRoutingModule } from './payment-confirmation-routing.module';\r\n\r\nimport { PaymentConfirmationPage } from './payment-confirmation.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    PaymentConfirmationPageRoutingModule\r\n  ],\r\n  declarations: [PaymentConfirmationPage]\r\n})\r\nexport class PaymentConfirmationPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LoggerServiceProvider } from 'src/providers/logger-service/logger-service';\r\nimport { ConfigProvider } from 'src/providers/utils/config';\r\nimport { UtilService } from 'src/providers/utils/utils.service';\r\nimport { GetMerchantInfoService } from './merchantInfoService';\r\nimport * as HttpStatus from 'http-status-codes';\r\nimport { PaymentSuccessService } from '../make-payment/paymentSuccessService';\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare var eGHL: any;\r\n@Component({\r\n  selector: 'app-payment-confirmation',\r\n  templateUrl: './payment-confirmation.page.html',\r\n  styleUrls: ['./payment-confirmation.page.scss'],\r\n})\r\nexport class PaymentConfirmationPage implements OnInit{\r\n  isShowingLoader = false;\r\n  errorMsg: any;\r\n  paymentConfirmForm: FormGroup;\r\n  paymentUserData: any;\r\n  encryptedPolicyNo: any;\r\n  paymentSeqNo: any;\r\n  selectedPlanType: any;\r\n  policyNo: any;\r\n  polocyOwnerName: any;\r\n  phone: any;\r\n  planName: any;\r\n  premiumAmount: any;\r\n  isGetMerchantInfoServiceSuccess: boolean;\r\n  canTryAgain: boolean = false;\r\n  isSuccess: boolean = false;\r\n  email: any;\r\n  merchantURL: any;\r\n  merchantReturnURL: any;\r\n  id: any;\r\n  password: any;\r\n  merchantName: any;\r\n  paymentid: any;\r\n  userHasChanged:boolean=false;\r\n  paymentSuccessResp: any; //only for malaysian country\r\n  /**buttons to passs to alert popup when transaction failed */\r\n  alertButtons = [{\r\n    text: this.translate.instant('make_payment.okBtn'),\r\n    handler: () => {\r\n      // alert(\"48\");\r\n      this.router.navigate(['payment-acknowledgement'], { state: { successdata: this.paymentSuccessResp,policyNo:this.paymentData.policyNumber,animate: true, direction: 'forward'} });\r\n      //this.navCtrl.push(PaymentAcknowledgementPage, { \"successdata\": this.paymentSuccessResp, \"policyNo\": this.paymentData.policyNumber, animate: true, direction: 'forward' });\r\n    }\r\n  }];\r\n  paymentConfirmation: any;\r\n  isUATBuild: boolean = true;\r\n  PaymentConfirm_terms:boolean=false;\r\n  username:any;\r\n  paymentData = {\r\n    \"encryptedPlNo\": null,\r\n    \"planType\": null,\r\n    \"policyNumber\": null,\r\n    \"policyOwner\": null,\r\n    \"contactNumber\": null,\r\n    \"planName\": null,\r\n    \"email\": null,\r\n    \"premium\": null,\r\n    \"paysno\": null,\r\n    \"paymentid\": null\r\n\r\n  }\r\n  constructor(\r\n    public merchantInfoService: GetMerchantInfoService, public translate: TranslateService,\r\n    public logger: LoggerServiceProvider, public utils: UtilService,\r\n    public alertCtrl: AlertController,  private config: ConfigProvider,\r\n    public putPaymentResults: PaymentSuccessService,private router: Router\r\n  ) {\r\n\r\n    console.log('history.state',history.state)\r\n    this.config.currentPage.pageName = \"PaymentConfirmationPage\";\r\n    //this.paymentUserData = <FormGroup>history.state.data;\r\n    this.paymentData.encryptedPlNo = history.state.encryptedPlNo;\r\n    this.encryptedPolicyNo = history.state.encryptedPlNo;\r\n    this.paymentData.planType = history.state.planType;\r\n    this.paymentData.policyNumber = history.state.policyNumberd;\r\n    this.paymentData.policyOwner = history.state.policyOwnerd;\r\n    this.paymentData.contactNumber = history.state.contactNumberd;\r\n    this.paymentData.planName = history.state.planNamed;\r\n    this.paymentData.email = history.state.emaild;\r\n    this.premiumAmount = history.state.premiumd;\r\n    let amount = parseFloat(this.premiumAmount);\r\n    this.paymentData.premium = amount.toFixed(2);\r\n    this.paymentSeqNo = history.state.paysno;\r\n    this.paymentData.paymentid = this.paymentSeqNo;\r\n    this.username =this.utils.getName();\r\n    this.utils.analytics(\"paymentConfirmation\");\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.logger.trace('ionViewDidLoad PaymentConfirmationPage');\r\n\r\n  }\r\n  userChecked(){\r\n    this.userHasChanged=true;\r\n }\r\n checkboxChange(checked: any) {\r\n  // this.PaymentConfirm_terms = !this.PaymentConfirm_terms ;\r\n  if (checked.detail.checked) {\r\n    this.PaymentConfirm_terms = true;\r\n  } else {\r\n    this.PaymentConfirm_terms = false;\r\n  }\r\n}\r\n\r\n//This method is used to get Merchaninfo inroder pass the details to payment gateway\r\ngetMerchantInfo() {\r\n  if (this.paymentData) {\r\n    this.logger.trace(\"Get merchant infor --start\");\r\n    this.utils.showProgressLoader();\r\n    if (this.utils.isDeviceOnLine()) {\r\n      this.isShowingLoader = true;\r\n      this.merchantInfoService.getMerchantInfo(this.encryptedPolicyNo).then((res) => {\r\n        try {\r\n          this.utils.dissmisProgressLoader();\r\n          this.isShowingLoader = false;\r\n          if (res['responseJSON'] && res['responseJSON']['statusCode'] == HttpStatus.OK) {\r\n\r\n            this.isGetMerchantInfoServiceSuccess = true;\r\n            this.merchantURL = res['responseJSON']['merchantUrl'];\r\n            this.merchantReturnURL = res['responseJSON']['merchantReturnUrl'];\r\n            this.id = res['responseJSON']['id'];\r\n            this.password = res['responseJSON']['pwd'];\r\n            this.merchantName = res['responseJSON']['mercName'];\r\n            this.isSuccess = true;\r\n            this.sendMerchantInfo();\r\n\r\n          } else {\r\n            this.canTryAgain = true;\r\n            this.isGetMerchantInfoServiceSuccess = false;\r\n            this.logger.error(\"GET Merchant Info Service : \" + JSON.stringify(res));\r\n            this.errorMsg = this.translate.instant('generic_msgs.server_err');\r\n            this.isSuccess = false;\r\n\r\n\r\n          }\r\n        } catch (e) {\r\n          this.canTryAgain = true;\r\n          this.isGetMerchantInfoServiceSuccess = false;\r\n          this.utils.dissmisProgressLoader();\r\n          this.isShowingLoader = false;\r\n          this.isSuccess = false;\r\n          this.logger.error(\"GET Merchant Info Service : \" + JSON.stringify(e));\r\n          this.errorMsg = this.translate.instant('generic_msgs.server_err');\r\n\r\n          console.log(\"abhay\"+JSON.stringify(e));\r\n        }\r\n      }, (err) => {\r\n        this.utils.dissmisProgressLoader();\r\n        this.isShowingLoader = false;\r\n        this.canTryAgain = true;\r\n        this.isSuccess = false;\r\n        this.isGetMerchantInfoServiceSuccess = false;\r\n        this.logger.error(\"GET Merchant Info Services : \" + JSON.stringify(err));\r\n        this.errorMsg = this.utils.handleServiceException(err);\r\n\r\n      });\r\n    } else {\r\n      this.canTryAgain = true;\r\n      this.isShowingLoader = false;\r\n      this.isSuccess = false;\r\n\r\n      this.isGetMerchantInfoServiceSuccess = false;\r\n      this.errorMsg = this.translate.instant('generic_msgs.network_err');\r\n    }\r\n  } else {\r\n    this.isShowingLoader = false;\r\n    this.canTryAgain = false;\r\n\r\n  }\r\n}\r\n/** this method will send the Merchaninfo to submit detials to payment gateway\r\n   */\r\n\r\nsendMerchantInfo() {\r\n\r\n  if (this.isUATBuild) {\r\n// alert(\"disconnect VPN\")\r\n    this.makePay();   //For malaysian country - to check\r\n  }\r\n  else {\r\n\r\n    this.router.navigate(['make-payment'], { state: { paymentdata:this.paymentData,mURL:this.merchantURL,mreturnURL:this.merchantReturnURL,ID:this.id,passwd: this.password,mname: this.merchantName} });\r\n    //this.navCtrl.push(MakePaymentPage, { \"paymentdata\": this.paymentData, \"mURL\": this.merchantURL, \"mreturnURL\": this.merchantReturnURL, \"ID\": ID, \"passwd\": this.password, \"mname\": this.merchantName });\r\n    //for non-malaysian countries - to check\r\n  }\r\n}\r\ntryAgain() {\r\n  if (!this.isGetMerchantInfoServiceSuccess) {\r\n    this.getMerchantInfo();\r\n  }\r\n}\r\n//function to show pop up\r\nshowDialog(title: string, message: string) {\r\n  let buttons = [\r\n    {\r\n      text: \"Ok\",\r\n      cssClass:'alertbutton'\r\n\r\n      // handler: () => {\r\n      //    this.navCtrl.pop();\r\n      // }\r\n    },\r\n  ];\r\n\r\n  const alert: any = this.alertCtrl.create({\r\n    header: title,\r\n    message: message,\r\n    buttons: buttons\r\n}).then((alert) => alert.present());\r\n}\r\n\r\n//onlly for malayisannn users - UAT testing\r\nmakePay() {\r\n\r\n  var orderId = (window.crypto.getRandomValues(new Uint16Array(1)))[0] + 10000;\r\n  var orderId1 = orderId.toString();\r\n\r\n  // if (this.utils.getPlatform() == 'ios') {\r\n  //   this.paymentSeqNo = this.paymentData.paymentid.replace(\"MPAYIOS\", \"\");\r\n  // } else if (this.utils.getPlatform() == 'android') {\r\n  //   this.paymentSeqNo = this.paymentData.paymentid.replace(\"MPAYAOS\", \"\");\r\n  // }\r\n\r\n  const data = {\r\n\r\n    /*\r\n    * Mandatory payment parameters list:\r\n    * transactionType, paymentMethod, serviceId, paymentId, orderNumber, paymentDesc,\r\n    * merchantReturnUrl, amount, currencyCode, custIp, custName, custEmail, custPhone\r\n    * Check the eGHL documentation for parameter names.\r\n    * [All Field are defined as String], Except paymentTimeout and sdkTimeout.\r\n    * NOTE: Parameter names and spelling follow iOS, wherever the Android and iOS\r\n    * names differ!\r\n    */\r\n\r\n    // List of accepted params and some value detail (refer docs for more detail):\r\n    CurrencyCode: 'MYR',\r\n      PymtMethod: 'ANY',\r\n      TransactionType: 'SALE',\r\n      PaymentGateway: this.merchantURL, // Payment gateway URL given by eGHL\r\n      ServiceID: this.id,// 'SLM', //Merchant Code or Service ID given by eGHL\r\n      Password: this.password,//'slm12345', // Merchant password given by eGHL\r\n      PaymentID: this.paymentData.paymentid, //orderId, // Unique string for each payment\r\n      OrderNumber: orderId1, // Order number to refer current payment, can duplicate.\r\n      PaymentDesc: 'Premium payment',\r\n      MerchantReturnURL: this.merchantReturnURL,//  'http://bpp1.sunlifemalaysia.com/portal-ui/CUSTOMER/payment-transaction', // redirect when payment complete.//\r\n      Amount: this.paymentData.premium,//'08.00', // e.g. 1000.00 for IDR Invalid format: 1,000.00 or 1000\r\n      // Invalid format: 1,000.00 or 1000\r\n      CustIP: '172.17.68.38', // customer ip address captured by merchant\r\n      CustName: this.paymentData.policyOwner,//'Beta Tester',\r\n      CustEmail: this.paymentData.email,//'Tester@mail.com',\r\n      CustPhone: this.paymentData.contactNumber,//'60123456789',\r\n      MerchantName: this.merchantName,//'ABC Sdn Bhd',\r\n      LanguageCode: 'EN',\r\n      PageTimeout: '780', // timeout in seconds\r\n      PaymentTimeout: '-1',\r\n      sdkTimeout: '780', // seconds\r\n      _finaliseMessage: 'Optional message for Finalising Payment (iOS Only)',\r\n      _cancelMessage: 'Optional message for Cancelling Payment (iOS Only)',\r\n  };\r\n\r\n// const data ={\r\n//   Amount: \"11.00\",\r\n//   CurrencyCode: \"MYR\",\r\n//   CustEmail: \"a@gmail.com\",\r\n//   CustIP: \"172.17.68.38\",\r\n//   CustName: \"P RQMQSQMY A/L P PERUMAL\",\r\n//   CustPhone: \"60137556496\",\r\n//   LanguageCode: \"EN\",\r\n//   MerchantName: \"Sun Life Malaysia Assurance Berhad\",\r\n//   MerchantReturnURL: \"https://bpp1.sunlifemalaysia.com/portal-ui/CUSTOMER/payment-transaction\",\r\n//   OrderNumber: \"38495\",\r\n//   PageTimeout: \"780\",\r\n//   Password: \"slm12345\",\r\n//   PaymentDesc: \"Premium payment\",\r\n//   PaymentGateway: \"https://pay.e-ghl.com/IPGSG/Payment.aspx\",\r\n//   PaymentID: this.paymentData.paymentid,\r\n//   PaymentTimeout: \"-1\",\r\n//   PymtMethod: \"ANY\",\r\n//   ServiceID: \"SLM\",\r\n//   TransactionType: \"SALE\",\r\n//   sdkTimeout: \"780\",\r\n//   _finaliseMessage: 'Optional message for Finalising Payment (iOS Only)',\r\n//   _cancelMessage: 'Optional message for Cancelling Payment (iOS Only)',\r\n// };\r\n  /**this method is to call eGHL plugin with given payment data */\r\n  //this.utils.dissmisProgressLoader();\r\n\r\n  eGHL.makePayment(data,\r\n    (resp) => {\r\n\r\n// alert(\"connect VPN\");\r\n      // if (this.utils.getPlatform() == 'android') {\r\n      //   resp = JSON.parse(resp);\r\n      // }\r\n      /**When payment successs */\r\n      if (resp.TxnStatus == 0) {\r\n        let inputData = {\r\n          transactionType: resp.TransactionType || \"\",\r\n          pymtMethod: resp.PymtMethod || \"\",\r\n          serviceID: resp.ServiceID || \"\",\r\n          paymentID: resp.PaymentID || \"\",\r\n          currencyCode: resp.CurrencyCode || \"\",\r\n          txnID: resp.TxnID || \"\",\r\n          issuingBank: resp.IssuingBank || \"\",\r\n          txnStatus: resp.TxnStatus || \"\",\r\n          authCode: resp.AuthCode || \"\",\r\n          cardHolder: resp.CardHolder || \"\",\r\n          cardNoMask: resp.CardNoMask || \"\",\r\n          cardExp: resp.CardExp || \"\",\r\n          cardType: resp.CardType || \"\",\r\n          premiumAmount: resp.Amount || \"\",\r\n          txnMessage: resp.TxnMessage || \"\"\r\n        }\r\n\r\n        this.paymentSuccessResp = inputData;\r\n\r\n\r\n        //send data to sunaccess server\r\n        this.paymentSuccess();\r\n        /**When payment failed */\r\n      } else if (resp.TxnStatus == 1) {\r\n        // this.isPaymentSuccess = true;\r\n        let inputData = {\r\n          transactionType: resp.TransactionType || \"\",\r\n          pymtMethod: resp.PymtMethod || \"\",\r\n          serviceID: resp.ServiceID || \"\",\r\n          paymentID: resp.PaymentID || \"\",\r\n          currencyCode: resp.CurrencyCode || \"\",\r\n          txnID: resp.TxnID || \"\",\r\n          issuingBank: resp.IssuingBank || \"\",\r\n          txnStatus: resp.TxnStatus || \"\",\r\n          authCode: resp.AuthCode || \"\",\r\n          cardHolder: resp.CardHolder || \"\",\r\n          cardNoMask: resp.CardNoMask || \"\",\r\n          cardExp: resp.CardExp || \"\",\r\n          cardType: resp.CardType || \"\",\r\n          premiumAmount: resp.Amount || \"\",\r\n          txnMessage: resp.TxnMessage || \"\"\r\n        }\r\n\r\n        this.paymentSuccessResp = inputData;\r\n        this.paymentSuccess();\r\n        this.utils.showAlert(this.translate.instant('make_payment.paymentFailed'), this.translate.instant('make_payment.transactionFailed'), false, this.alertButtons);\r\n\r\n      } else {\r\n\r\n        this.utils.showAlert(this.translate.instant('make_payment.paymentFailed'), this.translate.instant('make_payment.transactionFailed'), false, this.alertButtons);\r\n      }\r\n\r\n    },\r\n    /**When payment failed */\r\n    (err) => {\r\n\r\n      this.utils.showAlert(this.translate.instant('make_payment.paymentFailed'), this.translate.instant('make_payment.transactionFailed'), false, this.alertButtons);\r\n    }\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n/**this sis tempraroy : to send payment successful daat to Sunaccess server*/\r\npaymentSuccess() {\r\n\r\n  if (this.utils.isDeviceOnLine()) {\r\n    this.utils.showProgressLoader();\r\n\r\n\r\n    this.putPaymentResults.putPaymentSuccessDetails(this.paymentSuccessResp, this.paymentSeqNo).then((res) => {\r\n      try {\r\n\r\n        this.utils.dissmisProgressLoader();\r\n        if (res['responseJSON']){\r\n          if(res['responseJSON']['statusCode'] == HttpStatus.ACCEPTED || res['responseJSON']['statusCode'] == HttpStatus.OK) {\r\n            let message = res['responseJSON']['userMessage'] || this.translate.instant('make_payment.paymentSuccessService');\r\n            this.utils.showAlert(\"\", message, false, this.alertButtons);\r\n          } else {\r\n            let message = res['responseJSON']['Message'] || this.translate.instant('make_payment.paymentSuccessService');\r\n            this.utils.showAlert(\"\", message, false, this.alertButtons);\r\n          }\r\n        }\r\n      } catch (e) {\r\n        this.utils.dissmisProgressLoader();\r\n\r\n        this.logger.error(\"loginSuccess catch eror : \" + JSON.stringify(e));\r\n        let errorMessage = this.translate.instant('make_payment.tryAgain');\r\n        this.utils.showAlert(\"\", errorMessage, false, this.alertButtons);\r\n\r\n      }\r\n    }, (err) => {\r\n\r\n\r\n      let errorMessage;\r\n      this.utils.dissmisProgressLoader();\r\n      errorMessage = this.utils.handleServiceException(err);\r\n      this.utils.showAlert(\"\", errorMessage, false, this.alertButtons);\r\n    });\r\n  } else {\r\n\r\n\r\n    this.utils.dissmisProgressLoader();\r\n    let errorMessage = this.translate.instant('generic_msgs.network_err');\r\n    this.utils.showAlert(\"\", errorMessage, false, this.alertButtons);\r\n  }\r\n}\r\n\r\n}\r\n","<ion-header mode=\"ios\" >\r\n  <ion-toolbar color=\"primary\" style=\"border-bottom:3px solid white;\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button style=\"padding-left:15px; font-size:0.7rem;\" text=\"\" icon=\"chevron-back-outline\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title class=\"bold-font\">{{\"payment.title\"|translate}}</ion-title>\r\n   </ion-toolbar >\r\n   <ion-toolbar color=\"primary\" class=\"tabs\">\r\n    <ion-row  [ngClass]=\"{'bg-conventional' : (selectedPlanType === 'Conventional'),'bg-takaful': (selectedPlanType !== 'Conventional')}\" style=\"background: #539542; margin-bottom: 5px;\">\r\n        <ion-label class=\"sub-header\">{{\"payment.payment_confirmation\"|translate}}</ion-label>\r\n    </ion-row>\r\n  </ion-toolbar>\r\n  </ion-header>\r\n\r\n<ion-content class=\"app_bg1 text_color_base ion-padding\" >\r\n  <section  *ngIf=\"errorMsg && !canTryAgain && !isShowingLoader\" [ngClass]=\"{'sucess': isSuccess, 'fail': !isSuccess}\">\r\n    <span>{{errorMsg}}</span>\r\n  </section>\r\n  <section class=\"errorMsgSection\"  *ngIf=\"canTryAgain && !isShowingLoader\">\r\n    <span>{{errorMsg}}</span>\r\n      <ion-button *ngIf=\"canTryAgain\" (click)=\"tryAgain()\">{{\"generic_msgs.try_again\" | translate }}</ion-button>\r\n  </section>\r\n  <div class=\"white_container_border_radius\"  *ngIf=\"!canTryAgain && !isShowingLoader\">\r\n\r\n    <form >\r\n      <ion-item  lines=\"none\" lines=\"none\">\r\n            <ion-label position=\"stacked\" class=\"heading\">{{\"payment.payment_id\"|translate}}</ion-label>\r\n            <ion-label  *ngIf=\"paymentData.paymentid\" position=\"stacked\" class=\"content font_size_17\">{{paymentData.paymentid}}  </ion-label>\r\n            <ion-label  *ngIf=\"!paymentData.paymentid\" position=\"stacked\" class=\"content font_size_17\"> - </ion-label>\r\n      </ion-item>\r\n      <ion-item  lines=\"none\" lines=\"none\">\r\n            <ion-label position=\"stacked\" class=\"heading\">{{\"payment.plan_name\"|translate}}</ion-label>\r\n            <ion-label  *ngIf=\"paymentData.planName\" position=\"stacked\" class=\"content font_size_17\">{{paymentData.planName}}  </ion-label>\r\n            <ion-label  *ngIf=\"!paymentData.planName\" position=\"stacked\" class=\"content font_size_17\">  - </ion-label>\r\n      </ion-item>\r\n      <ion-item  lines=\"none\" lines=\"none\">\r\n              <ion-label position=\"stacked\" class=\"heading\">{{\"payment.policy_number\"|translate}} </ion-label>\r\n              <ion-label  *ngIf=\"paymentData.policyNumber\" position=\"stacked\" class=\"content font_size_17\">{{paymentData.policyNumber}}  </ion-label>\r\n              <ion-label  *ngIf=\"!paymentData.policyNumber\" position=\"stacked\" class=\"content font_size_17\">  - </ion-label>\r\n      </ion-item>\r\n      <ion-item  lines=\"none\" lines=\"none\">\r\n            <ion-label position=\"stacked\" class=\"heading\">{{\"payment.policy_holder\"|translate}}</ion-label>\r\n            <ion-label *ngIf=\"paymentData.policyOwner\" position=\"stacked\" class=\"content font_size_17\">{{paymentData.policyOwner}}  </ion-label>\r\n            <ion-label *ngIf=\"!paymentData.policyOwner\" position=\"stacked\" class=\"content font_size_17\"> -  </ion-label>\r\n      </ion-item>\r\n\r\n         <ion-item  lines=\"none\" lines=\"none\">\r\n            <ion-label position=\"stacked\" class=\"heading\">{{\"payment.email\"|translate}}</ion-label>\r\n            <ion-label  *ngIf=\"paymentData.email\" position=\"stacked\"  class=\"content font_size_17\">{{paymentData.email}}  </ion-label>\r\n            <ion-label  *ngIf=\"!paymentData.email\" position=\"stacked\" class=\"content font_size_17\"> -  </ion-label>\r\n      </ion-item>\r\n       <ion-item  lines=\"none\" lines=\"none\">\r\n            <ion-label position=\"stacked\" class=\"heading\">{{\"payment.contact_number\"|translate}}</ion-label>\r\n            <ion-label  *ngIf=\"paymentData.contactNumber\" position=\"stacked\" class=\"content font_size_17\">{{paymentData.contactNumber}}  </ion-label>\r\n            <ion-label  *ngIf=\"!paymentData.contactNumber\" position=\"stacked\" class=\"content font_size_17\"> -  </ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item  lines=\"none\" lines=\"none\">\r\n        <ion-label position=\"stacked\" class=\"heading\">{{\"payment.premium_amt\"|translate}} </ion-label>\r\n        <ion-label  *ngIf=\"paymentData.premium\" position=\"stacked\" class=\"content font_size_17\">{{paymentData.premium}}  </ion-label>\r\n        <ion-label  *ngIf=\"!paymentData.premium\" position=\"stacked\" class=\"content font_size_17\"> -  </ion-label>\r\n      </ion-item>\r\n      <ion-row style=\"padding:15px;\" class=\"terms_conditions\" >\r\n        <ion-checkbox  mode=\"md\" size=\"1\" class=\"margin_top_bottom_auto\"  [checked]=\"PaymentConfirm_terms\"  (ionChange)=\"checkboxChange($event)\" (ionChange)=\"userChecked()\"></ion-checkbox>\r\n        <span size=\"11\">{{\"payment.Confirm_terms_accept1\" | translate }}{{username}}{{\"payment.Confirm_terms_accept2\" | translate }}</span>\r\n\r\n      </ion-row>\r\n        <div  *ngIf=\"!PaymentConfirm_terms && userHasChanged\">\r\n         <span class=\"fail padding_015\">{{\"payment.Confirm_terms_accept_req\" | translate}}</span>\r\n      </div>\r\n      <ion-row  class=\"ion-text-center\" align-items-center>\r\n        <ion-col >\r\n            <ion-button ion-button class=\"btn_center\" (click)=\"getMerchantInfo()\" [disabled]=\"!PaymentConfirm_terms\">{{\"payment.submit\"|translate}}</ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </form>\r\n  </div>\r\n</ion-content>\r\n"],"names":["RouterModule","PaymentConfirmationPage","routes","path","component","PaymentConfirmationPageRoutingModule","forChild","imports","exports","TranslateModule","CommonModule","FormsModule","ReactiveFormsModule","IonicModule","PaymentConfirmationPageModule","declarations","HttpStatus","i0","constructor","merchantInfoService","translate","logger","utils","alertCtrl","config","putPaymentResults","router","text","instant","handler","navigate","state","successdata","paymentSuccessResp","policyNo","paymentData","policyNumber","animate","direction","console","log","history","currentPage","pageName","encryptedPlNo","encryptedPolicyNo","planType","policyNumberd","policyOwner","policyOwnerd","contactNumber","contactNumberd","planName","planNamed","email","emaild","premiumAmount","premiumd","amount","parseFloat","premium","toFixed","paymentSeqNo","paysno","paymentid","username","getName","analytics","ngOnInit","trace","userChecked","userHasChanged","checkboxChange","checked","detail","PaymentConfirm_terms","getMerchantInfo","showProgressLoader","isDeviceOnLine","isShowingLoader","then","res","dissmisProgressLoader","OK","isGetMerchantInfoServiceSuccess","merchantURL","merchantReturnURL","id","password","merchantName","isSuccess","sendMerchantInfo","canTryAgain","error","JSON","stringify","errorMsg","e","err","handleServiceException","isUATBuild","makePay","paymentdata","mURL","mreturnURL","ID","passwd","mname","tryAgain","showDialog","title","message","buttons","cssClass","alert","create","header","present","orderId","window","crypto","getRandomValues","Uint16Array","orderId1","toString","data","CurrencyCode","PymtMethod","TransactionType","PaymentGateway","ServiceID","Password","PaymentID","OrderNumber","PaymentDesc","MerchantReturnURL","Amount","CustIP","CustName","CustEmail","CustPhone","MerchantName","LanguageCode","PageTimeout","PaymentTimeout","sdkTimeout","_finaliseMessage","_cancelMessage","eGHL","makePayment","resp","TxnStatus","inputData","transactionType","pymtMethod","serviceID","paymentID","currencyCode","txnID","TxnID","issuingBank","IssuingBank","txnStatus","authCode","AuthCode","cardHolder","CardHolder","cardNoMask","CardNoMask","cardExp","CardExp","cardType","CardType","txnMessage","TxnMessage","paymentSuccess","showAlert","alertButtons","putPaymentSuccessDetails","ACCEPTED","errorMessage","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}