{"version":3,"file":"src_app_pages_annual-statements_annual-statements_module_ts.js","mappings":"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","sources":["./src/app/pages/annual-statements/annual-statements-routing.module.ts","./src/app/pages/annual-statements/annual-statements.module.ts","./src/app/pages/annual-statements/annual-statements.page.ts","./src/app/pages/annual-statements/annual-statements.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AnnualStatementsPage } from './annual-statements.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AnnualStatementsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AnnualStatementsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AnnualStatementsPageRoutingModule } from './annual-statements-routing.module';\n\nimport { AnnualStatementsPage } from './annual-statements.page';\nimport {  TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AnnualStatementsPageRoutingModule,\n    TranslateModule\n  ],\n  declarations: [AnnualStatementsPage]\n})\nexport class AnnualStatementsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MenuOptions } from 'src/app/app.component';\nimport { GetAnnualStatementsService } from './annualStatementsService';\nimport { DownloadPdfProvider } from 'src/providers/download-pdf/download-pdf';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LoggerServiceProvider } from 'src/providers/logger-service/logger-service';\nimport { UtilService } from 'src/providers/utils/utils.service';\nimport { ConfigProvider } from 'src/providers/utils/config';\n\n\n@Component({\n  selector: 'app-annual-statements',\n  templateUrl: './annual-statements.page.html',\n  styleUrls: ['./annual-statements.page.scss'],\n})\nexport class AnnualStatementsPage implements OnInit {\n\n  PassedValue='hello you have used input decorator!!!';\n  canTryAgain :boolean = false;\n  errorMsg:any= \"\";\n  isAccordian ={\n    PremiumStatements:false,\n    UnitStatements : false,\n    PaStatements : false,\n    UaStatements : false,\n    AppfStatements : false,\n    UniversalStatements : false,\n    BonusStatements : false,\n    MAFStatements : false,\n    EduStatements : false\n  }\n  premiumStatementsList : any=[];\n  unitStatementsList :any =[];\n  paStatementsList:any =[];\n  uaStatementsList : any=[];\n  appfStatementsList : any=[]; \n   universalStatementsList : any=[];\n   bonusStatementsList : any=[];\n   MAFStatementsList : any=[];\n  EducationBoosterFundStatementsList : any=[];\n\n  constructor( public utilServices:UtilService,\n    public getStatementsService:GetAnnualStatementsService,public downloadFile : DownloadPdfProvider,\n    public translate:TranslateService,public logger:LoggerServiceProvider,private config: ConfigProvider) {\n      this.utilServices.analytics(\"annualStatements\")\n      this.config.currentPage.pageName = \"AnnualStatementsPage\";\n  }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.utilServices.component.emit(MenuOptions.ANNUAL_STATEMENTS);\n  }\n\n  downloadAndOpenPdf(statement){\n    console.log('statement',statement)\n    this.downloadFile.downloadStatementFile(statement.link, statement.policyNumber);      \n}\n  /**\n   * This method is used to PremiumStatements Page\n   */\n  navToPremiumStmts(){\n    if(!(this.premiumStatementsList.length >0) && !this.isAccordian['PremiumStatements'])\n      this.getPremiumStatments();\n    this.toggleSection('PremiumStatements');\n  }\n\n   /**\n   * This method is used to UnitStatements Page\n   */\n  navToUnitStmts(){\n    if(!(this.unitStatementsList.length >0) && !this.isAccordian['UnitStatements'])\n      this.getUnitStatmentsList();\n    this.toggleSection('UnitStatements');\n  }\n\n   /**\n   * This method is used to PA Statements Page\n   */\n  navToPAStmts(){\n    if(!(this.paStatementsList.length >0) && !this.isAccordian['PaStatements'])\n      this.getPAStatments();\n    this.toggleSection('PaStatements');\n  }\n\n  /**\n   * This method is used to UA Statements Page.\n   */\n  navToUAStmts(){\n    if(!(this.uaStatementsList.length >0) && !this.isAccordian['UaStatements'])\n      this.getUAStatments();\n    this.toggleSection('UaStatements');\n  }\n\n\n  /**\n   * This method is used to Appf Statements Page.\n   */\n  navToAppfStmts(){\n    if(!(this.appfStatementsList.length >0) && !this.isAccordian['AppfStatements'])\n      this.GetAppfStatements();\n    this.toggleSection('AppfStatements');\n  }\n\n  /**\n   * This method is used to Universal Statements Page.\n   */\n  navToUniversalStmts(){\n    if(!(this.universalStatementsList.length >0) && !this.isAccordian['UniversalStatements'])\n      this.GetUniversalLifeStatement();\n    this.toggleSection('UniversalStatements');\n  }\n\n    /**\n   * This method is used to Bonus Statements Page.\n   */\n  navToBonusStmts(){\n    if(!(this.bonusStatementsList.length >0) && !this.isAccordian['BonusStatements'])\n      this.GetBonusStatements();\n    this.toggleSection('BonusStatements');\n  }\n\n    /**\n   * This method is used to MAF Statements Page.\n   */\n  navToMAFStmts(){\n    if(!(this.MAFStatementsList.length >0) && !this.isAccordian['MAFStatements'])\n      this.GetMAFStatement();\n    this.toggleSection('MAFStatements');\n  }\n\n    /**\n   * This method is used to Education Statements Page.\n   */\n  navToEducationStmts(){\n    if(!(this.EducationBoosterFundStatementsList.length >0) && !this.isAccordian['EduStatements'])\n      this.GetEducationBoosterFundStatement();\n    this.toggleSection('EduStatements');\n  }\n\n  /**\n   * This method is used to get list of Premium statements\n   */\n  getPremiumStatments(){\n    if(this.utilServices.isDeviceOnLine()){\n      this.canTryAgain = false;\n      this.utilServices.showProgressLoader();\n      this.errorMsg= \"\";\n      this.logger.trace(\"get UA Statements--start\");\n       this.getStatementsService.getPremiumStatements().then(\n         (result) => {\n           try{\n            this.utilServices.dissmisProgressLoader();\n            console.log(result)\n            this.premiumStatementsList = result['responseJSON']['array'];\n            console.log('premiumStatementsList',this.premiumStatementsList)\n            if(!(this.premiumStatementsList.length >0)){\n              this.canTryAgain = false;\n              this.errorMsg = this.translate.instant('generic_msgs.no_data'); \n            }\n           }catch(e){\n            this.canTryAgain = true;\n            var msg = this.translate.instant('generic_msgs.server_err');\n            this.errorMsg = msg;\n           }\n         \n        }, (err) => {\n          this.canTryAgain = true;\n          this.showError(err);\n        });\n     }else{\n      this.canTryAgain = true;\n      var msg = this.translate.instant('generic_msgs.network_err');\n      this.errorMsg = msg;\n     }\n    }\n\n  /**\n * This method is used to get list of unit Statements\n */\n  getUnitStatmentsList () {\n    if(this.utilServices.isDeviceOnLine()){\n      this.canTryAgain = false;\n      this.utilServices.showProgressLoader();\n      this.errorMsg= \"\";\n      this.logger.trace(\"get Unit Statements--start\");\n       this.getStatementsService.getUnitStatements().then(\n         (result) => {\n          this.utilServices.dissmisProgressLoader();\n            this.unitStatementsList = result['responseJSON']['array'];\n            console.log('unitStatementsList',this.unitStatementsList);\n            if(!(this.unitStatementsList.length >0)){\n              this.canTryAgain = false;\n              this.errorMsg = this.translate.instant('generic_msgs.no_data');\n            }\n\n        }, (err) => {\n          this.canTryAgain = true;\n          this.showError(err);\n        });\n     }else{\n      this.canTryAgain = true;\n      this.errorMsg = this.translate.instant('generic_msgs.network_err');\n    }\n  }\n\n  /**\n   * This is method is used to get list of PA Statements\n   */\n  getPAStatments  () {\n    if(this.utilServices.isDeviceOnLine()){\n      this.canTryAgain = false;\n      this.utilServices.showProgressLoader();\n      this.errorMsg= \"\";\n      this.logger.trace(\"get PA Statements--start\");\n       this.getStatementsService.getPAStatements().then(\n         (result) => {\n          this.utilServices.dissmisProgressLoader();\n            this.paStatementsList = result['responseJSON']['array'];\n            console.log('this.paStatementsList',this.paStatementsList);\n            if(!(this.paStatementsList.length >0)){\n              this.canTryAgain = false;\n              this.errorMsg = this.translate.instant('generic_msgs.no_data');  \n            }\n\n        }, (err) => {\n          this.canTryAgain = true;\n          this.showError(err);\n        });\n     }else{\n      this.canTryAgain = true;\n      this.errorMsg = this.translate.instant('generic_msgs.network_err');\n     } \n    }\n\n\n    /**\n   * This method is used to get list of UA Statements\n   */\n  getUAStatments  () {\n    if(this.utilServices.isDeviceOnLine()){\n      this.canTryAgain = false;\n      this.utilServices.showProgressLoader();\n      this.errorMsg= \"\";\n      this.logger.trace(\"get UA Statements--start\");\n       this.getStatementsService.getUAStatements().then(\n         (result) => {\n          this.utilServices.dissmisProgressLoader();\n            this.uaStatementsList = result['responseJSON']['array'];\n            console.log('this.uaStatementsList',this.uaStatementsList);\n            if(!(this.uaStatementsList.length >0)){\n              this.canTryAgain = false;\n              this.errorMsg = this.translate.instant('generic_msgs.no_data');\n            }\n\n        }, (err) => {\n          this.canTryAgain = true;\n          this.showError(err);\n        });\n     }else{\n      this.canTryAgain = true;\n      this.errorMsg = this.translate.instant('generic_msgs.network_err');\n     }\n    \n  }\n\n   /**\n   * This method is used to get list of Appf Statements\n   */\n  GetAppfStatements  () {\n    if(this.utilServices.isDeviceOnLine()){\n      this.canTryAgain = false;\n      this.utilServices.showProgressLoader();\n      this.errorMsg= \"\";\n      this.logger.trace(\"get Appf Statements--start\");\n       this.getStatementsService.getAppfStatements().then(\n         (result) => {\n          this.utilServices.dissmisProgressLoader();\n            this.appfStatementsList = result['responseJSON']['array'];\n            console.log('this.appfStatementsList',this.appfStatementsList);\n            if(!(this.appfStatementsList.length >0)){\n              this.canTryAgain = false;\n              this.errorMsg = this.translate.instant('generic_msgs.no_data');\n            }\n\n        }, (err) => {\n          this.canTryAgain = true;\n          this.showError(err);\n        });\n     }else{\n      this.canTryAgain = true;\n      this.errorMsg = this.translate.instant('generic_msgs.network_err');\n     }\n    \n  }  \n\n  /**\n   * This method is used to get list of Appf Statements\n   */\n  GetUniversalLifeStatement  () {\n    if(this.utilServices.isDeviceOnLine()){\n      this.canTryAgain = false;\n      this.utilServices.showProgressLoader();\n      this.errorMsg= \"\";\n      this.logger.trace(\"get Appf Statements--start\");\n       this.getStatementsService.getUniversalLifeStatement().then(\n         (result) => {\n          this.utilServices.dissmisProgressLoader();\n            this.universalStatementsList = result['responseJSON']['array'];\n            console.log('this.universalStatementsList',this.universalStatementsList);\n            if(!(this.universalStatementsList.length >0)){\n              this.canTryAgain = false;\n              this.errorMsg = this.translate.instant('generic_msgs.no_data');\n            }\n\n        }, (err) => {\n          this.canTryAgain = true;\n          this.showError(err);\n        });\n     }else{\n      this.canTryAgain = true;\n      this.errorMsg = this.translate.instant('generic_msgs.network_err');\n     }\n    \n  }  \n\n /**\n   * This method is used to get list of Bonus Statements\n   */\n  GetBonusStatements  () {\n    if(this.utilServices.isDeviceOnLine()){\n      this.canTryAgain = false;\n      this.utilServices.showProgressLoader();\n      this.errorMsg= \"\";\n      this.logger.trace(\"get Appf Statements--start\");\n       this.getStatementsService.getBonusStatements().then(\n         (result) => {\n          this.utilServices.dissmisProgressLoader();\n            this.bonusStatementsList = result['responseJSON']['array'];\n            console.log('this.bonusStatementsList',this.bonusStatementsList);\n            if(!(this.bonusStatementsList.length >0)){\n              this.canTryAgain = false;\n              this.errorMsg = this.translate.instant('generic_msgs.no_data');\n            }\n\n        }, (err) => {\n          this.canTryAgain = true;\n          this.showError(err);\n        });\n     }else{\n      this.canTryAgain = true;\n      this.errorMsg = this.translate.instant('generic_msgs.network_err');\n     }\n    \n  }\n\n\n   /**\n   * This method is used to get list of MAF Statements\n   */\n  GetMAFStatement  () {\n    if(this.utilServices.isDeviceOnLine()){\n      this.canTryAgain = false;\n      this.utilServices.showProgressLoader();\n      this.errorMsg= \"\";\n      this.logger.trace(\"get MAF Statements--start\");\n       this.getStatementsService.getMAFStatement().then(\n         (result) => {\n          this.utilServices.dissmisProgressLoader();\n            this.MAFStatementsList = result['responseJSON']['array'];\n            console.log('this.MAFStatementsList',this.MAFStatementsList);\n            if(!(this.MAFStatementsList.length >0)){\n              this.canTryAgain = false;\n              this.errorMsg = this.translate.instant('generic_msgs.no_data');\n            }\n\n        }, (err) => {\n          this.canTryAgain = true;\n          this.showError(err);\n        });\n     }else{\n      this.canTryAgain = true;\n      this.errorMsg = this.translate.instant('generic_msgs.network_err');\n     }\n    \n  }\n\n\n   /**\n   * This method is used to get list of Education Booster Statements\n   */\n  GetEducationBoosterFundStatement () {\n    if(this.utilServices.isDeviceOnLine()){\n      this.canTryAgain = false;\n      this.utilServices.showProgressLoader();\n      this.errorMsg= \"\";\n      this.logger.trace(\"get Appf Statements--start\");\n       this.getStatementsService.getEducationBoosterFundStatement().then(\n         (result) => {\n          this.utilServices.dissmisProgressLoader();\n            this.EducationBoosterFundStatementsList = result['responseJSON']['array'];\n            console.log('this.EducationBoosterFundStatementsList',this.EducationBoosterFundStatementsList);\n            if(!(this.EducationBoosterFundStatementsList.length >0)){\n              this.canTryAgain = false;\n              this.errorMsg = this.translate.instant('generic_msgs.no_data');\n            }\n        }, (err) => {\n          this.canTryAgain = true;\n          this.showError(err);\n        });\n     }else{\n      this.canTryAgain = true;\n      this.errorMsg = this.translate.instant('generic_msgs.network_err');\n     }\n    \n  }\n\n  showError(err){\n    this.utilServices.dissmisProgressLoader();\n    this.errorMsg = this.utilServices.handleServiceException(err);\n  }\n\n\n    /**toggle */\n    toggleSection(toggleOption) {\n      for (var key in this.isAccordian) {\n        if (key == toggleOption) {\n          this.isAccordian[key] = !this.isAccordian[key];\n        }else{\n          this.isAccordian[key] = false;\n        }\n      }\n    }\n}\n","\n<ion-header mode=\"ios\" >\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button style=\"padding-left:15px; font-size:0.7rem;\" text=\"\" icon=\"chevron-back-outline\"></ion-back-button>\n    </ion-buttons>\n    <ion-title class=\"bold-font\">{{\"downloads.download\" | translate }}</ion-title>\n   </ion-toolbar >\n  <ion-toolbar class=\"sub_title ion-no-padding\">\n    <ion-row class=\"subheader_bg\">\n        <ion-label class=\"sub-header\">{{\"annual_stmts.title\" | translate }}</ion-label>\n    </ion-row>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content padding class=\"app_bg2 text_color_base padding_015\" no-bounce>\n  <div class=\"white_container_border_radius text_color_base padding_15\"  >\n      <div class=\"listrow\">\n              <ion-row (click)=\"navToPremiumStmts()\">\n                      <ion-col size=\"10\" class=\"margin_top_bottom_auto\">\n                          <ion-label class=\"listLabel\">{{\"annual_stmts.premium_stmts\" | translate }}</ion-label>\n                      </ion-col>\n                      <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"!isAccordian.PremiumStatements\">\n                          <i class=\"fas fa-angle-right font_size_20\" ></i>\n                      </ion-col>\n                      <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"isAccordian.PremiumStatements\">\n                            <i class=\"fas fa-angle-down font_size_20\" ></i>\n                      </ion-col>\n                    </ion-row>\n                   \n              <div  *ngIf=\"isAccordian.PremiumStatements\" [ngClass]=\"{'statementsContent':premiumStatementsList.length>3}\">\n                      <section class=\"errorMsgSection\"  *ngIf=\"!this.premiumStatementsList.length>0\">\n                              <span>{{errorMsg}}</span>\n                              <button *ngIf=\"canTryAgain\" (click)=\"getPremiumStatments()\">{{\"generic_msgs.try_again\" | translate }}</button>\n                      </section>\n                      <section *ngIf=\"premiumStatementsList.length>0\">\n                          <!-- <app-statements [statementsData]=\"premiumStatementsList\"></app-statements>       -->\n                          <div>\n                            <ion-row class=\"heading contentMargin\">\n                                <ion-col class=\"ion-text-center\">\n                                 <strong> {{\"premium_stmts.policy_no\" | translate }}</strong>\n                                </ion-col>\n                                <ion-col class=\"ion-text-center\">\n                                    <strong>   {{\"premium_stmts.stmt_year\" | translate }}</strong>\n                                </ion-col>\n                            </ion-row>\n                            <ion-row  *ngFor=\"let statement of premiumStatementsList \">\n                                    <ion-col class=\"polNo\" class=\"ion-text-center\" >\n                                        {{statement.policyNumber}}\n                                    </ion-col>\n                                    <ion-col  class=\"ion-text-center year\" (click)=\"downloadAndOpenPdf(statement)\">\n                                        {{statement.statementYear}}\n                                    </ion-col>\n                            </ion-row>\n                          </div> \n\n                      </section>                     \n              </div>\n          </div>\n      <div class=\"listrow\">\n      <ion-row (click)=\"navToUnitStmts()\">\n        <ion-col size=\"10\" class=\"margin_top_bottom_auto\">\n            <ion-label class=\"listLabel\">{{\"annual_stmts.unit_stmts\" | translate }}</ion-label>\n        </ion-col>\n        <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"!isAccordian.UnitStatements\">\n              <i class=\"fas fa-angle-right font_size_20\" ></i>\n          </ion-col>\n          <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"isAccordian.UnitStatements\">\n                <i class=\"fas fa-angle-down font_size_20\" ></i>\n          </ion-col>\n      </ion-row>\n      <div *ngIf=\"isAccordian.UnitStatements\" [ngClass]=\"{'statementsContent':unitStatementsList.length>3}\">\n              <section class=\"errorMsgSection\"  *ngIf=\"!this.unitStatementsList.length>0\">\n                      <span>{{errorMsg}}</span>\n                      <button *ngIf=\"canTryAgain\" (click)=\"getUnitStatmentsList()\">{{\"generic_msgs.try_again\" | translate }}</button>\n              </section>\n              \n              <section *ngIf=\"unitStatementsList.length>0\">\n                      <!-- <page-statements [statementsData]=\"unitStatementsList\"></page-statements> -->\n                      <div>\n                        <ion-row class=\"heading contentMargin\">\n                            <ion-col class=\"ion-text-center\">\n                             <strong> {{\"premium_stmts.policy_no\" | translate }}</strong>\n                            </ion-col>\n                            <ion-col class=\"ion-text-center\">\n                                <strong>   {{\"premium_stmts.stmt_year\" | translate }}</strong>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row  *ngFor=\"let statement of unitStatementsList \">\n                                <ion-col class=\"polNo\" class=\"ion-text-center\" >\n                                    {{statement.policyNumber}}\n                                </ion-col>\n                                <ion-col  class=\"ion-text-center year\" (click)=\"downloadAndOpenPdf(statement)\">\n                                    {{statement.statementYear}}\n                                </ion-col>\n                        </ion-row>\n                      </div>\n              </section>\n      </div>\n  </div>\n  <div class=\"listrow\">\n      <ion-row (click)=\"navToPAStmts()\">\n        <ion-col size=\"10\" class=\"margin_top_bottom_auto\">\n            <ion-label class=\"listLabel\">{{\"annual_stmts.pa_stmts\" | translate }}</ion-label>\n        </ion-col>\n        <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"!isAccordian.PaStatements\">\n              <i class=\"fas fa-angle-right font_size_20\" ></i>\n          </ion-col>\n          <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"isAccordian.PaStatements\">\n                <i class=\"fas fa-angle-down font_size_20\" ></i>\n          </ion-col>\n      </ion-row>\n      <div *ngIf=\"isAccordian.PaStatements\" [ngClass]=\"{'statementsContent':paStatementsList.length>3}\">\n              <section class=\"errorMsgSection\"  *ngIf=\"!this.paStatementsList.length>0\">\n                      <span>{{errorMsg}}</span>\n                      <button *ngIf=\"canTryAgain\" (click)=\"getPAStatments()\">{{\"generic_msgs.try_again\" | translate }}</button>\n              </section>\n              \n              <section *ngIf=\"paStatementsList.length>0\">\n                      <!-- <page-statements [statementsData]=\"paStatementsList\"></page-statements> -->\n                      <div>\n                        <ion-row class=\"heading contentMargin\">\n                            <ion-col class=\"ion-text-center\">\n                             <strong> {{\"premium_stmts.policy_no\" | translate }}</strong>\n                            </ion-col>\n                            <ion-col class=\"ion-text-center\">\n                                <strong>   {{\"premium_stmts.stmt_year\" | translate }}</strong>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row  *ngFor=\"let statement of paStatementsList \">\n                                <ion-col class=\"polNo\" class=\"ion-text-center\" >\n                                    {{statement.policyNumber}}\n                                </ion-col>\n                                <ion-col  class=\"ion-text-center year\" (click)=\"downloadAndOpenPdf(statement)\">\n                                    {{statement.statementYear}}\n                                </ion-col>\n                        </ion-row>\n                      </div>\n              </section>\n      </div>\n  </div>\n  <div class=\"listrow\">\n      <ion-row (click)=\"navToUAStmts()\">\n          <ion-col size=\"10\" class=\"margin_top_bottom_auto\">\n              <ion-label class=\"listLabel\">{{\"annual_stmts.ua_stmts\" | translate }}</ion-label>\n          </ion-col>\n          <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"!isAccordian.UaStatements\">\n              <i class=\"fas fa-angle-right font_size_20\" ></i>\n          </ion-col>\n          <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"isAccordian.UaStatements\">\n              <i class=\"fas fa-angle-down font_size_20\" ></i>\n          </ion-col>\n        </ion-row>\n        <div *ngIf=\"isAccordian.UaStatements\" [ngClass]=\"{'statementsContent':uaStatementsList.length>3}\">\n              <section class=\"errorMsgSection\"  *ngIf=\"!this.uaStatementsList.length>0\">\n                      <span>{{errorMsg}}</span>\n                      <button *ngIf=\"canTryAgain\" (click)=\"getUAStatments()\">{{\"generic_msgs.try_again\" | translate }}</button>\n              </section>\n              \n              <section *ngIf=\"uaStatementsList.length>0\">\n                      <!-- <page-statements [statementsData]=\"uaStatementsList\"></page-statements> -->\n                      <div>\n                        <ion-row class=\"heading contentMargin\">\n                            <ion-col class=\"ion-text-center\">\n                             <strong> {{\"premium_stmts.policy_no\" | translate }}</strong>\n                            </ion-col>\n                            <ion-col class=\"ion-text-center\">\n                                <strong>   {{\"premium_stmts.stmt_year\" | translate }}</strong>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row  *ngFor=\"let statement of uaStatementsList \">\n                                <ion-col class=\"polNo\" class=\"ion-text-center\" >\n                                    {{statement.policyNumber}}\n                                </ion-col>\n                                <ion-col  class=\"ion-text-center year\" (click)=\"downloadAndOpenPdf(statement)\">\n                                    {{statement.statementYear}}\n                                </ion-col>\n                        </ion-row>\n                      </div>\n              </section>\n      </div>\n  </div>\n\n<!--New statements addedd in phase2-->\n      <div class=\"listrow\">\n      <ion-row (click)=\"navToAppfStmts()\">\n          <ion-col size=\"10\" class=\"margin_top_bottom_auto\">\n              <ion-label class=\"listLabel\">{{\"annual_stmts.appf_stmts\" | translate }}</ion-label>\n          </ion-col>\n          <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"!isAccordian.AppfStatements\">\n              <i class=\"fas fa-angle-right font_size_20\" ></i>\n          </ion-col>\n          <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"isAccordian.AppfStatements\">\n              <i class=\"fas fa-angle-down font_size_20\" ></i>\n          </ion-col>\n        </ion-row>\n        <div *ngIf=\"isAccordian.AppfStatements\" [ngClass]=\"{'statementsContent':appfStatementsList.length>3}\">\n              <section class=\"errorMsgSection\"  *ngIf=\"!this.appfStatementsList.length>0\">\n                      <span>{{errorMsg}}</span>\n                      <button *ngIf=\"canTryAgain\" (click)=\"GetAppfStatements()\">{{\"generic_msgs.try_again\" | translate }}</button>\n              </section>\n              \n              <section *ngIf=\"appfStatementsList.length>0\">\n                      <!-- <page-statements [statementsData]=\"appfStatementsList\"></page-statements> -->\n                      <div>\n                        <ion-row class=\"heading contentMargin\">\n                            <ion-col class=\"ion-text-center\">\n                             <strong> {{\"premium_stmts.policy_no\" | translate }}</strong>\n                            </ion-col>\n                            <ion-col class=\"ion-text-center\">\n                                <strong>   {{\"premium_stmts.stmt_year\" | translate }}</strong>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row  *ngFor=\"let statement of appfStatementsList \">\n                                <ion-col class=\"polNo\" class=\"ion-text-center\" >\n                                    {{statement.policyNumber}}\n                                </ion-col>\n                                <ion-col  class=\"ion-text-center year\" (click)=\"downloadAndOpenPdf(statement)\">\n                                    {{statement.statementYear}}\n                                </ion-col>\n                        </ion-row>\n                      </div>\n              </section>\n      </div>\n  </div>\n\n      <div class=\"listrow\">\n      <ion-row (click)=\"navToUniversalStmts()\">\n          <ion-col size=\"10\" class=\"margin_top_bottom_auto\">\n              <ion-label class=\"listLabel\">{{\"annual_stmts.universal_stmts\" | translate }}</ion-label>\n          </ion-col>\n          <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"!isAccordian.UniversalStatements\">\n              <i class=\"fas fa-angle-right font_size_20\" ></i>\n          </ion-col>\n          <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"isAccordian.UniversalStatements\">\n              <i class=\"fas fa-angle-down font_size_20\" ></i>\n          </ion-col>\n        </ion-row>\n        <div *ngIf=\"isAccordian.UniversalStatements\" [ngClass]=\"{'statementsContent':universalStatementsList.length>3}\">\n              <section class=\"errorMsgSection\"  *ngIf=\"!this.universalStatementsList.length>0\">\n                      <span>{{errorMsg}}</span>\n                      <button *ngIf=\"canTryAgain\" (click)=\"GetUniversalLifeStatement()\">{{\"generic_msgs.try_again\" | translate }}</button>\n              </section>\n              \n              <section *ngIf=\"universalStatementsList.length>0\">\n                      <!-- <page-statements [statementsData]=\"universalStatementsList\"></page-statements> -->\n                      <div>\n                        <ion-row class=\"heading contentMargin\">\n                            <ion-col class=\"ion-text-center\">\n                             <strong> {{\"premium_stmts.policy_no\" | translate }}</strong>\n                            </ion-col>\n                            <ion-col class=\"ion-text-center\">\n                                <strong>   {{\"premium_stmts.stmt_year\" | translate }}</strong>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row  *ngFor=\"let statement of universalStatementsList \">\n                                <ion-col class=\"polNo\" class=\"ion-text-center\" >\n                                    {{statement.policyNumber}}\n                                </ion-col>\n                                <ion-col  class=\"ion-text-center year\" (click)=\"downloadAndOpenPdf(statement)\">\n                                    {{statement.statementYear}}\n                                </ion-col>\n                        </ion-row>\n                      </div>\n              </section>\n      </div>\n  </div>\n\n      <div class=\"listrow\">\n      <ion-row (click)=\"navToBonusStmts()\">\n          <ion-col size=\"10\" class=\"margin_top_bottom_auto\">\n              <ion-label class=\"listLabel\">{{\"annual_stmts.bonus_stmts\" | translate }}</ion-label>\n          </ion-col>\n          <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"!isAccordian.BonusStatements\">\n              <i class=\"fas fa-angle-right font_size_20\" ></i>\n          </ion-col>\n          <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"isAccordian.BonusStatements\">\n              <i class=\"fas fa-angle-down font_size_20\" ></i>\n          </ion-col>\n        </ion-row>\n        <div *ngIf=\"isAccordian.BonusStatements\" [ngClass]=\"{'statementsContent':bonusStatementsList.length>3}\">\n              <section class=\"errorMsgSection\"  *ngIf=\"!this.bonusStatementsList.length>0\">\n                      <span>{{errorMsg}}</span>\n                      <button *ngIf=\"canTryAgain\" (click)=\"GetBonusStatements()\">{{\"generic_msgs.try_again\" | translate }}</button>\n              </section>\n              \n              <section *ngIf=\"bonusStatementsList.length>0\">\n                      <!-- <page-statements [statementsData]=\"bonusStatementsList\"></page-statements> -->\n                      <div>\n                        <ion-row class=\"heading contentMargin\">\n                            <ion-col class=\"ion-text-center\">\n                             <strong> {{\"premium_stmts.policy_no\" | translate }}</strong>\n                            </ion-col>\n                            <ion-col class=\"ion-text-center\">\n                                <strong>   {{\"premium_stmts.stmt_year\" | translate }}</strong>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row  *ngFor=\"let statement of bonusStatementsList \">\n                                <ion-col class=\"polNo\" class=\"ion-text-center\" >\n                                    {{statement.policyNumber}}\n                                </ion-col>\n                                <ion-col  class=\"ion-text-center year\" (click)=\"downloadAndOpenPdf(statement)\">\n                                    {{statement.statementYear}}\n                                </ion-col>\n                        </ion-row>\n                      </div>\n              </section>\n      </div>\n  </div>\n\n      <div class=\"listrow\">\n      <ion-row (click)=\"navToMAFStmts()\">\n          <ion-col size=\"10\" class=\"margin_top_bottom_auto\">\n              <ion-label class=\"listLabel\">{{\"annual_stmts.maf_stmts\" | translate }}</ion-label>\n          </ion-col>\n          <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"!isAccordian.MAFStatements\">\n              <i class=\"fas fa-angle-right font_size_20\" ></i>\n          </ion-col>\n          <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"isAccordian.MAFStatements\">\n              <i class=\"fas fa-angle-down font_size_20\" ></i>\n          </ion-col>\n        </ion-row>\n        <div *ngIf=\"isAccordian.MAFStatements\" [ngClass]=\"{'statementsContent':MAFStatementsList.length>3}\">\n              <section class=\"errorMsgSection\"  *ngIf=\"!this.MAFStatementsList.length>0\">\n                      <span>{{errorMsg}}</span>\n                      <button *ngIf=\"canTryAgain\" (click)=\"GetMAFStatement()\">{{\"generic_msgs.try_again\" | translate }}</button>\n              </section>\n              \n              <section *ngIf=\"MAFStatementsList.length>0\">\n                      <!-- <page-statements [statementsData]=\"MAFStatementsList\"></page-statements> -->\n                      <div>\n                        <ion-row class=\"heading contentMargin\">\n                            <ion-col class=\"ion-text-center\">\n                             <strong> {{\"premium_stmts.policy_no\" | translate }}</strong>\n                            </ion-col>\n                            <ion-col class=\"ion-text-center\">\n                                <strong>   {{\"premium_stmts.stmt_year\" | translate }}</strong>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row  *ngFor=\"let statement of MAFStatementsList \">\n                                <ion-col class=\"polNo\" class=\"ion-text-center\" >\n                                    {{statement.policyNumber}}\n                                </ion-col>\n                                <ion-col  class=\"ion-text-center year\" (click)=\"downloadAndOpenPdf(statement)\">\n                                    {{statement.statementYear}}\n                                </ion-col>\n                        </ion-row>\n                      </div>\n              </section>\n      </div>\n  </div>\n\n      <div>\n      <ion-row (click)=\"navToEducationStmts()\">\n          <ion-col size=\"10\" class=\"margin_top_bottom_auto\">\n              <ion-label class=\"listLabel\">{{\"annual_stmts.education_stmts\" | translate }}</ion-label>\n          </ion-col>\n          <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"!isAccordian.EduStatements\">\n              <i class=\"fas fa-angle-right font_size_20\" ></i>\n          </ion-col>\n          <ion-col size=\"2\" class=\"ion-text-center\" class=\"margin_top_bottom_auto\" *ngIf=\"isAccordian.EduStatements\">\n              <i class=\"fas fa-angle-down font_size_20\" ></i>\n          </ion-col>\n        </ion-row>\n        <div *ngIf=\"isAccordian.EduStatements\" [ngClass]=\"{'statementsContent':EducationBoosterFundStatementsList.length>3}\">\n              <section class=\"errorMsgSection\"  *ngIf=\"!this.EducationBoosterFundStatementsList.length>0\">\n                      <span>{{errorMsg}}</span>\n                      <button *ngIf=\"canTryAgain\" (click)=\"GetEducationBoosterFundStatement()\">{{\"generic_msgs.try_again\" | translate }}</button>\n              </section>\n              \n              <section *ngIf=\"EducationBoosterFundStatementsList.length>0\">\n                      <!-- <page-statements [statementsData]=\"EducationBoosterFundStatementsList\"></page-statements> -->\n                      <div>\n                        <ion-row class=\"heading contentMargin\">\n                            <ion-col class=\"ion-text-center\">\n                             <strong> {{\"premium_stmts.policy_no\" | translate }}</strong>\n                            </ion-col>\n                            <ion-col class=\"ion-text-center\">\n                                <strong>   {{\"premium_stmts.stmt_year\" | translate }}</strong>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row  *ngFor=\"let statement of EducationBoosterFundStatementsList \">\n                                <ion-col class=\"polNo\" class=\"ion-text-center\" >\n                                    {{statement.policyNumber}}\n                                </ion-col>\n                                <ion-col  class=\"ion-text-center year\" (click)=\"downloadAndOpenPdf(statement)\">\n                                    {{statement.statementYear}}\n                                </ion-col>\n                        </ion-row>\n                      </div>\n              </section>\n      </div>\n  </div>\n</div>\n</ion-content>\n\n"],"names":["RouterModule","AnnualStatementsPage","routes","path","component","AnnualStatementsPageRoutingModule","forChild","imports","exports","CommonModule","FormsModule","IonicModule","TranslateModule","AnnualStatementsPageModule","declarations","MenuOptions","i0","constructor","utilServices","getStatementsService","downloadFile","translate","logger","config","PremiumStatements","UnitStatements","PaStatements","UaStatements","AppfStatements","UniversalStatements","BonusStatements","MAFStatements","EduStatements","analytics","currentPage","pageName","ngOnInit","ionViewWillEnter","emit","ANNUAL_STATEMENTS","downloadAndOpenPdf","statement","console","log","downloadStatementFile","link","policyNumber","navToPremiumStmts","premiumStatementsList","length","isAccordian","getPremiumStatments","toggleSection","navToUnitStmts","unitStatementsList","getUnitStatmentsList","navToPAStmts","paStatementsList","getPAStatments","navToUAStmts","uaStatementsList","getUAStatments","navToAppfStmts","appfStatementsList","GetAppfStatements","navToUniversalStmts","universalStatementsList","GetUniversalLifeStatement","navToBonusStmts","bonusStatementsList","GetBonusStatements","navToMAFStmts","MAFStatementsList","GetMAFStatement","navToEducationStmts","EducationBoosterFundStatementsList","GetEducationBoosterFundStatement","isDeviceOnLine","canTryAgain","showProgressLoader","errorMsg","trace","getPremiumStatements","then","result","dissmisProgressLoader","instant","e","msg","err","showError","getUnitStatements","getPAStatements","getUAStatements","getAppfStatements","getUniversalLifeStatement","getBonusStatements","getMAFStatement","getEducationBoosterFundStatement","handleServiceException","toggleOption","key","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}