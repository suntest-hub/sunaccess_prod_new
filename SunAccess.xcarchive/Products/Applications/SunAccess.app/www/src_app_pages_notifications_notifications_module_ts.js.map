{"version":3,"file":"src_app_pages_notifications_notifications_module_ts.js","mappings":"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","sources":["./src/app/pages/notifications/notifications-routing.module.ts","./src/app/pages/notifications/notifications.module.ts","./src/app/pages/notifications/notifications.page.ts","./src/app/pages/notifications/notifications.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotificationsPage } from './notifications.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificationsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NotificationsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NotificationsPageRoutingModule } from './notifications-routing.module';\r\nimport {  TranslateModule } from '@ngx-translate/core';\r\nimport { NotificationsPage } from './notifications.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    NotificationsPageRoutingModule,\r\n    TranslateModule,\r\n  ],\r\n  declarations: [NotificationsPage]\r\n})\r\nexport class NotificationsPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { MenuController } from '@ionic/angular';\r\nimport { MenuOptions } from 'src/app/app.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NotificationService } from './notificationsService';\r\n//import { NotificationDetailsPage } from '../notification-details/notification-details';\r\nimport { TranslateConfigService } from '../../services/translate-config.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LoggerServiceProvider } from 'src/providers/logger-service/logger-service';\r\n\r\nimport { ViewChild } from '@angular/core';\r\nimport { Platform } from '@ionic/angular';\r\n// import { AnnualStatementsPage } from '../annual-statements/annual-statements';\r\n import { IonItemSliding } from '@ionic/angular';\r\n// import { NotificationDetailsService } from './notificationdetails';\r\n//import { AlertController } from 'ionic-angular/components/alert/alert-controller';\r\nimport * as HttpStatus from 'http-status-codes';\r\nimport { ConfigProvider } from 'src/providers/utils/config';\r\nimport { UtilService } from 'src/providers/utils/utils.service';\r\nimport { AlertController} from '@ionic/angular';\r\nimport { NotificationDetailsService } from '../notification-details/notificationDetailsService';\r\n\r\n\r\n@Component({\r\n  selector: 'app-notifications',\r\n  templateUrl: './notifications.page.html',\r\n  styleUrls: ['./notifications.page.scss'],\r\n})\r\nexport class NotificationsPage implements OnInit {\r\n\r\n  // @ViewChild(Content) content: Content;\r\n\r\n  notifications = [];\r\n  isShowingLoader = true;\r\n  errorMsg: any;\r\n  sday: any;\r\n  smonth: any;\r\n  syear:any;\r\n  canTryAgain: any = false;\r\n  month_names_short: any;\r\n\r\n  loadMoreTimer;\r\n  isServiceCallInProgress: any = false;\r\n  isLastPageReached: boolean = false;\r\n  hasRecords: any = true;\r\n  pageNum: number = 1;\r\n  lastPageIndex:any;\r\n  curentNotiDate:any;\r\n  isSuccess:boolean= false;\r\n  constructor(public router: Router,public detailsService:NotificationDetailsService, public menu: MenuController, private utils: UtilService,public config: ConfigProvider,\r\n    public notificationsService: NotificationService, public translate: TranslateConfigService,public translateService: TranslateService,\r\n    public logger: LoggerServiceProvider,public platform: Platform,public ref:ChangeDetectorRef,private alertCtrl : AlertController) {\r\n    this.utils.analytics(\"Notifications\");\r\n    this.config.currentPage.pageName = \"NotificationsPage\";\r\n     console.log('notifications',this.notifications)\r\n  }\r\n\r\n  /**\r\n  * This method is called when the page is loaded and here we will do Service calls.\r\n  */\r\n  // ionViewDidLoad() {\r\n\r\n  // }\r\n\r\n  ngOnInit() {\r\n\r\n    this.logger.log('ionViewDidLoad NotificationsPage');\r\n    this.month_names_short = this.config.months;\r\n    this.getNotifications(undefined);\r\n  }\r\n  /**\r\n   * In this method we are updating the side menu title\r\n   */\r\n\r\n  ionViewWillEnter() {\r\n    this.utils.component.emit(MenuOptions.NOTIFICATIONS);\r\n  }\r\n\r\n  /**\r\n   * This method is used to get list of Notifications from Server\r\n   */\r\n  getNotifications(infinite) {\r\n    if (this.utils.isDeviceOnLine()) {\r\n      if (this.pageNum <= this.lastPageIndex) {\r\n        return;\r\n      }\r\n      this.lastPageIndex = this.pageNum;\r\n\r\n      this.isServiceCallInProgress = true;\r\n      this.hasRecords = true;\r\n      if (infinite == undefined) {\r\n        this.canTryAgain = false;\r\n        this.isShowingLoader = true;\r\n        this.errorMsg = \"\";\r\n      }\r\n      this.notificationsService.getNotificationsList(this.pageNum).then(\r\n        (response) => {\r\n          try {\r\n            if (this.notifications.length > 0) {\r\n                this.notifications = this.notifications.concat(response['responseJSON']['array']);\r\n            } else {\r\n                this.notifications = response['responseJSON']['array'];\r\n                ConfigProvider.PAGE_SIZE = response['responseJSON']['pageSize'];\r\n            }\r\n\r\n            // if (this.pageNum == 1) {\r\n            //     var contentHeight = this.content.getContentDimensions().contentHeight;\r\n            //     var pageHeight = this.platform.height();\r\n            //     if (contentHeight < pageHeight) {\r\n            //         this.pageNum++;\r\n            //         this.getNotifications(undefined);\r\n            //     }\r\n            // }\r\n            this.isServiceCallInProgress = false;\r\n            if (!(this.notifications.length > 0)) {\r\n                if (infinite == undefined) {\r\n                    this.canTryAgain = false;\r\n                    this.errorMsg = this.translateService.instant('generic_msgs.no_data');\r\n                }\r\n                if (response['responseJSON']['array'].length < ConfigProvider.PAGE_SIZE) {\r\n                    this.isLastPageReached = true;\r\n                    if (infinite)\r\n                        infinite.enable(false);\r\n                } else {\r\n                    this.pageNum++;\r\n                }\r\n            } else {\r\n                if (response['responseJSON']['array'].length  < ConfigProvider.PAGE_SIZE) {\r\n                    this.isLastPageReached = true;\r\n                    if (infinite)\r\n                        infinite.enable(false);\r\n                } else {\r\n                    this.pageNum++;\r\n                }\r\n            }\r\n            if (infinite != undefined)\r\n                infinite.complete();\r\n            else {\r\n                this.isShowingLoader = false;\r\n            }\r\n\r\n        } catch (e) {\r\n            this.isServiceCallInProgress = false;\r\n            if (infinite == undefined) {\r\n                this.isShowingLoader = false;\r\n                this.canTryAgain = true;\r\n                this.errorMsg = this.translateService.instant('generic_msgs.error_err');\r\n            } else {\r\n                infinite.complete();\r\n            }\r\n        }\r\n      }, (err) => {\r\n        this.isServiceCallInProgress = false;\r\n        if (infinite == undefined) {\r\n            this.isShowingLoader = false;\r\n            this.canTryAgain = true;\r\n            this.errorMsg = this.utils.handleServiceException(err);\r\n        } else {\r\n            infinite.complete();\r\n        }\r\n    });\r\n    } else {\r\n      this.isServiceCallInProgress = false;\r\n            if (infinite == undefined) {\r\n                this.isShowingLoader = false;\r\n                this.canTryAgain = true;\r\n                this.errorMsg = this.translateService.instant('generic_msgs.network_err');\r\n            } else {\r\n                infinite.complete();\r\n            }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method is used to naviagte Notification Details Page\r\n   * @param notification  - selected Notification Data\r\n   */\r\n  navToDetails(notification) {\r\n\r\n     if(notification.type===2){\r\n       // this.navCtrl.push(AnnualStatementsPage);\r\n        this.router.navigate(['/annual-statements']);\r\n        if(notification.unread){\r\n        this.updateNotiAsRead(notification);\r\n        }\r\n\r\n   }\r\n    else{\r\n    //  this.navCtrl.push(NotificationDetailsPage, notification.id);\r\n      this.router.navigate(['/notification-details'],{state: {notification}});\r\n      if(notification.unread){\r\n        this.updateNotiAsRead(notification);\r\n        }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * This method is used to set the notification as read\r\n   */\r\nupdateNotiAsRead (currentNoti){\r\n  console.log(\"currentNoti.unread\",currentNoti);\r\n  currentNoti.unread=false;\r\n   this.detailsService.setNotificationRead(currentNoti.id).then(\r\n                  (response)=>{\r\n                      try{\r\n                        this.isShowingLoader = false;\r\n                        if (response['responseJSON'] && response['responseJSON']['statusCode'] == HttpStatus.OK) {\r\n                           this.config.userInfo.unreadNoti=this.config.userInfo.unreadNoti-1;\r\n                          this.utils.publishSomeData({ 'event': 'UnreadNotiUpdated', 'data': this.config.userInfo.unreadNoti });\r\n                          }\r\n                        }catch(e){\r\n                        this.isShowingLoader = false;\r\n                        this.canTryAgain = true;\r\n                        this.errorMsg= this.translateService.instant('generic_msgs.server_err');\r\n                      }\r\n                    },\r\n                      (error)=>{\r\n                      this.isShowingLoader = false;\r\n                      this.canTryAgain = true;\r\n                      this.errorMsg = this.utils.handleServiceException(error);\r\n                    }\r\n                    );\r\n  }\r\n\r\n\r\n    UpdatedeleteNotification(currentNoti){\r\n\r\n      this.logger.trace(\"PUT USER Notification delete--start\");\r\n      this.utils.showProgressLoader();\r\n      let currentNotiDel=currentNoti.id;\r\n        if(this.utils.isDeviceOnLine()){\r\n        this.detailsService.setNotificationsDelete(currentNotiDel).then((res) => {\r\n          try {            this.utils.dissmisProgressLoader();\r\n           if (res['responseJSON'] && res['responseJSON']['statusCode'] ==  HttpStatus.OK) {\r\n             this.errorMsg = res['responseJSON']['userMessage'] ;\r\n              this.isSuccess = true;\r\n              if(currentNoti.unread){\r\n                this.config.userInfo.unreadNoti=this.config.userInfo.unreadNoti-1;\r\n                this.utils.publishSomeData({ 'event': 'UnreadNotiUpdated', 'data': this.config.userInfo.unreadNoti });\r\n              }\r\n              const index = this.notifications.findIndex(item => item.id === currentNoti.id);\r\n               this.notifications.splice(index, 1);\r\n            }else if(res['responseJSON'] && res['responseJSON']['statusCode'] == HttpStatus.ACCEPTED){\r\n              this.errorMsg = res['responseJSON']['userMessage'] ;\r\n            }else{\r\n              this.logger.error(\"PUT USER Notification delete Update : \" + JSON.stringify(res));\r\n              this.errorMsg = this.translateService.instant('generic_msgs.server_err');\r\n              this.isSuccess = false;\r\n            }\r\n          }catch (e) {\r\n            this.utils.dissmisProgressLoader();\r\n            this.isSuccess = false;\r\n            this.logger.error(\"PUT USER Notification delete Update : \" + JSON.stringify(e));\r\n            this.errorMsg = this.translateService.instant('generic_msgs.server_err');\r\n          }\r\n        }, (err) => {\r\n          this.utils.dissmisProgressLoader();\r\n          this.isSuccess = false;\r\n          this.logger.error(\"PUT USER Notification delete Update : \" + JSON.stringify(err));\r\n          this.errorMsg = this.utils.handleServiceException(err);\r\n        });\r\n      }else{\r\n        this.isShowingLoader = false;\r\n        this.isSuccess = false;\r\n        this.errorMsg = this.translateService.instant('generic_msgs.network_err');\r\n      }\r\n\r\n  }\r\n  /** this methos is to get Day from the date*/\r\n  setDay(date) {\r\n    this.sday = date.split(\"-\", 3);\r\n    return this.sday[0];\r\n  }\r\n  /** this methos is to get Month from the date*/\r\n  setMonth(date) {\r\n    this.smonth = date.split(\"-\", 3);\r\n    var month = this.smonth[1];\r\n    return this.month_names_short[month - 1];\r\n\r\n  }\r\n setYear(date) {\r\n    this.syear = date.split(\"-\",3);\r\n    return this.syear[2];\r\n\r\n  }\r\n  /**\r\n   * This method is used to open the url in bowser\r\n   * @param link - selected Link item details Object\r\n   */\r\n  openLink(link) {\r\n    if (link != null && link != undefined ) {\r\n      this.utils.openLink(link);\r\n    }\r\n  }\r\n\r\n  /**\r\n  *\r\n  * @param infinite  - this is the event callback from Infinite scroll.\r\n  * Here we perform request for pagination.\r\n  */\r\n  getMoreNotifications(infinite) {\r\n    // This is required to handle multiple triggers from Ionic load more\r\n    if (this.loadMoreTimer) {\r\n      clearTimeout(this.loadMoreTimer);\r\n    }\r\n\r\n    this.loadMoreTimer = setTimeout(() => {\r\n      this.logger.trace(\"NotificationsPage --getMoreNotifications--start--infinite : \" + infinite);\r\n      if (!this.isServiceCallInProgress) {\r\n        this.getNotifications(infinite);\r\n      }\r\n\r\n      this.logger.trace(\"NotificationsPage--getMoreNotifications--end\");\r\n      this.loadMoreTimer = null;\r\n    }, 800);\r\n\r\n  }\r\n\r\n\r\naskToDelete(slidingItem: IonItemSliding,selectedNoti){\r\n     let alert = this.alertCtrl.create({\r\n        header: 'Notification',\r\n        message: this.translateService.instant('notifications_page.deleteConfirmMsg'),\r\n        buttons: [\r\n            {\r\n                text: 'No',\r\n                handler: () => {\r\n                    console.log('Cancel clicked');\r\n                     slidingItem.close();\r\n                }\r\n            },\r\n            {\r\n                text: 'Yes',\r\n                handler: () => {\r\n                   this.UpdatedeleteNotification(selectedNoti);\r\n                }\r\n            }\r\n        ]\r\n    }).then((alert) => alert.present());\r\n}\r\n\r\n\r\n}\r\n","<ion-header mode=\"ios\">\r\n  <ion-toolbar color=\"primary\" class=\"toolbar\" >\r\n    <ion-menu-button slot=\"start\" auto-hide=\"false\" color=\"secondary\"></ion-menu-button>\r\n    <ion-title class=\"bold-font\"> {{\"notifications_page.title\"|translate}} </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content padding class=\"app_bg2\" no-bounce>\r\n  <section class=\"spinnersection ion-text-center\" *ngIf=\"isShowingLoader\">\r\n    <ion-spinner style=\"height:98%;\" name=\"lines-sharp-small\"></ion-spinner>\r\n</section>\r\n  <section class=\"errorMsgSection white_container_border_radius\" *ngIf=\"!(notifications.length>0) && !isShowingLoader\">\r\n    <span>{{errorMsg}}</span>\r\n    <button *ngIf=\"canTryAgain\" (click)=\"getNotifications(undefined)\">{{\"generic_msgs.try_again\" | translate }}</button>\r\n  </section>\r\n  <div *ngIf=\"notifications.length>0\" class=\"text_color_base padding_015\">\r\n    <ion-list style=\"background: transparent !important\">\r\n  <ion-item-sliding *ngFor=\"let notification of notifications\" style=\"background: transparent !important\" #slidingItem>\r\n    <ion-item (click)=\"navToDetails(notification)\" [ngClass]=\"{'customCardUnread': notification.unread===true, 'customCardRead': notification.unread===false}\" detail lines=\"none\">\r\n\r\n      <ion-row class=\"NotiRow\">\r\n        <ion-col size=\"3\"  class=\"margin_top_bottom_auto dateBlock \">\r\n          <p>{{setDay(notification.date) }}\r\n            <br>\r\n            <span class=\"font_size_18\">{{setMonth(notification.date)}}</span>\r\n            <br>\r\n            <span class=\"font_size_18\" >{{setYear(notification.date)}}</span>\r\n          </p>\r\n        </ion-col>\r\n        <ion-col size=\"8\" style=\"text-align: justify; white-space: initial !important;\"  class=\"margin_top_bottom_auto font_size_18\" [ngClass]=\"{'UnreadNotification':notification.unread===true}\" >\r\n          {{notification.title}}\r\n        </ion-col>\r\n          <!-- <ion-col size=\"1\" style=\"display: flex; text-align: center;\">\r\n            <ion-icon  name=\"chevron-forward\"></ion-icon>\r\n          </ion-col> -->\r\n        \r\n        <!-- <ion-col size=\"2\"  class=\"margin_top_bottom_auto\">\r\n          <i class=\"fas fa-angle-right font_size_20\"></i>\r\n        </ion-col> -->\r\n      </ion-row> \r\n\r\n    </ion-item>\r\n    <ion-item-options slot=\"end\" >\r\n      <ion-button  (click)=\"askToDelete(slidingItem,notification)\" class=\"deleteBtn danger\">\r\n      <div>\r\n        <ion-icon name=\"trash\"></ion-icon>\r\n        <br>\r\n        <ion-label style=\"display: block;\">DELETE</ion-label>\r\n      </div>\r\n      \r\n      </ion-button>\r\n    </ion-item-options>\r\n  </ion-item-sliding>\r\n</ion-list>\r\n    <ion-infinite-scroll (ionInfinite)=\"getMoreNotifications($event)\" *ngIf =\"!isLastPageReached\">\r\n      <ion-infinite-scroll-content></ion-infinite-scroll-content>\r\n    </ion-infinite-scroll>\r\n  </div>\r\n</ion-content>"],"names":["RouterModule","NotificationsPage","routes","path","component","NotificationsPageRoutingModule","forChild","imports","exports","CommonModule","FormsModule","IonicModule","TranslateModule","NotificationsPageModule","declarations","MenuOptions","HttpStatus","ConfigProvider","i0","undefined","constructor","router","detailsService","menu","utils","config","notificationsService","translate","translateService","logger","platform","ref","alertCtrl","analytics","currentPage","pageName","console","log","notifications","ngOnInit","month_names_short","months","getNotifications","ionViewWillEnter","emit","NOTIFICATIONS","infinite","isDeviceOnLine","pageNum","lastPageIndex","isServiceCallInProgress","hasRecords","canTryAgain","isShowingLoader","errorMsg","getNotificationsList","then","response","length","concat","PAGE_SIZE","instant","isLastPageReached","enable","complete","e","err","handleServiceException","navToDetails","notification","type","navigate","unread","updateNotiAsRead","state","currentNoti","setNotificationRead","id","OK","userInfo","unreadNoti","publishSomeData","error","UpdatedeleteNotification","trace","showProgressLoader","currentNotiDel","setNotificationsDelete","res","dissmisProgressLoader","isSuccess","index","findIndex","item","splice","ACCEPTED","JSON","stringify","setDay","date","sday","split","setMonth","smonth","month","setYear","syear","openLink","link","getMoreNotifications","loadMoreTimer","clearTimeout","setTimeout","askToDelete","slidingItem","selectedNoti","alert","create","header","message","buttons","text","handler","close","present","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}