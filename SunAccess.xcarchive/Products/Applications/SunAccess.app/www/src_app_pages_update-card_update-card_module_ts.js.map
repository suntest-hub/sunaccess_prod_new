{"version":3,"file":"src_app_pages_update-card_update-card_module_ts.js","mappings":"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","sources":["./src/app/pages/update-card/update-card-routing.module.ts","./src/app/pages/update-card/update-card.module.ts","./src/app/pages/update-card/update-card.page.ts","./src/app/pages/update-card/update-card.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UpdateCardPage } from './update-card.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdateCardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UpdateCardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpdateCardPageRoutingModule } from './update-card-routing.module';\n\nimport { UpdateCardPage } from './update-card.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    UpdateCardPageRoutingModule\n  ],\n  declarations: [UpdateCardPage]\n})\nexport class UpdateCardPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl } from '@angular/forms';\nimport { AlertController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { TranslateConfigService } from 'src/app/services/translate-config.service';\nimport { LoggerServiceProvider } from 'src/providers/logger-service/logger-service';\nimport { ConfigProvider } from 'src/providers/utils/config';\nimport { UtilService } from 'src/providers/utils/utils.service';\nimport { GetPolicyListService } from '../plan-listing/getPolicyListService';\nimport { UpdateCardService } from './updateCardService';\nimport { format ,parseISO} from 'date-fns'\nimport * as HttpStatus from 'http-status-codes';\n\n@Component({\n  selector: 'app-update-card',\n  templateUrl: './update-card.page.html',\n  styleUrls: ['./update-card.page.scss'],\n})\nexport class UpdateCardPage implements OnInit {\n  selectedLanguage:string;\n  showPicker = false;\n  isShowingLoader : boolean = false;\n  canTryAgain : boolean = false;\n  errorMsg :any;\n  updateCardForm : FormGroup;\n  isSuccessful : boolean = false;\n  today: number = Date.now();\n  Banks : any=[];\n  CardTypes : any=['Debit','Credit'];\n  policyList : any = [];\n  selectOptions :any;\n  formattdString: any='';\n  dateValue = format(new Date(), 'yyyy-MM-dd');\n  constructor(\n          public fb:FormBuilder,\n          public utils : UtilService,public logger : LoggerServiceProvider,\n          public policyListSrvc : GetPolicyListService,private translateConfigService: TranslateConfigService,\n          public putCardDetail : UpdateCardService,public alertCtrl : AlertController,\n          public translate:TranslateService, private config: ConfigProvider\n  ) {\n    this.selectedLanguage = this.translateConfigService.getDefaultLanguage();\n    this.translateConfigService.setLanguage('en');\n\n    this.config.currentPage.pageName = \"UpdateCardPage\";\n    this.utils.analytics(\"updateCardDetails\");\n     this.updateCardForm = fb.group({\n      cardholdername :['',[Validators.required, Validators.minLength(2), Validators.maxLength(200)]],\n      cardNumber:['',[Validators.required,Validators.minLength(16),Validators.maxLength(16)]],\n      cardtype:['',[Validators.required]],\n      bankname:['',[Validators.required]],\n      expiry_date : ['',Validators.required],\n      selectPolicy: this.fb.array([])\n    });\n     this.selectOptions = {\n      cssClass :\"selectPopover-updateCardDetails\"\n    };\n   }\n\n   ngOnInit() {\n    //console.log('ionViewDidLoad UpdateCardPage');\n    this.getPolicyList();\n  }\n  checkCardfirstDigit(){\n\n  }\n  dateFormat(value){\n    let  dateString = value.split('-');\n    let yy = dateString[0];\n    let mm = dateString[1];\n    // let dd = dateString[2];\n    return   mm + '/' +yy;\n    }\n  dateChanged(event){ // done\n    console.log(event);\n    this.showPicker = false;\n    let formattdString = format(parseISO(event), 'dd MMM yyyy');\n    let dString = formattdString.split('T')[0];\n    this.dateValue = format(new Date(dString), 'yyyy-MM');\n    this.formattdString = this.dateFormat(this.dateValue);\n    console.log(this.dateValue);\n\n\n   // this.updateCardForm.controls.expiry_date = this.dateValue;\n    //console.log('date_of_loss.value2',this.updateCardForm.controls.expiry_date.value);\n  }\n  onChange(policyNo:string, isChecked: any) {\n\n    const policyFormArray = <FormArray>this.updateCardForm.controls.selectPolicy;\n\n    if(isChecked.detail.checked) {\n      policyFormArray.push(new FormControl(policyNo)); //incase of checkbox select\n    } else {\n      let index = policyFormArray.controls.findIndex(x => x.value == policyNo)\n      policyFormArray.removeAt(index); //incase of checkbox unselect\n    }\n}\n/**\n   * this method for submitting update address detaisl for the policies\n   */\n  updateCardDetails(){\n    let checkedPolicyList = <FormArray>this.updateCardForm.get('selectPolicy');\n    if(this.updateCardForm.valid){\n      let formData = this.updateCardForm.controls;\n      let cardNumber = formData.cardNumber.value;\n      var cast = cardNumber.toString(10).split('');\n      if( cast[0] !=\"4\" && cast[0]!=\"5\"){\n        let errormessage= this.translate.instant('update_card_details.err_validCardNumber');\n          this.showPrompt(\"\",errormessage);\n      }else{\n      let cardholdername = formData.cardholdername.value;\n      let cardtype = formData.cardtype.value;\n      let bankname = formData.bankname.value;\n      let expiry_date = this.dateValue;\n       this.utils.showProgressLoader();\n      let selectedPolicies = [];\n\n      for(let i =0;i<checkedPolicyList.length;i++){\n       selectedPolicies.push(checkedPolicyList.value[i]);\n        var  data ={};\n         data['cardHolderName'] = cardholdername;\n         data['cardNumber'] = cardNumber;\n         data['cardType'] = cardtype;\n         data['bankName'] = bankname;\n         data['expiryDate'] = expiry_date;\n          data['policyNumber'] = selectedPolicies;\n\n      }\n      //this.isShowingLoader = true;\n        if(this.utils.isDeviceOnLine()){\n          this.canTryAgain = false;\n          this.putCardDetail.updateCardDetails(JSON.stringify(data)).then((res) => {\n            try {\n              this.utils.dissmisProgressLoader();\n              if(res['responseJSON']){\n                const errorMsg = res['responseJSON']['userMessage'] ;\n                this.showDialog(\"\", errorMsg);\n                // if (res['responseJSON']['statusCode'] == HttpStatus.ACCEPTED || res['responseJSON']['statusCode'] == HttpStatus.OK) {\n                //   let errorMsg = res['responseJSON']['userMessage'] ;\n                //   this.showDialog(\"\", errorMsg);\n                // } else{\n                //   let errorMsg = res['responseJSON']['Message'] ;\n                //   this.showDialog(\"\", errorMsg);\n                // }\n              }\n            }catch (e) {\n              this.logger.error(\"loginSuccess catch eror : \" + JSON.stringify(e));\n             this.utils.dissmisProgressLoader();\n             const errorMessage = this.translate.instant('generic_msgs.server_err');\n             this.utils.showAlert(\"\",errorMessage);\n            }\n          }, (err) => {\n           let errorMessage;\n           this.utils.dissmisProgressLoader();\n            errorMessage = this.utils.handleServiceException(err);\n            this.utils.showAlert(\"\",errorMessage);\n          });\n        }else{\n         this.utils.dissmisProgressLoader();\n         let errorMessage= this.translate.instant('generic_msgs.network_err');\n         this.utils.showAlert(\"\",errorMessage);\n        }\n        }\n\n    }\n  }\n\n\n // onCardChange(){\n // this.updateCardForm.controls['cardtype'].setValue(this.StatesList[0]['code']);\n\n //  }\n\n //   onBankChange(){\n //   this.updateCardForm.controls['bankname'].setValue(this.StatesList[0]['code']);\n\n //  }\n   /**\n   * to get the policy list\n   *\n   */\n  getPolicyList(){\n    if(!(this.policyList.length>0)){\n      this.isShowingLoader = true;\n        if(this.utils.isDeviceOnLine()){\n          this.canTryAgain = false;\n          this.putCardDetail.getPolicyListForcardUpdate(this.utils.getUserIdentity()).then((res) => {\n            try {\n\n              if (res['responseJSON'] && res['responseJSON']['statusCode'] == HttpStatus.OK) {\n                this.policyList = res['responseJSON']['array'];\n                 this.getBankStaticdata();\n\n              }else{\n                this.isShowingLoader = false;\n                this.canTryAgain = true;\n                this.errorMsg = this.translate.instant('generic_msgs.server_err');\n              }\n            }catch (e) {\n              this.isShowingLoader = false;\n              this.canTryAgain = true;\n              this.logger.error(\"loginSuccess catch eror : \" + JSON.stringify(e));\n              this.errorMsg = this.translate.instant('generic_msgs.server_err');\n            }\n          }, (err) => {\n            this.isShowingLoader = false;\n            this.canTryAgain = true;\n            this.errorMsg= this.translate.instant('generic_msgs.server_err');\n          });\n        }else{\n          this.isShowingLoader = false;\n          this.canTryAgain = true;\n          this.errorMsg= this.translate.instant('generic_msgs.network_err');\n        }\n    }else{\n      this.isShowingLoader = false;\n      this.canTryAgain = false;\n    }\n  }\n/**\n * This method is used to get list of countries\n */\n  getBankStaticdata(){\n    if(this.utils.isDeviceOnLine()){\n    this.isShowingLoader=true;\n    this.putCardDetail.getStaticdata().then(\n      (res) => {\n        try {\n          if (res['responseJSON'] && res['status'] == 200) {\n\n             this.Banks = res['responseJSON']['CardandPayoutData'].BankData;\n             this.CardTypes = res['responseJSON']['CardandPayoutData'].CardTypes;\n             this.isShowingLoader=false;\n\n          }else{\n            this.isShowingLoader=false;\n            this.logger.error(\"GET Banks list: \" + JSON.stringify(res));\n            this.errorMsg = this.translate.instant('generic_msgs.server_err');\n          }\n\n        }catch (e) {\n          this.isShowingLoader=false;\n          this.canTryAgain = true;\n          this.logger.error(\"get banks catch eror : \" + JSON.stringify(e));\n          this.errorMsg = this.translate.instant('generic_msgs.server_err');\n        }\n       },(err) => {\n        this.isShowingLoader=false;\n        this.errorMsg = this.utils.handleServiceException(err);\n      });\n    }else{\n        this.isShowingLoader=false;\n        this.canTryAgain = true;\n        this.logger.error(\"Get Banks generic_msgs.network_err\");\n        this.errorMsg = this.translate.instant('generic_msgs.network_err');\n    }\n  }\n\n\n  /**\n   *\n   * @param title - this is the title of the alert\n   * @param message  - message that need to display on the alert.\n   */\n  showDialog(title: string, message: string) {\n    let buttons = [{\n         text: 'Ok',\n         handler: () => {\n            //this.navCtrl.pop();\n         }\n     }];\n     const alert: any = this.alertCtrl.create({\n      header: title,\n      message: message,\n      buttons: buttons\n  }).then((alert) => alert.present());\n  }\n\n    showPrompt(title: string, message: string) {\n    let buttons = [{\n         text: 'Ok',\n         handler: () => {\n            //this.navCtrl.pop();\n         }\n     }];\n     const alert: any = this.alertCtrl.create({\n      header: title,\n      message: message,\n      buttons: buttons\n  }).then((alert) => alert.present());\n  }\n\n}\n","<ion-header mode=\"ios\" >\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button style=\"padding-left:15px; font-size:0.7rem;\" text=\"\" icon=\"chevron-back-outline\"></ion-back-button>\n    </ion-buttons>\n    <ion-title class=\"bold-font\">{{\"policy_servicing.update_card_details\" | translate }}</ion-title>\n   </ion-toolbar >\n</ion-header>\n\n<ion-content  class=\"app_bg2 text_color_base ion-padding\" no-bounce>\n  <section class=\"spinnersection ion-text-center\" *ngIf=\"isShowingLoader\">\n    <ion-spinner style=\"height:98%;\" name=\"lines-sharp-small\"></ion-spinner>\n</section>\n  <section class=\"errorMsgSection\"  *ngIf=\"!isShowingLoader && errorMsg\">\n      <span>{{errorMsg}}</span>\n      <ion-button *ngIf=\"canTryAgain\" (click)=\"getPolicyList()\">{{\"generic_msgs.try_again\" | translate }}</ion-button>\n  </section>\n<div class=\"white_container_border_radius ion-padding\"  *ngIf=\"!isShowingLoader && !errorMsg\">\n  <form  [formGroup]=\"updateCardForm\">\n    <p stacked >{{\"update_card_details.cardholdername\" | translate }} <span class=\"mandatory_star\">*</span></p>\n      <ion-item style=\"border: 1px solid #e0e0e0; background: white;\" lines=\"none\">\n          <ion-input placeholder='{{\"update_card_details.cardholdername\" | translate }}' type=\"text\"   formControlName=\"cardholdername\"  #input [value]=\"input.value.toUpperCase()\"></ion-input>\n      </ion-item>\n      <div  *ngIf=\"updateCardForm.get('cardholdername').hasError('required') && updateCardForm.get('cardholdername').touched\">\n              <span class=\"fail\">{{\"update_card_details.err_cardholdernameReq\" | translate }}</span>\n          </div>\n          <div  *ngIf=\"updateCardForm.get('cardholdername').hasError('minlength') && updateCardForm.get('cardholdername').touched\">\n           <span class=\"fail\">{{\"update_card_details.err_cardholdernameLengthReq\" | translate }}</span>\n           </div>\n           <p stacked >{{\"update_card_details.cardNumber\" | translate }}<span class=\"mandatory_star\">*</span></p>\n         <ion-item style=\"border: 1px solid #e0e0e0; background: white;\" lines=\"none\">\n            <ion-input placeholder='{{\"update_card_details.cardNumber\" | translate }}' restrict-input restrictInput=\"number\"  type=\"tel\" formControlName=\"cardNumber\" (ionBlur)=\"checkCardfirstDigit()\"></ion-input>\n         </ion-item>\n         <div  *ngIf=\"updateCardForm.get('cardNumber').hasError('required') && updateCardForm.get('cardNumber').touched\">\n              <span class=\"fail\">{{\"update_card_details.err_cardNumberReq\" | translate }}</span>\n            </div>\n              <div  *ngIf=\"updateCardForm.get('cardNumber').hasError('minlength') && updateCardForm.get('cardNumber').touched\">\n              <span class=\"fail\">{{\"update_card_details.err_cardNumberLengthReq\" | translate }}</span>\n              </div>\n              <div  *ngIf=\"updateCardForm.get('cardNumber').hasError('maxlength') && updateCardForm.get('cardNumber').touched\">\n              <span class=\"fail\">{{\"update_card_details.err_cardNumberLengthReq\" | translate }}</span>\n              </div>\n              <p stacked >{{\"update_card_details.cardtype\" | translate }} <span class=\"mandatory_star\">*</span></p>\n         <!-- <ion-item lines=\"none\">\n          <ion-select select-option interface=\"popover\" mode='ios'  formControlName=\"cardtype\" placeholder='{{\"update_card_details.selectCard\" | translate }}' [selectOptions]=\"selectOptions\">\n              <ion-select-option *ngFor=\"let cardList of CardTypes ;let i= index\" [value]=\"cardList.code\" >{{cardList.name}}</ion-select-option>\n          </ion-select>\n      </ion-item> -->\n      <div style=\"border: 1px solid #e0e0e0; background: white;\" lines=\"none\">\n        <ion-select select-option interface=\"popover\"  mode='ios' formControlName=\"cardtype\" [interfaceOptions]=\"{'cssClass': 'mycomponent-wider-popover'}\" placeholder='{{\"update_card_details.selectCard\" | translate }}' [selectOptions]=\"selectOptions\">\n            <ion-select-option *ngFor=\"let cardList of CardTypes ;let i= index\" [value]=\"cardList.code\" [selected]=\"i === 0\">{{cardList.name}}</ion-select-option>\n        </ion-select>\n    </div>\n  <div  *ngIf=\"updateCardForm.get('cardtype').hasError('required') && updateCardForm.get('cardtype').touched\">\n              <span class=\"fail\">{{\"update_card_details.err_cardtypeReq\" | translate }}</span>\n          </div>\n          <p stacked >{{\"update_card_details.bankname\" | translate }} <span class=\"mandatory_star\">*</span></p>\n        <!-- <ion-item lines=\"none\">\n          <ion-select select-option  [interfaceOptions]=\"{'cssClass': 'mycomponent-wider-popover'}\" mode='ios' formControlName=\"bankname\" placeholder='{{\"update_card_details.selectBank\" | translate }}' [selectOptions]=\"selectOptions\">\n              <ion-slect-option *ngFor=\"let bankList of Banks ;let i= index\" [value]=\"bankList.code\"  >{{bankList.name}}</ion-slect-option>\n          </ion-select>\n      </ion-item> -->\n      <div style=\"border: 1px solid #e0e0e0; background: white;\" lines=\"none\">\n        <ion-select select-option interface=\"popover\" mode='ios' formControlName=\"bankname\" [interfaceOptions]=\"{'cssClass': 'mycomponent-wider-popover'}\" placeholder='{{\"update_card_details.selectBank\" | translate }}'>\n            <ion-select-option *ngFor=\"let bankList of Banks ;let i= index\" [value]=\"bankList.code\" [selected]=\"i === 0\">{{bankList.name}}</ion-select-option>\n        </ion-select>\n    </div>\n<div  *ngIf=\"updateCardForm.get('bankname').hasError('required') && updateCardForm.get('bankname').touched\">\n              <span class=\"fail\">{{\"update_card_details.err_banknameReq\" | translate }}</span>\n          </div>\n          <p stacked>{{\"update_card_details.expiry_date\" | translate }}<span class=\"mandatory_star\">*</span></p>\n          <ion-item (click)=\"showPicker = !showPicker\" style=\"border: 1px solid #e0e0e0; background: white;\" lines=\"none\">\n           <ion-label class=\"font_family\"> {{\"update_card_details.expiry_date_label\" | translate }}</ion-label>\n           <ion-text slot=\"end\">{{formattdString}}</ion-text></ion-item>\n            <ion-datetime *ngIf=\"showPicker\" #datetime [value]=\"dateValue\" size=\"cover\" presentation=\"month-year\"\n            min=\"{{today | date:'yyyy-MM-dd' }}\"  max=\"2050-01-01\" (ionChange)=\"dateChanged(datetime.value)\"\n            showDefaultButtons=\"true\" formControlName=\"expiry_date\" (ionCancel)=\"showPicker=false;\">\n            </ion-datetime>\n   <div  *ngIf=\"updateCardForm.get('expiry_date').hasError('required') && updateCardForm.get('expiry_date').touched\">\n              <span class=\"fail\">{{\"update_card_details.err_expireDateReq\" | translate }}</span>\n          </div><br>\n\n\n\n      <ion-label class=\"font_family\">{{\"update_card_details.selectPlan\" | translate }}<span class=\"mandatory_star\">*</span></ion-label>\n    <div  *ngIf=\"updateCardForm.get('selectPolicy').length<=0 && updateCardForm.valid\">\n        <span class=\"fail\">{{\"update_card_details.err_selectPlan\" | translate }}</span>\n    </div>\n\n    <div style=\"margin-top:10px;\" *ngIf=\"policyList.length>0\">\n        <ion-row>\n            <ion-col size=\"5\"><ion-label  class=\"lbl font_family\">{{\"update_card_details.policyNumber\" | translate }}</ion-label></ion-col>\n            <ion-col size=\"5\"><ion-label  class=\"lbl font_family\">{{\"update_card_details.planName\" | translate }}</ion-label></ion-col>\n            <ion-col size=\"2\"></ion-col>\n          </ion-row>\n    <ion-row *ngFor = \"let policy of policyList\">\n      <ion-col size=\"5\"><ion-label  class=\"font_family\">{{policy.policyNumber}}</ion-label></ion-col>\n      <ion-col size=\"5\"><ion-label  class=\"font_family\">{{policy.planName}}</ion-label></ion-col>\n      <ion-col size=\"2\" class=\"checkBox\" text-wrap><ion-checkbox  (ionChange)=\"onChange(policy.policyNumber, $event)\" value=\"false\"></ion-checkbox></ion-col>\n    </ion-row>\n   </div>\n        <ion-row  text-center align-items-center>\n          <ion-col>\n              <ion-button class=\"btn_center\" [disabled]=\"!(updateCardForm.valid && !updateCardForm.get('selectPolicy').length<=0)\" (click)=\"updateCardDetails()\">{{\"update_card_details.update\" | translate }}</ion-button>\n          </ion-col>\n      </ion-row>\n      </form>\n      <ion-label  class=\"font_family\" >\n              {{\"update_card_details.importantNote_txt_title\"|translate}}\n          </ion-label>\n          <ul >\n            <li>{{\"update_card_details.importantNote_txt_line1\"|translate}}</li>\n\n          </ul>\n  </div>\n</ion-content>\n"],"names":["RouterModule","UpdateCardPage","routes","path","component","UpdateCardPageRoutingModule","forChild","imports","exports","CommonModule","FormsModule","ReactiveFormsModule","IonicModule","TranslateModule","UpdateCardPageModule","declarations","Validators","FormControl","format","parseISO","HttpStatus","i0","constructor","fb","utils","logger","policyListSrvc","translateConfigService","putCardDetail","alertCtrl","translate","config","Date","now","selectedLanguage","getDefaultLanguage","setLanguage","currentPage","pageName","analytics","updateCardForm","group","cardholdername","required","minLength","maxLength","cardNumber","cardtype","bankname","expiry_date","selectPolicy","array","selectOptions","cssClass","ngOnInit","getPolicyList","checkCardfirstDigit","dateFormat","value","dateString","split","yy","mm","dateChanged","event","console","log","showPicker","formattdString","dString","dateValue","onChange","policyNo","isChecked","policyFormArray","controls","detail","checked","push","index","findIndex","x","removeAt","updateCardDetails","checkedPolicyList","get","valid","formData","cast","toString","errormessage","instant","showPrompt","showProgressLoader","selectedPolicies","i","length","data","isDeviceOnLine","canTryAgain","JSON","stringify","then","res","dissmisProgressLoader","errorMsg","showDialog","e","error","errorMessage","showAlert","err","handleServiceException","policyList","isShowingLoader","getPolicyListForcardUpdate","getUserIdentity","OK","getBankStaticdata","getStaticdata","Banks","BankData","CardTypes","title","message","buttons","text","handler","alert","create","header","present","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}