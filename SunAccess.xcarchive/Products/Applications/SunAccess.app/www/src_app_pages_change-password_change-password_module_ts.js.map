{"version":3,"file":"src_app_pages_change-password_change-password_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AAEK;;;AAE5D,MAAME,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEH,qEAAkBA;CAC9B,CACF;AAMK,MAAOI,+BAA+B;;mBAA/BA,+BAA+B;AAAA;;QAA/BA;AAA+B;;YAHhCL,kEAAqB,CAACE,MAAM,CAAC,EAC7BF,yDAAY;AAAA;;sHAEXK,+BAA+B;IAAAE,UAAAA,yDAAAA;IAAAC,UAFhCR,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACbuB;AACmB;AAErB;AAEsC;AAEvB;AACN;;AAahD,MAAOc,wBAAwB;;mBAAxBA,wBAAwB;AAAA;;QAAxBA;AAAwB;;YATjCL,yDAAY,EACZC,uDAAW,EACXE,uDAAW,EACXC,gEAAe,EACfF,+DAAmB,EACnBN,4FAA+B;AAAA;;sHAItBS,wBAAwB;IAAAC,eAFpBd,qEAAkB;IAAAM,UAP/BE,yDAAY,EACZC,uDAAW,EACXE,uDAAW,EACXC,gEAAe,EACfF,+DAAmB,EACnBN,4FAA+B;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBiC;AAQR;AAEiB;AAE7B;;;;;;;;;;;;;;;;ICH9CiB,4DAAAA,iBAAwE;IACtEA,uDAAAA,qBAAwE;IAC5EA,0DAAAA,EAAU;;;;;IAOHA,4DAAAA,cAC8D;IACnDA,oDAAAA,GAAmD;;IAAAA,0DAAAA,EAAO;;;IAA1DA,uDAAAA,GAAmD;IAAnDA,+DAAAA,CAAAA,yDAAAA,2CAAmD;;;;;;IAGzDA,4DAAAA,cAAyJ;IAA5BA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,yBAAiB;IAAA,EAAC;IAAxJA,0DAAAA,EAAyJ;;;;;IAK/JA,4DAAAA,cACwD;IAC9CA,oDAAAA,GAAmD;;IAAAA,0DAAAA,EAAO;;;IAA1DA,uDAAAA,GAAmD;IAAnDA,+DAAAA,CAAAA,yDAAAA,2CAAmD;;;;;IAE7DA,4DAAAA,cACqD;IAC5CA,oDAAAA,GAA+C;;IAAAA,0DAAAA,EAAO;;;IAAtDA,uDAAAA,GAA+C;IAA/CA,+DAAAA,CAAAA,yDAAAA,wCAA+C;;;;;IAMxDA,4DAAAA,cACiE;IACrDA,oDAAAA,GAAsD;;IAAAA,0DAAAA,EAAO;;;IAA7DA,uDAAAA,GAAsD;IAAtDA,+DAAAA,CAAAA,yDAAAA,8CAAsD;;;;;IAElEA,4DAAAA,cAEqE;IAC7DA,oDAAAA,GAA0C;;IAAAA,0DAAAA,EAAO;;;IAAjDA,uDAAAA,GAA0C;IAA1CA,+DAAAA,CAAAA,yDAAAA,mCAA0C;;;;;;IAnCtDA,4DAAAA,cAAgF;IAE9BA,oDAAAA,GAA2C;;IAAAA,4DAAAA,eAA6B;IAAAA,oDAAAA,QAAC;IAAAA,0DAAAA,EAAO;IAC7HA,4DAAAA,mBAAsC;IACjCA,uDAAAA,oBAA0J;;IAC/JA,0DAAAA,EAAW;IACXA,wDAAAA,+DAGM;IACHA,4DAAAA,aAA4B;IAAAA,oDAAAA,IAA0C;;IAAAA,4DAAAA,gBAA6B;IAACA,oDAAAA,UAAC;IAAAA,0DAAAA,EAAO;IAC1GA,wDAAAA,+DAAyJ;IACzJA,0DAAAA,EAAI;IACRA,4DAAAA,oBAAuC;IACnCA,uDAAAA,qBAAgL;;IACtLA,0DAAAA,EAAW;IACXA,wDAAAA,+DAGM;IACNA,wDAAAA,+DAGK;IACNA,4DAAAA,aAAuB;IAACA,oDAAAA,IAAgD;;IAAAA,4DAAAA,gBAA6B;IAAAA,oDAAAA,SAAC;IAAAA,0DAAAA,EAAO;IAC5GA,4DAAAA,oBAAuC;IACjCA,uDAAAA,qBAAmK;;IACzKA,0DAAAA,EAAW;IACXA,wDAAAA,+DAGM;IACNA,wDAAAA,+DAIM;IACLA,4DAAAA,mBAA6D;IAEtCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,yBAAgB;IAAA,EAAC;IAA6DA,oDAAAA,IAAkC;;IAAAA,0DAAAA,EAAa;;;;IAtC1JA,uDAAAA,GAAgC;IAAhCA,wDAAAA,wCAAgC;IACUA,uDAAAA,GAA2C;IAA3CA,gEAAAA,KAAAA,yDAAAA,wCAA2C;IAEjCA,uDAAAA,GAAwD;IAAxDA,mEAAAA,gBAAAA,yDAAAA,mCAAwD;IAE5FA,uDAAAA,GACwC;IADxCA,wDAAAA,6IACwC;IAG5BA,uDAAAA,GAA0C;IAA1CA,gEAAAA,KAAAA,yDAAAA,wCAA0C;IAC7DA,uDAAAA,GAAkB;IAAlBA,wDAAAA,6BAAkB;IAG6CA,uDAAAA,GAA+D;IAA/DA,mEAAAA,gBAAAA,yDAAAA,2CAA+D;IAExHA,uDAAAA,GACkC;IADlCA,wDAAAA,mIACkC;IAGlCA,uDAAAA,GAC+B;IAD/BA,wDAAAA,kIAC+B;IAG3BA,uDAAAA,GAAgD;IAAhDA,gEAAAA,MAAAA,yDAAAA,8CAAgD;IAEbA,uDAAAA,GAA6D;IAA7DA,mEAAAA,gBAAAA,yDAAAA,yCAA6D;IAEpGA,uDAAAA,GAC2C;IAD3CA,wDAAAA,iJAC2C;IAG3CA,uDAAAA,GAE8C;IAF9CA,wDAAAA,sQAE8C;IAKOA,uDAAAA,GAAsC;IAAtCA,wDAAAA,8CAAsC;IAACA,uDAAAA,GAAkC;IAAlCA,+DAAAA,CAAAA,yDAAAA,6BAAkC;;;AD/BjJ,MAAOrB,kBAAkB;EAO7BsB,YACUC,MAAc,EACdC,KAAkB,EAClBC,sBAA8C,EAC9CC,MAA6B,EAAUC,sBAA6C,EACpFC,SAA0B,EAASC,WAAgC,EAClEC,MAAsB,EAASC,WAA6B,EAC9DC,SAA4B,EAASC,SAA2B;IAN/D,WAAM,GAANV,MAAM;IACN,UAAK,GAALC,KAAK;IACL,2BAAsB,GAAtBC,sBAAsB;IACtB,WAAM,GAANC,MAAM;IAAiC,2BAAsB,GAAtBC,sBAAsB;IAC7D,cAAS,GAATC,SAAS;IAA0B,gBAAW,GAAXC,WAAW;IAC7C,WAAM,GAANC,MAAM;IAAyB,gBAAW,GAAXC,WAAW;IAC5C,cAAS,GAATC,SAAS;IAA4B,cAAS,GAATC,SAAS;IAXvD,oBAAe,GAAY,KAAK;IAGhC,SAAI,GAAQ,MAAM;IAWhB,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACT,sBAAsB,CAACU,kBAAkB,EAAE;IACxE,IAAI,CAACV,sBAAsB,CAACW,WAAW,CAAC,IAAI,CAAC;EAC/C;EAEAC,QAAQ;IACN,IAAIC,eAAe,GAAGpB,uFAA+B;IACrD,IAAI,CAACsB,kBAAkB,GAAG,IAAIxB,qDAAS,CAAC;MACtCyB,gBAAgB,EAAE,IAAI1B,uDAAW,CAAC,EAAE,EAAE,CAACE,+DAAmB,CAAC,CAAC;MAC5D0B,WAAW,EAAE,IAAI5B,uDAAW,CAAC,EAAE,EAAE,CAACE,+DAAmB,EAAEA,8DAAkB,CAACqB,eAAe,CAAC,EAAErB,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;MACrH6B,kBAAkB,EAAE,IAAI/B,uDAAW,CAAC,EAAE,EAAE,CAACE,+DAAmB,EAAEA,8DAAkB,CAACqB,eAAe,CAAC,EAAErB,gEAAoB,CAAC,CAAC,CAAC,CAAC;KAC5H,CAAC;EACJ;EACA8B,cAAc;IACZ,IAAI,CAACrB,MAAM,CAACsB,GAAG,CAAC,mCAAmC,CAAC;EACtD;EACAC,cAAc;IACZ,IAAI,CAACzB,KAAK,CAAC0B,kBAAkB,EAAE;IAChC,IAAI,IAAI,CAACV,kBAAkB,CAACW,KAAK,EAAE;MACjC,IAAIC,mBAAmB,GAAG,IAAI,CAACZ,kBAAkB,CAACa,QAAQ,CAAC,kBAAkB,CAAC,CAACC,KAAK,CAACC,IAAI,EAAE;MAC3F,IAAIC,cAAc,GAAG,IAAI,CAAChB,kBAAkB,CAACa,QAAQ,CAAC,aAAa,CAAC,CAACC,KAAK,CAACC,IAAI,EAAE;MACjF,IAAIE,gBAAgB,GAAG,IAAI,CAACjB,kBAAkB,CAACa,QAAQ,CAAC,oBAAoB,CAAC,CAACC,KAAK,CAACC,IAAI,EAAE;MAC1F,IAAIC,cAAc,KAAKC,gBAAgB,EAAE;QACvC,IAAIC,GAAG,GAAG,IAAI,CAACzB,SAAS,CAAC0B,OAAO,CAAC,0BAA0B,CAAC;QAC5D,IAAI,CAACnC,KAAK,CAACoC,qBAAqB,EAAE;QAClC,IAAI,CAACpC,KAAK,CAACqC,SAAS,CAAC,EAAE,EAAEH,GAAG,CAAC;QAC7B;OACD,MAAM;QACL,IAAI,IAAI,CAAClC,KAAK,CAACsC,cAAc,EAAE,EAAE;UAC/B,IAAI,CAACtC,KAAK,CAAC0B,kBAAkB,EAAE;UAC/B,IAAI,CAACvB,sBAAsB,CAACoC,qBAAqB,CAACX,mBAAmB,EAAEI,cAAc,EAAEC,gBAAgB,CAAC,CAACO,IAAI,CAAEC,GAAG,IAAI;YACpH,IAAI;cACF,IAAIA,GAAG,CAAC,cAAc,CAAC,EAAC;gBACtB,IAAGA,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,IAAI7C,wDAAmB,IAAI6C,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,IAAI7C,kDAAa,EAAE;kBACjH,IAAIsC,GAAG,GAAG,IAAI,CAACzB,SAAS,CAAC0B,OAAO,CAAC,mCAAmC,CAAC;kBACrE,IAAIS,QAAQ,GAAGH,GAAG,CAAC,cAAc,CAAC,CAAC,aAAa,CAAC,IAAIP,GAAG;kBACxD,IAAI,CAACW,SAAS,GAAG,IAAI;kBACrB,IAAI,CAAC7C,KAAK,CAACoC,qBAAqB,EAAE;kBAClC,IAAI,CAACU,UAAU,CAAC,EAAE,EAAEF,QAAQ,CAAC;iBAE9B,MAAM;kBACL,IAAIA,QAAQ,GAAGH,GAAG,CAAC,cAAc,CAAC,CAAC,aAAa,CAAC,IAAG,IAAI,CAAChC,SAAS,CAAC0B,OAAO,CAAC,yBAAyB,CAAC;kBACrG,IAAI,CAACU,SAAS,GAAG,KAAK;kBACtB,IAAI,CAAC7C,KAAK,CAACoC,qBAAqB,EAAE;kBAClC,IAAI,CAACpC,KAAK,CAACqC,SAAS,CAAC,EAAE,EAAEO,QAAQ,CAAC;;;aAGvC,CAAC,OAAOG,CAAC,EAAE;cACV,IAAI,CAAC/C,KAAK,CAACoC,qBAAqB,EAAE;cAClC,IAAI,CAACS,SAAS,GAAG,KAAK;cACtB,IAAI,CAAC3C,MAAM,CAAC8C,KAAK,CAAC,4BAA4B,GAAGC,IAAI,CAACC,SAAS,CAACH,CAAC,CAAC,CAAC;cACnE,IAAIH,QAAQ,GAAG,IAAI,CAACnC,SAAS,CAAC0B,OAAO,CAAC,yBAAyB,CAAC;cAChE,IAAI,CAACnC,KAAK,CAACqC,SAAS,CAAC,EAAE,EAAEO,QAAQ,CAAC;;UAEtC,CAAC,EAAGO,GAAG,IAAI;YACT,IAAI,CAACnD,KAAK,CAACoC,qBAAqB,EAAE;YAClC,IAAI,CAACS,SAAS,GAAG,KAAK;YACtB,IAAID,QAAQ,GAAG,IAAI,CAAC5C,KAAK,CAACoD,sBAAsB,CAACD,GAAG,CAAC;YACrD,IAAI,CAACnD,KAAK,CAACqC,SAAS,CAAC,EAAE,EAAEO,QAAQ,CAAC;UACpC,CAAC,CAAC;SACH,MAAM;UACL,IAAI,CAAC5C,KAAK,CAACoC,qBAAqB,EAAE;UAClC,IAAI,CAACS,SAAS,GAAG,KAAK;UACtB,IAAID,QAAQ,GAAG,IAAI,CAACnC,SAAS,CAAC0B,OAAO,CAAC,0BAA0B,CAAC;UACjE,IAAI,CAACnC,KAAK,CAACqC,SAAS,CAAC,EAAE,EAAEO,QAAQ,CAAC;;;;EAI1C;EAGA;;;;;;EAOAE,UAAU,CAACO,KAAa,EAAEC,OAAe;IACvC,IAAIC,EAAE,GAAG,IAAI,CAAC9C,SAAS,CAAC0B,OAAO,CAAC,eAAe,CAAC;IAChD,IAAIqB,OAAO,GAAG,CAAC;MACbC,IAAI,EAAEF,EAAE;MACRG,OAAO,EAAE,MAAK;QACZ;QACA,IAAI,CAACrD,WAAW,CAACsD,MAAM,EAAE;QAEzB;QACA,IAAI,CAACrD,MAAM,CAACsD,QAAQ,GAAG,EAAE;QACzB,IAAI,CAACtD,MAAM,CAACuD,WAAW,GAAG,EAAE;QAC5B,IAAI,CAACvD,MAAM,CAACwD,YAAY,GAAG,EAAE;QAE7B;QACA,IAAI,IAAI,CAACxD,MAAM,CAACyD,cAAc,IAAI,IAAI,EAAE;UACtCC,YAAY,CAAC,IAAI,CAAC1D,MAAM,CAACyD,cAAc,CAAC;UACxC,IAAI,CAACzD,MAAM,CAACyD,cAAc,GAAG,IAAI;;QAGnC;QACA,IAAI,IAAI,CAACzD,MAAM,CAAC2D,UAAU,IAAI,IAAI,EAAE;UAClCC,aAAa,CAAC,IAAI,CAAC5D,MAAM,CAAC2D,UAAU,CAAC;UACrC,IAAI,CAAC3D,MAAM,CAAC2D,UAAU,GAAG,IAAI;;QAG/B,IAAI,CAACzD,SAAS,CAAC2D,gBAAgB,CAAC,IAAI,CAAC3D,SAAS,CAAC4D,eAAe,CAACP,WAAW,CAAC;QAC3E,IAAI,CAAC9D,MAAM,CAACsE,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE;UAAEC,KAAK,EAAE;YAACC,OAAO,EAAE,IAAI;YAAEC,SAAS,EAAE,SAAS;YAACC,gBAAgB,EAAC;UAAI;QAAC,CAAE,CAAC;QAC9G;MACF;KACD,CAAC;;IAEF,MAAMC,KAAK,GAAQ,IAAI,CAACtE,SAAS,CAACuE,MAAM,CAAC;MACxCC,MAAM,EAAEvB,KAAK;MACbC,OAAO,EAAEA,OAAO;MAChBE,OAAO,EAAEA;KACZ,CAAC,CAAChB,IAAI,CAAEkC,KAAK,IAAKA,KAAK,CAACG,OAAO,EAAE,CAAC;EAClC;EAEA;EACD;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACOC,SAAS,CAAC/B,CAAQ;;MACvB,MAAMgC,OAAO,GAAG,MAAM,IAAI,CAACxE,WAAW,CAACoE,MAAM,CAAC;QAC5ChG,SAAS,EAAEgB,qFAAkB;QAC7BqF,YAAY,EAAE,KAAK;QACnBC,KAAK,EAAElC,CAAC;QACRmC,cAAc,EAAE;UAAEhD,GAAG,EAAE,IAAI,CAACiD;QAAI,CAAE;QAClCC,QAAQ,EAAE;OACX,CAAC;MAEF,MAAML,OAAO,CAACF,OAAO,EAAE;IAEzB,CAAC;;;;mBA1JYrG,kBAAkB;AAAA;;QAAlBA,kBAAkB;EAAA6G;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCrB/B5F,4DAAAA,oBAAuB;MAGjBA,uDAAAA,yBAAoH;MACtHA,0DAAAA,EAAc;MACdA,4DAAAA,mBAA6B;MAACA,oDAAAA,GAAoC;;MAAAA,0DAAAA,EAAY;MAIlFA,4DAAAA,qBAAgF;MAC9EA,wDAAAA,8DAEQ;MACRA,wDAAAA,wDA2CI;MACNA,0DAAAA,EAAc;;;MApDoBA,uDAAAA,GAAoC;MAApCA,gEAAAA,MAAAA,yDAAAA,gCAAoC;MAKnBA,uDAAAA,GAAqB;MAArBA,wDAAAA,6BAAqB;MAGdA,uDAAAA,GAAsB;MAAtBA,wDAAAA,8BAAsB","sources":["./src/app/pages/change-password/change-password-routing.module.ts","./src/app/pages/change-password/change-password.module.ts","./src/app/pages/change-password/change-password.page.ts","./src/app/pages/change-password/change-password.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ChangePasswordPage } from './change-password.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ChangePasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ChangePasswordPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ChangePasswordPageRoutingModule } from './change-password-routing.module';\r\n\r\nimport { ChangePasswordPage } from './change-password.page';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    ChangePasswordPageRoutingModule\r\n  ],\r\n  declarations: [ChangePasswordPage]\r\n})\r\nexport class ChangePasswordPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController, PopoverController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateConfigService } from 'src/app/services/translate-config.service';\r\nimport { AuthHandlerProvider } from 'src/providers/auth-handler/auth-handler';\r\nimport { JsonStoreProvider } from 'src/providers/json-store/json-store';\r\nimport { LoggerServiceProvider } from 'src/providers/logger-service/logger-service';\r\nimport { ConfigProvider } from 'src/providers/utils/config';\r\nimport { UtilService } from 'src/providers/utils/utils.service';\r\nimport { PopoverContentPage } from '../popover-content/popover-content.page';\r\nimport { ChangePasswordService } from './changePasswordService';\r\nimport * as HttpStatus from 'http-status-codes';\r\n\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.page.html',\r\n  styleUrls: ['./change-password.page.scss'],\r\n})\r\nexport class ChangePasswordPage implements OnInit {\r\n  selectedLanguage:string;\r\n  changePasswordForm: FormGroup;\r\n  isShowingLoader: boolean = false;\r\n  errorMsg: any;\r\n  isSuccess: boolean;\r\n  str1 : any =\"five\"\r\n  constructor(\r\n    private router: Router,\r\n    private utils: UtilService,\r\n    private translateConfigService: TranslateConfigService,\r\n    private logger: LoggerServiceProvider, private changePassswordService: ChangePasswordService,\r\n    private alertCtrl: AlertController, public authHandler: AuthHandlerProvider,\r\n     private config: ConfigProvider, public popOverCtrl:PopoverController,\r\n    public jsonStore: JsonStoreProvider, public translate: TranslateService,\r\n\r\n  ) {\r\n    this.selectedLanguage = this.translateConfigService.getDefaultLanguage();\r\n    this.translateConfigService.setLanguage('en');\r\n  }\r\n\r\n  ngOnInit() {\r\n    let PASSWORDPATTERN = ConfigProvider.PASSWORD_PATTERN;\r\n    this.changePasswordForm = new FormGroup({\r\n      existingPassword: new FormControl('', [Validators.required]),\r\n      newPassword: new FormControl('', [Validators.required, Validators.pattern(PASSWORDPATTERN), Validators.minLength(8)]),\r\n      reenternewPassword: new FormControl('', [Validators.required, Validators.pattern(PASSWORDPATTERN), Validators.minLength(8)])\r\n    });\r\n  }\r\n  ionViewDidLoad() {\r\n    this.logger.log('ionViewDidLoad ChangePasswordPage');\r\n  }\r\n  changePassword() {\r\n    this.utils.showProgressLoader();\r\n   if (this.changePasswordForm.valid) {\r\n     let existingPasswordVal = this.changePasswordForm.controls['existingPassword'].value.trim();\r\n     let newPasswordVal = this.changePasswordForm.controls['newPassword'].value.trim();\r\n     let reNewPasswordVal = this.changePasswordForm.controls['reenternewPassword'].value.trim()\r\n     if (newPasswordVal !== reNewPasswordVal) {\r\n       var msg = this.translate.instant('change_pwd.mismatch_pwds');\r\n       this.utils.dissmisProgressLoader();\r\n       this.utils.showAlert(\"\", msg);\r\n       return;\r\n     } else {\r\n       if (this.utils.isDeviceOnLine()) {\r\n         this.utils.showProgressLoader();\r\n         this.changePassswordService.changePasswordService(existingPasswordVal, newPasswordVal, reNewPasswordVal).then((res) => {\r\n           try {\r\n             if (res['responseJSON']){\r\n               if(res['responseJSON']['statusCode'] == HttpStatus.ACCEPTED || res['responseJSON']['statusCode'] == HttpStatus.OK) {\r\n                 let msg = this.translate.instant('change_pwd.change_pwd_success_txt');\r\n                 let errorMsg = res['responseJSON']['userMessage'] || msg;\r\n                 this.isSuccess = true;\r\n                 this.utils.dissmisProgressLoader();\r\n                 this.showDialog(\"\", errorMsg);\r\n\r\n               } else {\r\n                 let errorMsg = res['responseJSON']['userMessage'] ||this.translate.instant('generic_msgs.server_err');\r\n                 this.isSuccess = false;\r\n                 this.utils.dissmisProgressLoader();\r\n                 this.utils.showAlert(\"\", errorMsg);\r\n               }\r\n             }\r\n           } catch (e) {\r\n             this.utils.dissmisProgressLoader();\r\n             this.isSuccess = false;\r\n             this.logger.error(\"loginSuccess catch eror : \" + JSON.stringify(e));\r\n             let errorMsg = this.translate.instant('generic_msgs.server_err');\r\n             this.utils.showAlert(\"\", errorMsg);\r\n           }\r\n         }, (err) => {\r\n           this.utils.dissmisProgressLoader();\r\n           this.isSuccess = false;\r\n           let errorMsg = this.utils.handleServiceException(err);\r\n           this.utils.showAlert(\"\", errorMsg);\r\n         });\r\n       } else {\r\n         this.utils.dissmisProgressLoader();\r\n         this.isSuccess = false;\r\n         let errorMsg = this.translate.instant('generic_msgs.network_err');\r\n         this.utils.showAlert(\"\", errorMsg);\r\n       }\r\n     }\r\n   }\r\n }\r\n\r\n\r\n /**\r\n  * This method is called when password is changed successfully.\r\n  * According to requirement when the password is changed successfully then user has to logged out\r\n  * and ask user to login with new password.\r\n  * We will clear the user session data that we have saved in config and JSONStore.\r\n  */\r\n\r\n showDialog(title: string, message: string) {\r\n   let ok = this.translate.instant('change_pwd.Ok');\r\n   let buttons = [{\r\n     text: ok,\r\n     handler: () => {\r\n       /**Logout from adapter session */\r\n       this.authHandler.logout();\r\n\r\n       /**Set saved data to null */\r\n       this.config.userInfo = {};\r\n       this.config.userDetails = {};\r\n       this.config.passCodeInfo = {};\r\n\r\n       /**clear session time out*/\r\n       if (this.config.sessionTimeout != null) {\r\n         clearTimeout(this.config.sessionTimeout);\r\n         this.config.sessionTimeout = null\r\n       }\r\n\r\n       /** clear idle time out functionality */\r\n       if (this.config.interValID != null) {\r\n         clearInterval(this.config.interValID);\r\n         this.config.interValID = null\r\n       }\r\n\r\n       this.jsonStore.removeDataInJson(this.jsonStore.collectionNames.userDetails);\r\n       this.router.navigate(['/login-first'], { state: {animate: true, direction: 'forward',loadInitialLogin:true} });\r\n       //this.navCtrl.setRoot(LoginFirstPage, { animate: true, direction: 'forward',loadInitialLogin:true});\r\n     }\r\n   }];\r\n\r\n   const alert: any = this.alertCtrl.create({\r\n    header: title,\r\n    message: message,\r\n    buttons: buttons\r\n}).then((alert) => alert.present());\r\n }\r\n\r\n //This method is use to open the popup and push the content into the page\r\n//   openPopup(myEvent)\r\n//  {\r\n//    setTimeout(() => {\r\n//    let popover1 = this.popOverCtrl.create(PopoverContentPage, {msg : this.str1}, {cssClass: 'custom-popover'});\r\n//    popover1.present({\r\n//      ev:myEvent\r\n\r\n//    })\r\n//  }, 250);\r\n//  }\r\n async openPopup(e: Event) {\r\n  const popover = await this.popOverCtrl.create({\r\n    component: PopoverContentPage,\r\n    showBackdrop: false,\r\n    event: e,\r\n    componentProps: { msg: this.str1 },\r\n    cssClass: 'custom-popover'\r\n  });\r\n\r\n  await popover.present();\r\n\r\n}\r\n\r\n\r\n}\r\n","<ion-header mode=\"ios\">\r\n  <ion-toolbar color=\"primary\" class=\"toolbar\" >\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button style=\"padding-left:15px; font-size:0.7rem;\" text=\"\" icon=\"chevron-back-outline\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title class=\"bold-font\"> {{\"change_pwd.title\" | translate }} </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content  class=\"app_bg1 text_color_base padding_15 ion-padding\" no-bounce >\r\n  <section class=\"spinnersection ion-text-center\" *ngIf=\"isShowingLoader\">\r\n    <ion-spinner style=\"height:98%;\" name=\"lines-sharp-small\"></ion-spinner>\r\n</section>\r\n  <div class=\"white_container_border_radius padding_015\" *ngIf=\"!isShowingLoader\">\r\n   <form  [formGroup]=\"changePasswordForm\">\r\n    <p style=\"padding-top:10px\" position=\"stacked\" >{{\"change_pwd.existing_pwd\" | translate }} <span class=\"mandatory_star\">*</span></p>\r\n       <ion-item lines=\"none\" class=\"border\">\r\n            <ion-input type= \"password\" clearOnEdit = 'false' placeholder='{{\"change_pwd.existing_pwd\" | translate }}' formControlName=\"existingPassword\"></ion-input>\r\n       </ion-item>\r\n       <div class=\"fail\" *ngIf=\"changePasswordForm.get('existingPassword').hasError('required')\r\n              && changePasswordForm.get('existingPassword').touched\">\r\n            <span>{{\"change_pwd.existing_pwd_required\" | translate }}</span>\r\n       </div>\r\n          <p position=\"stacked\" clear>{{\"change_pwd.newpassword\" | translate }} <span class=\"mandatory_star\"> *</span>\r\n            <img  *ngIf=\"!isValidUser\" src=\"../../../assets/imgs/circle-question-solid.svg\" alt=\"...\" style=\"width: 16px; float: right;\" (click)=\"openPopup($event)\">\r\n            </p>\r\n        <ion-item  lines=\"none\" class=\"border\">\r\n            <ion-input class=\"newPassword\" type= \"password\" clearOnEdit = 'false' placeholder='{{\"change_pwd.placeholder_new_pwd\" | translate }}' formControlName=\"newPassword\"></ion-input>\r\n      </ion-item>\r\n      <div class=\"fail\" *ngIf=\"changePasswordForm.get('newPassword').hasError('required')\r\n            && changePasswordForm.get('newPassword').touched\">\r\n          <span>{{\"change_pwd.newpasswordisrequired\" | translate }}</span>\r\n      </div>\r\n      <div class=\"fail\" *ngIf=\"changePasswordForm.get('newPassword').hasError('pattern')\r\n          &&changePasswordForm.get('newPassword').touched\">\r\n         <span>{{\"change_pwd.invalidNewPassword\" | translate}}</span>\r\n     </div>\r\n     <p position=\"stacked\" > {{\"change_pwd.reenternewpasword\" | translate }} <span class=\"mandatory_star\">*</span></p>\r\n      <ion-item  lines=\"none\" class=\"border\">\r\n            <ion-input  type= \"password\"  clearOnEdit = 'false' placeholder='{{\"change_pwd.reenternewpasword\" | translate }}' formControlName=\"reenternewPassword\"></ion-input>\r\n      </ion-item>\r\n      <div class=\"fail\" *ngIf=\"changePasswordForm.get('reenternewPassword').hasError('required')\r\n              && changePasswordForm.get('reenternewPassword').touched\">\r\n            <span>{{\"change_pwd.renterpasswordisrequired\" | translate }}</span>\r\n      </div>\r\n      <div class=\"fail\" *ngIf=\"(!changePasswordForm.get('reenternewPassword').hasError('required') &&\r\n                  changePasswordForm.get('newPassword').value !== changePasswordForm.get('reenternewPassword').value)\r\n                  && changePasswordForm.get('reenternewPassword').touched\">\r\n        <span>{{\"change_pwd.mismatch_pwds\" | translate}}</span>\r\n      </div>\r\n       <ion-row  text-center align-items-center class=\"padding_150\">\r\n              <ion-col>\r\n                  <ion-button (click)=\"changePassword()\"  class=\"btn_center\"  [disabled]=\"!changePasswordForm.valid\">{{\"change_pwd.reset\" | translate}}</ion-button>\r\n              </ion-col>\r\n        </ion-row>\r\n</form>\r\n</div>\r\n</ion-content>\r\n"],"names":["RouterModule","ChangePasswordPage","routes","path","component","ChangePasswordPageRoutingModule","forChild","imports","exports","CommonModule","FormsModule","ReactiveFormsModule","IonicModule","TranslateModule","ChangePasswordPageModule","declarations","FormControl","FormGroup","Validators","ConfigProvider","PopoverContentPage","HttpStatus","i0","constructor","router","utils","translateConfigService","logger","changePassswordService","alertCtrl","authHandler","config","popOverCtrl","jsonStore","translate","selectedLanguage","getDefaultLanguage","setLanguage","ngOnInit","PASSWORDPATTERN","PASSWORD_PATTERN","changePasswordForm","existingPassword","required","newPassword","pattern","minLength","reenternewPassword","ionViewDidLoad","log","changePassword","showProgressLoader","valid","existingPasswordVal","controls","value","trim","newPasswordVal","reNewPasswordVal","msg","instant","dissmisProgressLoader","showAlert","isDeviceOnLine","changePasswordService","then","res","ACCEPTED","OK","errorMsg","isSuccess","showDialog","e","error","JSON","stringify","err","handleServiceException","title","message","ok","buttons","text","handler","logout","userInfo","userDetails","passCodeInfo","sessionTimeout","clearTimeout","interValID","clearInterval","removeDataInJson","collectionNames","navigate","state","animate","direction","loadInitialLogin","alert","create","header","present","openPopup","popover","showBackdrop","event","componentProps","str1","cssClass","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}