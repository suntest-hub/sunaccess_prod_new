{"version":3,"file":"src_app_pages_periodic-payout_periodic-payout_module_ts.js","mappings":"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","sources":["./src/app/pages/periodic-payout/periodic-payout-routing.module.ts","./src/app/pages/periodic-payout/periodic-payout.module.ts","./src/app/pages/periodic-payout/periodic-payout.page.ts","./src/app/pages/periodic-payout/periodic-payout.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PeriodicPayoutPage } from './periodic-payout.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PeriodicPayoutPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PeriodicPayoutPageRoutingModule {}\r\n","import { TranslateModule } from '@ngx-translate/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PeriodicPayoutPageRoutingModule } from './periodic-payout-routing.module';\r\n\r\nimport { PeriodicPayoutPage } from './periodic-payout.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    PeriodicPayoutPageRoutingModule\r\n  ],\r\n  declarations: [PeriodicPayoutPage]\r\n})\r\nexport class PeriodicPayoutPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateConfigService } from 'src/app/services/translate-config.service';\r\nimport { LoggerServiceProvider } from 'src/providers/logger-service/logger-service';\r\nimport { ConfigProvider } from 'src/providers/utils/config';\r\nimport { UtilService } from 'src/providers/utils/utils.service';\r\nimport * as HttpStatus from 'http-status-codes';\r\nimport { GetPeriodicPayoutService } from './periodicPayoutService';\r\n\r\n\r\n@Component({\r\n  selector: 'app-periodic-payout',\r\n  templateUrl: './periodic-payout.page.html',\r\n  styleUrls: ['./periodic-payout.page.scss'],\r\n})\r\nexport class PeriodicPayoutPage implements OnInit{\r\n  selectedLanguage:string;\r\n  isShowingLoader = true;\r\n  errorMsg : any;\r\n  periodicPayoutlist :any = [];\r\n  encryptedPolicyNo:any;\r\n  selectedPolicyData :any;\r\n  selectedPlanType :any;\r\n  canTryAgain  = false;\r\n  constructor(\r\n    private translateConfigService: TranslateConfigService,\r\n    public translate:TranslateService,\r\n    public logger:LoggerServiceProvider,\r\n    public periodicPayoutService:GetPeriodicPayoutService,\r\n    public utils:UtilService,\r\n    private config: ConfigProvider\r\n\r\n  ) {\r\n    this.selectedLanguage = this.translateConfigService.getDefaultLanguage();\r\n      this.translateConfigService.setLanguage('en');\r\n\r\n      this.utils.analytics(\"periodicPayout\");\r\n      this.config.currentPage.pageName = \"PeriodicPayoutPage\";\r\n      this.selectedPolicyData =   history.state.policyData;\r\n      this.selectedPlanType = this.selectedPolicyData['planType'];\r\n     this.encryptedPolicyNo = this.selectedPolicyData['encryptedPolicyNo'];\r\n   }\r\n   ngOnInit() {\r\n    this.getPeriodicPayoutList();\r\n  }\r\n\r\n   ionViewDidLoad() {\r\n    this.logger.log('ionViewDidLoad PeriodicPayoutPage');\r\n    this.getPeriodicPayoutList();\r\n  }\r\n  /**\r\n   * This is method is used to get list of payment records\r\n   */\r\n  getPeriodicPayoutList =function(){\r\n      if (this.utils.isDeviceOnLine()) {\r\n        this.canTryAgain =false;\r\n        this.periodicPayoutService.getPeriodicPayoutList(this.encryptedPolicyNo).then((res) => {\r\n          try {\r\n          this.isShowingLoader=false;\r\n            if (res['responseJSON'] && res['responseJSON']['statusCode'] == HttpStatus.OK) {\r\n              this.periodicPayoutlist = res['responseJSON']['array'];\r\n              if(!(this.periodicPayoutlist.length>0)){\r\n                this.errorMsg = this.translate.instant('generic_msgs.no_data');\r\n              }\r\n            }else{\r\n              this.errorMsg = res['responseJSON']['error_description'];\r\n            }\r\n          }catch (e) {\r\n            this.isShowingLoader=false;\r\n            this.canTryAgain =true;\r\n            this.logger.error(\"getPaymentRecords catch eror : \" + JSON.stringify(e));\r\n            this.errorMsg = this.translate.instant('generic_msgs.server_err');\r\n          }\r\n        }, (err) => {\r\n          this.isShowingLoader=false;\r\n          this.canTryAgain =true;\r\n          this.errorMsg = this.utils.handleServiceException(err);\r\n         });\r\n      }\r\n  }\r\n\r\n  /**\r\n   * This method is used to expand or collapse and Item\r\n   * @param item - selected itme that need to be expanded or collapsed\r\n   */\r\n  expandItem(item){\r\n    this.periodicPayoutlist.map((listItem) => {\r\n\r\n       if(item == listItem){\r\n           listItem.expanded = !listItem.expanded;\r\n       } else {\r\n           listItem.expanded = false;\r\n       }\r\n\r\n       return listItem;\r\n\r\n   });\r\n }\r\n\r\n}\r\n","<ion-header mode=\"ios\" >\r\n  <ion-toolbar color=\"primary\" style=\"border-bottom:3px solid white;\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button style=\"padding-left:15px; font-size:0.7rem;\" text=\"\" icon=\"chevron-back-outline\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title class=\"bold-font\"> {{selectedPolicyData['policyNumber']}}</ion-title>\r\n   </ion-toolbar >\r\n  <ion-toolbar color=\"primary\" class=\"tabs\">\r\n <ion-row [ngClass]=\"{'bg-conventional' : (selectedPlanType === 'Conventional'),'bg-takaful': (selectedPlanType !== 'Conventional')}\" style=\"margin-bottom: 5px;\">\r\n        <ion-label class=\"sub-header\">{{\"periodic_payouts.title\"|translate}}</ion-label>\r\n    </ion-row>\r\n  </ion-toolbar>\r\n\r\n  </ion-header>\r\n\r\n  <ion-content  class=\"app_bg2 ion-padding\" >\r\n     <section class=\"spinnersection ion-text-center\" *ngIf=\"isShowingLoader\">\r\n      <ion-spinner style=\"height:98%;\" name=\"lines-sharp-small\"></ion-spinner>\r\n    </section>\r\n     <section class=\"errorMsgSection\"  *ngIf=\"!(periodicPayoutlist.length>0) && !isShowingLoader\">\r\n      <span>{{errorMsg}}</span>\r\n      <ion-button *ngIf=\"canTryAgain\" (click)=\"getPeriodicPayoutList()\"> {{\"generic_msgs.try_again\" | translate }}</ion-button>\r\n    </section>\r\n    <section   *ngIf=\"periodicPayoutlist.length>0\"  >\r\n      <ion-list *ngFor=\"let payoutList of periodicPayoutlist\" class=\"white_container_border_radius padding_15\">\r\n          <ion-row *ngIf = payoutList.Date  style=\"border-bottom:none; padding: 10px;\">\r\n\r\n              <ion-item  lines=\"none\"  class=\"font_size_14\" lines=\"none\" (click)=\"expandItem(payoutList)\">{{ payoutList.date }}\r\n                <ion-icon  *ngIf = \"!fdetails.expanded\" style=\"color:white\" slot=\"end\" name=\"chevron-forward-outline\"></ion-icon>\r\n                <ion-icon *ngIf = \"fdetails.expanded\" slot=\"end\" name=\"chevron-down-outline\"></ion-icon>\r\n\r\n              </ion-item>\r\n\r\n         </ion-row>\r\n          <ion-row *ngIf = !payoutList.Date  lines=\"none\" style=\"border-bottom:none;padding: 10px;\">\r\n              <ion-item  lines=\"none\"  class=\"font_size_14\"  (click)=\"expandItem(payoutList)\"  > {{ payoutList.type }}\r\n                <ion-icon  *ngIf = \"!payoutList.expanded\" style=\"color:white\" slot=\"end\" name=\"chevron-forward-outline\"></ion-icon>\r\n                 <ion-icon *ngIf = \"payoutList.expanded\" style=\"color:white\" slot=\"end\" name=\"chevron-down-outline\"></ion-icon>\r\n\r\n              </ion-item>\r\n          </ion-row>\r\n          <div  *ngIf = \"payoutList.expanded\"  class=\"accordianContent\">\r\n              <ion-row>\r\n                  <div class=\"margin_top_bottom_auto div-padding\">\r\n                      <p class=\"lbl-header\">{{\"periodic_payouts.type\"|translate}}</p>\r\n                      <p *ngIf=\"payoutList.type\" class=\"lbl-content\">{{payoutList.type}}</p>\r\n                      <p *ngIf=\"!payoutList.type\" class=\"lbl-content\"> </p>\r\n                  </div>\r\n                </ion-row>\r\n                <ion-row>\r\n                  <div class=\"margin_top_bottom_auto div-padding\">\r\n                      <p class=\"lbl-header\">{{\"periodic_payouts.date\"|translate}}</p>\r\n                      <p  *ngIf=\"payoutList.date\"  class=\"lbl-content\">{{payoutList.date }}</p>\r\n                      <p  *ngIf=\"!payoutList.date\" class=\"lbl-content\"> </p>\r\n                  </div>\r\n              </ion-row>\r\n                <ion-row>\r\n                    <div class=\"margin_top_bottom_auto div-padding\">\r\n                        <p class=\"lbl-header\">{{\"periodic_payouts.date\"|translate}}</p>\r\n                        <p *ngIf=\"payoutList.date\" class=\"lbl-content\">{{payoutList.date }}</p>\r\n                        <p *ngIf=\"!payoutList.date\" class=\"lbl-content\"> </p>\r\n                    </div>\r\n                </ion-row>\r\n                <ion-row>\r\n                    <div class=\"margin_top_bottom_auto div-padding\">\r\n                        <p class=\"lbl-header\">{{\"periodic_payouts.payment_method\"|translate}}</p>\r\n                        <p *ngIf=\"payoutList.paymentMethod\" class=\"lbl-content\">{{payoutList.paymentMethod}}</p>\r\n                        <p *ngIf=\"!payoutList.paymentMethod\" class=\"lbl-content\">  </p>\r\n                    </div>\r\n                </ion-row>\r\n               <ion-row>\r\n                  <div class=\"margin_top_bottom_auto div-padding\">\r\n                      <p class=\"lbl-header\">{{\"periodic_payouts.remarks\"|translate}}</p>\r\n                      <p *ngIf=\"payoutList.remarks\" class=\"lbl-content\">{{payoutList.remarks}}</p>\r\n                      <p *ngIf=\"!payoutList.remarks\" class=\"lbl-content\">  </p>\r\n                  </div>\r\n                </ion-row>\r\n\r\n          </div>\r\n      </ion-list>\r\n  </section>\r\n  </ion-content>\r\n"],"names":["RouterModule","PeriodicPayoutPage","routes","path","component","PeriodicPayoutPageRoutingModule","forChild","imports","exports","TranslateModule","CommonModule","FormsModule","IonicModule","PeriodicPayoutPageModule","declarations","HttpStatus","i0","constructor","translateConfigService","translate","logger","periodicPayoutService","utils","config","isDeviceOnLine","canTryAgain","getPeriodicPayoutList","encryptedPolicyNo","then","res","isShowingLoader","OK","periodicPayoutlist","length","errorMsg","instant","e","error","JSON","stringify","err","handleServiceException","selectedLanguage","getDefaultLanguage","setLanguage","analytics","currentPage","pageName","selectedPolicyData","history","state","policyData","selectedPlanType","ngOnInit","ionViewDidLoad","log","expandItem","item","map","listItem","expanded","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}