{"version":3,"file":"src_app_pages_make-payment_make-payment_module_ts.js","mappings":"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","sources":["./src/app/pages/make-payment/make-payment-routing.module.ts","./src/app/pages/make-payment/make-payment.module.ts","./src/app/pages/make-payment/make-payment.page.ts","./src/app/pages/make-payment/make-payment.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MakePaymentPage } from './make-payment.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MakePaymentPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MakePaymentPageRoutingModule {}\r\n","import { TranslateModule } from '@ngx-translate/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MakePaymentPageRoutingModule } from './make-payment-routing.module';\r\n\r\nimport { MakePaymentPage } from './make-payment.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    MakePaymentPageRoutingModule\r\n  ],\r\n  declarations: [MakePaymentPage]\r\n})\r\nexport class MakePaymentPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfigProvider } from 'src/providers/utils/config';\r\nimport { UtilService, } from 'src/providers/utils/utils.service';\r\nimport { PaymentSuccessService } from './paymentSuccessService';\r\nimport { UpdateDirectDebitService } from '../update-direct-debit/updateDirectDebitService';\r\nimport * as HttpStatus from 'http-status-codes';\r\nimport { LoggerServiceProvider } from 'src/providers/logger-service/logger-service';\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare var eGHL: any;\r\n\r\n@Component({\r\n  selector: 'app-make-payment',\r\n  templateUrl: './make-payment.page.html',\r\n  styleUrls: ['./make-payment.page.scss'],\r\n})\r\nexport class MakePaymentPage  {\r\n  encryptedPolicyNo: any;\r\n  paymentSeqNo: any;\r\n  paymentId: any;\r\n  selectedPlanType: any;\r\n  policyNo: any;\r\n  policyOwnerName: any;\r\n  phone: any;\r\n  planName: any;\r\n  premiumAmount: any;\r\n  email: any;\r\n  merchantURL: any;\r\n  merchantReturnURL: any;\r\n  merchantID: any;\r\n  password: any;\r\n  merchantName: any;\r\n  paymentUserData: any;\r\n  dataItem: any;\r\n  isDirectDebit: false;\r\n  transactionType: any = \"SALE\";\r\n  paymentDescription: any = \"Premium Payment\";\r\n  paymentGateway: any = \"https://pay.e-ghl.com/IPGSG/Payment.aspx\";\r\n\r\n\r\n  isPaymentSuccess: boolean = false;\r\n  paymentSuccessResp: any;\r\n  /**buttons to passs to alert popup when transaction failed */\r\n  alertButtons = [{\r\n    text: this.translate.instant('make_payment.okBtn'),\r\n    handler: () => {\r\n      this.router.navigate(['payment-acknowledgement'], { state: { successdata: this.paymentSuccessResp,animate: true, direction: 'forward'} });\r\n      //this.navCtrl.push(PaymentAcknowledgementPage,{\"successdata\":this.paymentSuccessResp, animate: true, direction: 'forward' });\r\n    }\r\n  }];\r\n\r\n\r\n  constructor(\r\n    public utils: UtilService,\r\n    public putPaymentResults: PaymentSuccessService,\r\n    public translate: TranslateService,\r\n    private config: ConfigProvider,\r\n    public logger: LoggerServiceProvider,\r\n    private directDebitService: UpdateDirectDebitService,\r\n    private router: Router\r\n    )\r\n    {\r\n    this.config.currentPage.pageName = \"MakePaymentPage\";\r\n    this.encryptedPolicyNo = history.state.encryptedPolicyNo;\r\n    this.merchantURL = history.state.mURL;\r\n    this.merchantReturnURL = history.state.mreturnURL;\r\n    this.merchantID = history.state.ID;\r\n    this.password = history.state.passwd;\r\n    this.merchantName =  history.state.mname;\r\n    this.paymentUserData = history.state.paymentdata;\r\n    this.isDirectDebit = history.state.isDirectDebit;\r\n    if(this.isDirectDebit){\r\n      this.transactionType = \"EMANDATE01\";\r\n      this.paymentDescription = \"Direct Debit peyment\";\r\n      this.premiumAmount = 1.00;\r\n      this.paymentGateway = this.merchantURL;\r\n    } else {\r\n      this.premiumAmount = this.paymentUserData.premium;\r\n    }\r\n    this.policyNo = this.paymentUserData.policyNumber;\r\n    this.policyOwnerName = this.paymentUserData.policyOwner;\r\n    this.phone = this.paymentUserData.contactNumber;\r\n    this.planName = this.paymentUserData.planName;\r\n    this.email = this.paymentUserData.email;\r\n\r\n    this.paymentId = this.paymentUserData.paymentid;\r\n    this.isPaymentSuccess = false;\r\n    }\r\n\r\n  /**payment process intilization */\r\n  pay() {\r\n    var orderId = (window.crypto.getRandomValues(new Uint16Array(1)))[0] + 10000;\r\n    var orderId1 = orderId.toString();\r\n    // if (this.utils.getPlatform() == 'ios') {\r\n    //   this.paymentSeqNo = this.paymentId.replace(\"MPAYIOS\", \"\");\r\n    // } else if (this.utils.getPlatform() == 'android') {\r\n    //   this.paymentSeqNo = this.paymentId.replace(\"MPAYAOS\", \"\");\r\n    // }\r\n    const data = {\r\n      /*\r\n      * Mandatory payment parameters list:\r\n      * transactionType, paymentMethod, serviceId, paymentId, orderNumber, paymentDesc,\r\n      * merchantReturnUrl, amount, currencyCode, custIp, custName, custEmail, custPhone\r\n      * Check the eGHL documentation for parameter names.\r\n      * [All Field are defined as String], Except paymentTimeout and sdkTimeout.\r\n      * NOTE: Parameter names and spelling follow iOS, wherever the Android and iOS\r\n      * names differ!\r\n      */\r\n\r\n      // List of accepted params and some value detail (refer docs for more detail):\r\n      CurrencyCode: 'MYR',\r\n      PymtMethod: 'ANY',\r\n      TransactionType: this.transactionType,\r\n      PaymentGateway: 'https://pay.e-ghl.com/IPGSG/Payment.aspx', // Payment gateway URL given by eGHL\r\n      ServiceID: this.merchantID,// 'SLM', //Merchant Code or Service ID given by eGHL\r\n      Password: this.password,//'slm12345', // Merchant password given by eGHL\r\n      PaymentID: this.paymentId, //orderId, // Unique string for each payment\r\n      OrderNumber: orderId1, // Order number to refer current payment, can duplicate.\r\n      PaymentDesc: 'Premium payment',\r\n      MerchantReturnURL:this.merchantReturnURL,//  'http://bpp1.sunlifemalaysia.com/portal-ui/CUSTOMER/payment-transaction', // redirect when payment complete.//\r\n      Amount: this.premiumAmount,//'08.00', // e.g. 1000.00 for IDR Invalid format: 1,000.00 or 1000\r\n      CustIP: '172.17.68.38', // customer ip address captured by merchant\r\n      CustName: this.policyOwnerName,//'Beta Tester',\r\n      CustEmail: this.email,//'Tester@mail.com',\r\n      CustPhone: this.phone,//'60123456789',\r\n      MerchantName: this.merchantName,//'ABC Sdn Bhd',\r\n      LanguageCode: 'EN',\r\n      PageTimeout: '780', // timeout in seconds\r\n      PaymentTimeout: '-1',\r\n      sdkTimeout: '780', // seconds\r\n      _finaliseMessage: 'Optional message for Finalising Payment (iOS Only)',\r\n      _cancelMessage: 'Optional message for Cancelling Payment (iOS Only)',\r\n    };\r\n    /**this method is to call eGHL plugin with given payment data */\r\n\r\n\r\n    eGHL.makePayment(data,\r\n      (resp) => {\r\n        /**When payment successs */\r\n        if (resp.TxnStatus == 0) {\r\n          this.utils.presentToast(this.translate.instant('make_payment.paymentSuccess'));\r\n          this.isPaymentSuccess = true;\r\n          let inputData = {\r\n            transactionType: resp.TransactionType || \"\",\r\n            pymtMethod: resp.PymtMethod || \"\",\r\n            serviceID: resp.ServiceID || \"\",\r\n            paymentID: resp.PaymentID || \"\",\r\n            currencyCode: resp.CurrencyCode || \"\",\r\n            txnID: resp.TxnID || \"\",\r\n            issuingBank: resp.IssuingBank || \"\",\r\n            txnStatus: resp.TxnStatus || \"\",\r\n            authCode: resp.AuthCode || \"\",\r\n            cardHolder: resp.CardHolder || \"\",\r\n            cardNoMask: resp.CardNoMask || \"\",\r\n            cardExp: resp.CardExp || \"\",\r\n            cardType: resp.CardType || \"\",\r\n            premiumAmount: resp.Amount || \"\",\r\n            txnMessage: resp.TxnMessage || \"\"\r\n          }\r\n\r\n          this.paymentSuccessResp = inputData;\r\n           /**When payment failed */\r\n        } else if (resp.TxnStatus == 1) {\r\n           this.isPaymentSuccess = true;\r\n          let inputData = {\r\n            transactionType: resp.TransactionType || \"\",\r\n            pymtMethod: resp.PymtMethod || \"\",\r\n            serviceID: resp.ServiceID || \"\",\r\n            paymentID: resp.PaymentID || \"\",\r\n            currencyCode: resp.CurrencyCode || \"\",\r\n            txnID: resp.TxnID || \"\",\r\n            issuingBank: resp.IssuingBank || \"\",\r\n            txnStatus: resp.TxnStatus || \"\",\r\n            authCode: resp.AuthCode || \"\",\r\n            cardHolder: resp.CardHolder || \"\",\r\n            cardNoMask: resp.CardNoMask || \"\",\r\n            cardExp: resp.CardExp || \"\",\r\n            cardType: resp.CardType || \"\",\r\n            premiumAmount: resp.Amount || \"\",\r\n            txnMessage: resp.TxnMessage || \"\"\r\n          }\r\n\r\n          this.paymentSuccessResp = inputData;\r\n          this.utils.showAlert(this.translate.instant('make_payment.paymentFailed'),this.translate.instant('make_payment.transactionFailed'),false,this.alertButtons);\r\n        } else {\r\n          this.utils.showAlert(this.translate.instant('make_payment.paymentFailed'),this.translate.instant('make_payment.transactionFailed'),false,this.alertButtons);\r\n        }\r\n\r\n      },\r\n        /**When payment failed */\r\n      (err) => {\r\n        this.utils.showAlert(this.translate.instant('make_payment.paymentFailed'),this.translate.instant('make_payment.transactionFailed'),false,this.alertButtons);\r\n      }\r\n    );\r\n  }\r\n\r\n/**this sis tempraroy : to send payment successful daat to Sunaccess server*/\r\n  paymentSuccess() {\r\n    if (this.utils.isDeviceOnLine()) {\r\n      this.utils.showProgressLoader();\r\n\r\n      if(this.isDirectDebit){\r\n\r\n        this.directDebitService.putEMandateResults(this.paymentSuccessResp, this.paymentSeqNo).then((res) => {\r\n          try {\r\n            this.utils.dissmisProgressLoader();\r\n            if (res['responseJSON']){\r\n              if(res['responseJSON']['statusCode'] == HttpStatus.ACCEPTED || res['responseJSON']['statusCode'] == HttpStatus.OK) {\r\n                let message = res['responseJSON']['userMessage'] || this.translate.instant('make_payment.paymentSuccessService');\r\n                this.utils.showAlert(\"\", message, false, this.alertButtons);\r\n              } else {\r\n                let message = res['responseJSON']['Message'] || this.translate.instant('make_payment.paymentSuccessService');\r\n                this.utils.showAlert(\"\", message, false, this.alertButtons);\r\n              }\r\n            }\r\n          } catch (e) {\r\n            this.utils.dissmisProgressLoader();\r\n            this.logger.error(\"loginSuccess catch eror : \" + JSON.stringify(e));\r\n            let errorMessage = this.translate.instant('make_payment.tryAgain');\r\n            this.utils.showAlert(\"\", errorMessage, false, this.alertButtons);\r\n          }\r\n        }, (err) => {\r\n          let errorMessage;\r\n          this.utils.dissmisProgressLoader();\r\n          errorMessage = this.utils.handleServiceException(err);\r\n          this.utils.showAlert(\"\", errorMessage,false, this.alertButtons);\r\n        });\r\n\r\n      } else {\r\n\r\n        this.putPaymentResults.putPaymentSuccessDetails(this.paymentSuccessResp, this.paymentSeqNo).then((res) => {\r\n          try {\r\n            this.utils.dissmisProgressLoader();\r\n            if (res['responseJSON']){\r\n              if(res['responseJSON']['statusCode'] == HttpStatus.ACCEPTED || res['responseJSON']['statusCode'] == HttpStatus.OK) {\r\n                let message = res['responseJSON']['userMessage'] || this.translate.instant('make_payment.paymentSuccessService');\r\n                this.utils.showAlert(\"\", message, false, this.alertButtons);\r\n              } else {\r\n                let message = res['responseJSON']['Message'] || this.translate.instant('make_payment.paymentSuccessService');\r\n                this.utils.showAlert(\"\", message, false, this.alertButtons);\r\n              }\r\n            }\r\n          } catch (e) {\r\n            this.utils.dissmisProgressLoader();\r\n            this.logger.error(\"loginSuccess catch eror : \" + JSON.stringify(e));\r\n            let errorMessage = this.translate.instant('make_payment.tryAgain');\r\n            this.utils.showAlert(\"\", errorMessage, false, this.alertButtons);\r\n          }\r\n        }, (err) => {\r\n          let errorMessage;\r\n          this.utils.dissmisProgressLoader();\r\n          errorMessage = this.utils.handleServiceException(err);\r\n          this.utils.showAlert(\"\", errorMessage,false, this.alertButtons);\r\n        });\r\n\r\n\r\n      }\r\n\r\n    } else {\r\n      this.utils.dissmisProgressLoader();\r\n      let errorMessage = this.translate.instant('generic_msgs.network_err');\r\n      this.utils.showAlert(\"\", errorMessage,false, this.alertButtons);\r\n    }\r\n  }\r\n\r\n}\r\n","<ion-header mode=\"ios\" >\r\n  <ion-toolbar color=\"primary\" >\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button style=\"padding-left:15px; font-size:0.7rem;\" text=\"\" icon=\"chevron-back-outline\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title class=\"bold-font\">{{\"make_payment.title\"|translate}}</ion-title>\r\n   </ion-toolbar >\r\n</ion-header>\r\n\r\n<ion-content class=\"ion-padding\" no-bounce>\r\n  <button ion-button full (click)=\"pay()\"   [disabled]=\"isPaymentSuccess\">{{\"make_payment.pay\"|translate}}</button>\r\n  <button ion-button full (click)=\"paymentSuccess()\" [disabled]=\"!isPaymentSuccess\">{{\"make_payment.send_data\"|translate}}</button>\r\n  </ion-content>\r\n"],"names":["RouterModule","MakePaymentPage","routes","path","component","MakePaymentPageRoutingModule","forChild","imports","exports","TranslateModule","CommonModule","FormsModule","IonicModule","MakePaymentPageModule","declarations","HttpStatus","constructor","utils","putPaymentResults","translate","config","logger","directDebitService","router","text","instant","handler","navigate","state","successdata","paymentSuccessResp","animate","direction","currentPage","pageName","encryptedPolicyNo","history","merchantURL","mURL","merchantReturnURL","mreturnURL","merchantID","ID","password","passwd","merchantName","mname","paymentUserData","paymentdata","isDirectDebit","transactionType","paymentDescription","premiumAmount","paymentGateway","premium","policyNo","policyNumber","policyOwnerName","policyOwner","phone","contactNumber","planName","email","paymentId","paymentid","isPaymentSuccess","pay","orderId","window","crypto","getRandomValues","Uint16Array","orderId1","toString","data","CurrencyCode","PymtMethod","TransactionType","PaymentGateway","ServiceID","Password","PaymentID","OrderNumber","PaymentDesc","MerchantReturnURL","Amount","CustIP","CustName","CustEmail","CustPhone","MerchantName","LanguageCode","PageTimeout","PaymentTimeout","sdkTimeout","_finaliseMessage","_cancelMessage","eGHL","makePayment","resp","TxnStatus","presentToast","inputData","pymtMethod","serviceID","paymentID","currencyCode","txnID","TxnID","issuingBank","IssuingBank","txnStatus","authCode","AuthCode","cardHolder","CardHolder","cardNoMask","CardNoMask","cardExp","CardExp","cardType","CardType","txnMessage","TxnMessage","showAlert","alertButtons","err","paymentSuccess","isDeviceOnLine","showProgressLoader","putEMandateResults","paymentSeqNo","then","res","dissmisProgressLoader","ACCEPTED","OK","message","e","error","JSON","stringify","errorMessage","handleServiceException","putPaymentSuccessDetails","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}