{"version":3,"file":"src_app_pages_app-downloads_app-downloads_module_ts.js","mappings":"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","sources":["./src/app/pages/app-downloads/app-downloads-routing.module.ts","./src/app/pages/app-downloads/app-downloads.module.ts","./src/app/pages/app-downloads/app-downloads.page.ts","./src/app/pages/app-downloads/app-downloads.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppDownloadsPage } from './app-downloads.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppDownloadsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppDownloadsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AppDownloadsPageRoutingModule } from './app-downloads-routing.module';\n\nimport { AppDownloadsPage } from './app-downloads.page';\nimport {  TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AppDownloadsPageRoutingModule,\n    TranslateModule,\n  ],\n  declarations: [AppDownloadsPage]\n})\nexport class AppDownloadsPageModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { ModalController } from '@ionic/angular';\n//import { AppDownloadPopUpPage } from '../app-download-pop-up/app-download-pop-up';\nimport { GetAppsListService } from './getAppslistService';\n\nimport * as HttpStatus from 'http-status-codes';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LoggerServiceProvider } from 'src/providers/logger-service/logger-service';\nimport { UtilService } from 'src/providers/utils/utils.service';\nimport { ConfigProvider } from 'src/providers/utils/config';\n\n@Component({\n  selector: 'app-app-downloads',\n  templateUrl: './app-downloads.page.html',\n  styleUrls: ['./app-downloads.page.scss'],\n})\nexport class AppDownloadsPage implements OnInit {\n\n  downloads=[];\n  isShowingLoader = true;\n  errorMsg: any;\n  canTryAgain: any = false;\n\n  constructor(public modalCtrl:ModalController,public getAppsService:GetAppsListService,public utils:UtilService,\n              public translate:TranslateService,public logger:LoggerServiceProvider, private config: ConfigProvider) {\n    this.utils.analytics(\"appDownloads\");\n    this.config.currentPage.pageName = \"AppDownloadsPage\";\n  }\n\n  ngOnInit() {\n    this.logger.log('ionViewDidLoad AppDownloadsPage');\n    this.getAppsList();\n  }\n\n\n  getAppsList(){\n    if (this.utils.isDeviceOnLine()) {\n      this.canTryAgain = false;\n      this.getAppsService.getApplist().then(\n        (response) => {\n          try{\n            this.isShowingLoader = false;\n            if (response['responseJSON'] && response['responseJSON']['statusCode'] == HttpStatus.OK) {\n              this.downloads = (response['responseJSON']['array']);\n              if (!(this.downloads.length > 0)) {\n                this.errorMsg = this.translate.instant('generic_msgs.no_data');\n              }\n            } else {\n              this.errorMsg = response['responseJSON']['error_description'];\n            }\n          }catch(e){\n            this.isShowingLoader = false;\n            this.canTryAgain = true;\n            this.errorMsg = this.translate.instant('generic_msgs.server_err');\n          }\n        },\n        (error) => {\n          this.isShowingLoader = false;\n          this.canTryAgain = true;\n          this.errorMsg = this.utils.handleServiceException(error);\n        }\n      );\n    } else {\n      this.isShowingLoader = false;\n      this.canTryAgain = true;\n      this.errorMsg = this.translate.instant('generic_msgs.network_err');\n    }\n  }\n\n  /**\n   * @param appData - Selected App Data.\n   */\n  showDownload(appData) {\n    // let modal = this.modalCtrl.create(AppDownloadPopUpPage, {appData});\n    // modal.present();\n    // this.disableContentScroll(modal);\n    // return modal;\n  }\n\n    /** Disable the content scroll when modal is visible, issue only in iOS devices */\n  //   disableContentScroll(modal: Modal) {\n\n  //     if (!modal) {\n  //         return;\n  //     }\n\n  //     let elements: Array<any> = Array.from(document.querySelectorAll('.scroll-content'));\n\n  //     elements.forEach(element => {\n  //         element.style.overflowY = 'hidden';\n  //     });\n\n  //     modal.onDidDismiss(data => {\n  //         elements.forEach(element => {\n  //             element.style.overflowY = 'scroll';\n  //         });\n  //     });\n  // }\n\n}\n","\n<ion-header mode=\"ios\" >\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button style=\"padding-left:15px; font-size:0.7rem;\" text=\"\" icon=\"chevron-back-outline\"></ion-back-button>\n    </ion-buttons>\n    <ion-title class=\"bold-font\">{{\"downloads.download\" | translate }}</ion-title>\n   </ion-toolbar >\n  <ion-toolbar class=\"sub_title ion-no-padding\">\n    <ion-row class=\"subheader_bg\">\n        <ion-label class=\"sub-header\">{{\"downloads.sunlife_apps\" | translate }}</ion-label>\n    </ion-row>\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content padding class=\"app_bg2\" no-bounce>\n  <section class=\"spinnersection\" *ngIf=\"isShowingLoader\">\n      <ion-spinner  name=\"ios-small\"></ion-spinner>\n  </section>\n  <section class=\"errorMsgSection white_container_border_radius\"  *ngIf=\"!(downloads.length>0) && !isShowingLoader\">\n      <span>{{errorMsg}}</span>\n      <button *ngIf=\"canTryAgain\" (click)=\"getAppsList()\">{{\"generic_msgs.try_again\" | translate }}</button>\n  </section>\n  <div *ngIf=\"downloads.length>0\" class=\"text_color_base\">\n    <section class=\"white_container_border_radius\">\n      <ion-grid>\n          <ion-row>\n            <ion-col *ngFor=\"let appData of downloads\" size=\"6\" text-center (click)=\"showDownload(appData)\" class=\"heading\">\n              <img src=\"data:image/png;base64,{{appData.icon}}\" alt=\"...\"/>\n              <ion-label>\n                  {{appData.name}}\n              </ion-label>\n            </ion-col>\n          </ion-row>\n      </ion-grid>\n    </section>\n  </div>\n</ion-content>"],"names":["RouterModule","AppDownloadsPage","routes","path","component","AppDownloadsPageRoutingModule","forChild","imports","exports","CommonModule","FormsModule","IonicModule","TranslateModule","AppDownloadsPageModule","declarations","HttpStatus","i0","constructor","modalCtrl","getAppsService","utils","translate","logger","config","analytics","currentPage","pageName","ngOnInit","log","getAppsList","isDeviceOnLine","canTryAgain","getApplist","then","response","isShowingLoader","OK","downloads","length","errorMsg","instant","e","error","handleServiceException","showDownload","appData","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}